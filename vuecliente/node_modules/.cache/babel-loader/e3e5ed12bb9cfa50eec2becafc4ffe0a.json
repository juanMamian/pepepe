{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/ventanaLista/ListaNodos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/ventanaLista/ListaNodos.vue","mtime":1643654906499},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ListaNodos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,GAAA,MAAA,aAAA;AACA,SAAA,wBAAA,EAAA,qBAAA,QAAA,UAAA;AACA,OAAA,cAAA,MAAA,sBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,cAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAAA,EAAA,YAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,gCAAA,EAAA,OADA;AAEA,IAAA,kBAAA,EAAA,MAFA;AAGA,IAAA,UAAA,EAAA,KAHA;AAIA,IAAA,cAAA,EAAA,OAJA;AAKA,IAAA,WAAA,EAAA,OALA;AAMA,IAAA,SAAA,EAAA,OANA;AAOA,IAAA,UAAA,EAAA,MAPA;AAQA,IAAA,YAAA,EAAA,MARA;AASA,IAAA,QAAA,EAAA,MATA;AAUA,IAAA,gBAAA,EAAA,MAVA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAXA;AAeA,IAAA,wBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAfA,GAHA;AAuBA,EAAA,IAvBA,kBAuBA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,IADA;AAEA,MAAA,oBAAA,EAAA,IAFA;AAGA,MAAA,sBAAA,EAAA;AAHA,KAAA;AAKA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,IADA,EACA;AACA,MAAA,IAAA,CAAA,QAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,UAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,KAHA;AAIA,IAAA,yBAJA,qCAIA,YAJA,EAIA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,sBAAA,CAAA,YAAA;AACA,OAFA;AAGA,KARA;AASA,IAAA,YATA,wBASA,MATA,EASA;AACA,UAAA,eAAA,GAAA,QAAA,CAAA,cAAA,CAAA,gBAAA,MAAA,CAAA;AACA,UAAA,eAAA,GACA,eAAA,CAAA,qBAAA,GAAA,GAAA,GACA,KAAA,GAAA,CAAA,qBAAA,GAAA,GAFA;AAGA,WAAA,GAAA,CAAA,SAAA,GAAA,eAAA;AACA,KAfA;AAgBA,IAAA,aAhBA,yBAgBA,MAhBA,EAgBA;AAAA;;AACA,WAAA,yBAAA,CAAA,MAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,MAAA;;AACA,YAAA,KAAA,CAAA,kBAAA,IAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,MAAA;AACA;AACA,OALA;AAMA,KAxBA;AAyBA,IAAA,eAzBA,iCAyBA;AAAA,UAAA,gBAAA,QAAA,gBAAA;AAAA,UAAA,YAAA,QAAA,YAAA;AAAA,UAAA,cAAA,QAAA,cAAA;AACA,WAAA,gBAAA,GAAA,gBAAA;AACA,WAAA,oBAAA,GAAA,YAAA;AACA,WAAA,sBAAA,GAAA,cAAA;AACA,KA7BA;AA8BA,IAAA,iBA9BA,oCA8BA;AAAA;;AAAA,UAAA,YAAA,SAAA,YAAA;AAAA,UAAA,cAAA,SAAA,cAAA;AAAA,UAAA,KAAA,SAAA,KAAA;;AACA,UAAA,CAAA,KAAA,gBAAA,IAAA,CAAA,KAAA,sBAAA,EAAA;AACA;AACA;;AAEA,UAAA,YAAA,GAAA;AACA,QAAA,eAAA,EAAA,KAAA,gBADA;AAEA,QAAA,YAAA,EAAA,KAAA,oBAFA;AAGA,QAAA,cAAA,EAAA,KAAA,sBAHA;AAIA,QAAA,YAAA,EAAA,YAJA;AAKA,QAAA,cAAA,EAAA,cALA;AAMA,QAAA,KAAA,EAAA;AANA,OAAA;AAQA,WAAA,gBAAA,GAAA,IAAA;AACA,WAAA,sBAAA,GAAA,IAAA;AAGA,WAAA,OAAA,CACA,MADA,CACA;AACA,QAAA,QAAA,EAAA,GAAA,oBAyBA,wBAzBA,EA0BA,qBA1BA,CADA;AA6BA,QAAA,SAAA,EAAA;AA7BA,OADA,EAgCA,IAhCA,CAgCA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,YAAA,CAAA,eAAA;AACA,OAlCA,EAmCA,KAnCA,CAmCA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,kBAAA,KAAA;AACA,OArCA;AAsCA,KArFA;AAsFA,IAAA,oBAtFA,uCAsFA;AAAA,UAAA,SAAA,SAAA,SAAA;AAAA,UAAA,MAAA,SAAA,MAAA;AACA,MAAA,OAAA,CAAA,GAAA,4BAAA,SAAA,wBAAA,MAAA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,eACA,CAAA,CAAA,yBAAA,CAAA,SAAA,EAAA,MAAA,CADA;AAAA,OAAA;AAGA;AA3FA,GA9BA;AA2HA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,UAAA,gBAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CACA,UAAA,CAAA;AAAA,eACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,KAAA;AAAA,SAAA,EAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CADA;AAAA,OADA,EAGA,IAHA,CAGA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AAAA,SAAA,IAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AAAA,OAHA,CAAA;AAIA,aAAA,gBAAA;AACA;AAPA,GA3HA;AAoIA,EAAA,KAAA,EAAA;AACA,IAAA,gBADA,4BACA,iBADA,EACA;AACA,UAAA,CAAA,iBAAA,EAAA;AACA,aAAA,oBAAA,GAAA,IAAA;AACA,aAAA,sBAAA,GAAA,IAAA;AACA;AACA,KANA;AAOA,IAAA,gBAPA,4BAOA,KAPA,EAOA;AACA,WAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA;AATA;AApIA,CAAA","sourcesContent":["<template>\n  <div\n    id=\"listaNodos\"\n    @mousedown.stop=\"\"\n    @touchmove.stop=\"\"\n    @touchstart.stop=\"\"\n    @touchend.stop=\"\"\n    @mouseleave.stop=\"idNodoEnArrastre = null; tipoNodoSourceArrastre=null;\"\n    @mouseup.stop=\"idNodoEnArrastre = null; tipoNodoSourceArrastre=null;\"\n  >\n    <transition-group name=\"unfoldVertical\" tag=\"div\" id=\"laListaNodos\">\n      <nodo-vista-lista\n        v-for=\"(nodoPrimerNivel, index) of nodosPrimerNivel\"\n        ref=\"nodosEnLista\"\n        :id=\"'nodoEnLista' + nodoPrimerNivel.id\"\n        :key=\"'nodoLista' + nodoPrimerNivel.id\"\n        :esteNodo=\"nodoPrimerNivel\"\n        :idNodoSeleccionado=\"idNodoSeleccionado\"\n        :verCompletados=\"verCompletados\"\n        :verAsumidos=\"verAsumidos\"\n        :verVacios=\"verVacios\"\n        :modoLista=\"modoLista\"\n        :indiceNodosUnder=\"indiceNodosUnder\"\n        :idsNodosNeedingFetchMore=\"idsNodosNeedingFetchMore\"\n        :nodoSiendoArrastrado=\"idNodoEnArrastre\"\n        :usuarioResponsableAmplioNodoOver=\"usuarioResponsableAmplioNodoRoot\"\n        :idNodoOver=\"idNodoRoot\"\n        :tipoNodoOver=\"tipoNodoRoot\"\n        :index=\"index\"\n        @nodoSeleccionado=\"$emit('nodoSeleccionado', $event)\"\n        @nodosRenderizados=\"$emit('nodosRenderizados', $event)\"\n        @inicioArrastre=\"iniciarArrastre($event)\"\n        @finDeArrastre=\"finalizarArrastre\"\n        @toggleContenidoTodos=\"toggleContenidoTodos\"\n        @nodoEliminado=\"$emit('nodoEliminado', $event)\"\n        @meElimine=\"$emit('nodoEliminado', nodoPrimerNivel.id)\"\n        @nodoSolidaridadCreado=\"$emit('nodoSolidaridadCreado', $event)\"\n      />\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport { fragmentoNodoSolidaridad, fragmentoPersonaAtlas } from \"../frags\";\nimport NodoVistaLista from \"./NodoVistaLista.vue\";\nexport default {\n  components: { NodoVistaLista },\n  name: \"ListaNodos\",\n  props: {\n    usuarioResponsableAmplioNodoRoot: Boolean,\n    idNodoSeleccionado: String,\n    todosNodos: Array,\n    verCompletados: Boolean,\n    verAsumidos: Boolean,\n    verVacios: Boolean,\n    idNodoRoot: String,\n    tipoNodoRoot:String,\n    nodoRoot:Object,\n    indiceNodosUnder: Object,\n    modoLista: {\n      type: String,\n      default: \"todo\",\n    },\n    idsNodosNeedingFetchMore: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      idNodoEnArrastre: null,\n      idNodoSourceArrastre: null,\n      tipoNodoSourceArrastre:null,\n    };\n  },\n  methods: {\n    guardarChildren(nodo) {\n      nodo.children = this.nodosTodos.filter((n) => n.nodoParent === nodo.id);\n    },\n    desplegarCascadaHaciaNodo(idNodoTarget) {\n      this.$refs.nodosEnLista.forEach((nodo) => {\n        nodo.desplegarIfTargetUnder(idNodoTarget);\n      });\n    },\n    scrollToNodo(idNodo) {\n      const domSeleccionado = document.getElementById(\"nodoEnLista\" + idNodo);\n      const topSeleccionado =\n        domSeleccionado.getBoundingClientRect().top -\n        this.$el.getBoundingClientRect().top;\n      this.$el.scrollTop = topSeleccionado;\n    },\n    centrarEnItem(idNodo) {\n      this.desplegarCascadaHaciaNodo(idNodo);\n      this.$nextTick(() => {\n        this.scrollToNodo(idNodo);\n        if (this.idNodoSeleccionado != idNodo) {\n          this.$emit(\"nodoSeleccionado\", idNodo);\n        }\n      });\n    },\n    iniciarArrastre({ idNodoArrastrado, idNodoSource, tipoNodoSource }) {\n      this.idNodoEnArrastre = idNodoArrastrado;\n      this.idNodoSourceArrastre = idNodoSource;\n      this.tipoNodoSourceArrastre=tipoNodoSource;\n    },\n    finalizarArrastre({ idNodoTarget, tipoNodoTarget, index }) {\n      if (!this.idNodoEnArrastre || !this.tipoNodoSourceArrastre) {\n        return;\n      }\n\n      const infoArrastre = {\n        idNodoRequerido: this.idNodoEnArrastre,\n        idNodoSource: this.idNodoSourceArrastre,\n        tipoNodoSource: this.tipoNodoSourceArrastre,\n        idNodoTarget,\n        tipoNodoTarget,\n        index,\n      };\n      this.idNodoEnArrastre = null;\n      this.tipoNodoSourceArrastre=null;\n      \n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation (\n              $idNodoRequerido: ID!\n              $idNodoSource: ID!\n              $tipoNodoSource: String!\n              $idNodoTarget: ID!\n              $tipoNodoTarget: String!\n              $index: Int\n            ) {\n              transferirRequerimentoBetweenNodosSolidaridad(\n                idNodoRequerido: $idNodoRequerido\n                idNodoSource: $idNodoSource\n                tipoNodoSource: $tipoNodoSource\n                idNodoTarget: $idNodoTarget\n                tipoNodoTarget: $tipoNodoTarget\n                index: $index\n              ) {\n                nodosModificados{\n                  ...fragNodoSolidaridad                \n                }\n                usuariosModificados{\n                  ...fragPersonaAtlas\n                }\n              }\n            }\n            ${fragmentoNodoSolidaridad}\n            ${fragmentoPersonaAtlas}\n          `,\n          variables: infoArrastre,\n        })\n        .then(() => {\n          this.$emit(\"nodoSeleccionado\", infoArrastre.idNodoRequerido);\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n        });\n    },\n    toggleContenidoTodos({ contenido, estado }) {\n      console.log(`Setting en todos ${contenido}. Mostrar: ${estado}`);\n      this.$refs.nodosEnLista.forEach((n) =>\n        n.globalSetMostrarContenido(contenido, estado)\n      );\n    },\n  },\n  computed: {    \n    nodosPrimerNivel() {\n      var nodosPrimerNivel = this.todosNodos.filter(\n        (n) =>\n          this.nodoRoot.vinculos.map(v=>v.idRef).includes(n.id)\n      ).sort((a, b)=>this.nodoRoot.vinculos.findIndex(v=>v.idRef===a.id) - this.nodoRoot.vinculos.findIndex(v=>v.idRef===b.id));      \n      return nodosPrimerNivel;\n    },\n  },\n  watch: {\n    idNodoEnArrastre(idNodoEnArrastre) {\n      if (!idNodoEnArrastre) {\n        this.idNodoSourceArrastre = null;\n        this.tipoNodoSourceArrastre=null;\n      }\n    },\n    nodosPrimerNivel(nodos){\n      this.$emit(\"nodosRenderizados\", nodos.map(n=>n.id))\n    }\n  },\n};\n</script>\n\n<style scoped>\n#listaNodos {\n  left: 0%;\n  position: relative;\n  overflow: scroll;\n}\n#botonAbrir {\n  cursor: pointer;\n  opacity: 0.5;\n}\n#botonAbrir:hover {\n  opacity: 1;\n}\n\n#activarNodosUsuarioResponsable {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  cursor: pointer;\n}\n#barraConfiguracionListaNodos {\n  padding: 3px 10px;\n}\n.botonConfiguracion {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  border: 1px solid green;\n  background-color: green;\n  cursor: pointer;\n}\n\n.unfoldVertical-enter,\n.unfoldVertical-leave-to {\n  height: 0px;\n}\n.unfoldVertical-enter-active,\n.unfoldVertical-leave-active {\n  transition: height 0.1s;\n}\n</style>"],"sourceRoot":"src/components/atlasSolidaridad/ventanaLista"}]}