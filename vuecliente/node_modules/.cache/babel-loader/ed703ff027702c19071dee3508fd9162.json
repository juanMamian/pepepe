{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/homeNodo/tablaAdministracion/TablaAdministracion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/homeNodo/tablaAdministracion/TablaAdministracion.vue","mtime":1643654906499},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TablaAdministracion.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"tablaAdministracion\">\n    <div id=\"barraSuperior\">\n      <div id=\"contenedorBotonesCrear\">\n        <div id=\"bloqueMovimientosDinero\" class=\"bloqueCrearItems\">\n          <div\n            class=\"botonBarraSuperior boton\"\n            :style=\"{ opacity: mostrarMovimientosDinero ? 1 : 0.5 }\"\n            :title=\"\n              mostrarMovimientosDinero\n                ? 'Ocultar movimientos de dinero'\n                : 'Mostrar movimientos de dinero'\n            \"\n            @click.stop=\"mostrarMovimientosDinero = !mostrarMovimientosDinero\"\n          >\n            <img src=\"@/assets/iconos/receipt.svg\" alt=\"Factura\" />\n          </div>\n          <div\n            class=\"botonBarraSuperior boton\"\n            :style=\"{ opacity: mostrarMovimientosArbol ? 1 : 0.5 }\"\n            :title=\"\n              mostrarMovimientosDinero\n                ? 'Ocultar movimientos de sub-nodos'\n                : 'Mostrar movimientos de sub-nodos'\n            \"\n            @click.stop=\"mostrarMovimientosArbol = !mostrarMovimientosArbol\"\n          >\n            <img src=\"@/assets/iconos/network.svg\" alt=\"Arbol\" />\n          </div>\n          <div\n            class=\"botonBarraSuperior boton\"\n            v-show=\"!creandoNuevoMovimiento\"\n          >\n            <img\n              src=\"@/assets/iconos/plusCircle.svg\"\n              alt=\"Mas\"\n              title=\"Crear nuevo movimiento de dinero\"\n              @click.stop=\"crearNuevoItemMovimientoDinero\"\n            />\n          </div>\n          <loading texto=\"\" v-show=\"creandoNuevoMovimiento\" />\n        </div>\n\n        <div id=\"bloqueEventos\" class=\"bloqueCrearItems\">\n          <div\n            class=\"botonBarraSuperior boton\"\n            :style=\"{ opacity: mostrarEventos ? 1 : 0.5 }\"\n            :title=\"mostrarEventos ? 'Ocultar eventos' : 'Mostrar eventos'\"\n            @click.stop=\"mostrarEventos = !mostrarEventos\"\n          >\n            <img\n              src=\"@/assets/iconos/exclamationCircle.svg\"\n              alt=\"Exclamación\"\n            />\n          </div>\n          <div\n            class=\"botonBarraSuperior boton\"\n            :style=\"{ opacity: mostrarEventosArbol ? 1 : 0.5 }\"\n            :title=\"\n              mostrarEventos\n                ? 'Ocultar eventos de sub-nodos'\n                : 'Mostrar eventos de sub-nodos'\n            \"\n            @click.stop=\"mostrarEventosArbol = !mostrarEventosArbol\"\n          >\n            <img src=\"@/assets/iconos/network.svg\" alt=\"Arbol\" />\n          </div>\n          <div class=\"botonBarraSuperior boton\" v-show=\"!creandoNuevoEvento\">\n            <img\n              src=\"@/assets/iconos/plusCircle.svg\"\n              alt=\"Mas\"\n              title=\"Crear nuevo evento\"\n              @click.stop=\"crearNuevoItemEvento\"\n            />\n          </div>\n          <loading texto=\"\" v-show=\"creandoNuevoEvento\" />\n        </div>\n      </div>\n    </div>\n\n    <div id=\"laTabla\">\n      <div class=\"campoItem\" v-for=\"item of items\" :key=\"item.id\">\n        <item-tabla-movimiento-dinero\n          :usuarioResponsableAmplioNodo=\"usuarioResponsableAmplioNodo\"\n          :idNodo=\"idNodo\"\n          :esteMovimiento=\"item\"\n          v-if=\"item.__typename === 'MovimientoDineroNodoSolidaridad'\"\n          @meElimine=\"eliminarMovimientoCache(item.id)\"\n        />\n        <item-tabla-evento\n          :esteEvento=\"item\"\n          :usuarioResponsableAmplioNodo=\"usuarioResponsableAmplioNodo\"\n          :idNodo=\"idNodo\"\n          :esteMovimiento=\"item\"\n          v-if=\"item.__typename === 'EventoNodoSolidaridad'\"\n          @meElimine=\"eliminarEventoCache(item.id)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport {\n  fragmentoEventoNodoSolidaridad,\n  fragmentoMovimientoDineroNodoSolidaridad,\n} from \"../../frags\";\nimport ItemTablaMovimientoDinero from \"../tablaAdministracion/ItemTablaMovimientoDinero.vue\";\nimport Loading from \"../../../utilidades/Loading.vue\";\nimport ItemTablaEvento from \"../tablaAdministracion/ItemTablaEvento.vue\";\nimport {QUERY_ESTE_NODO} from \"../HomeNodo.vue\"\nexport default {\n  components: { ItemTablaMovimientoDinero, Loading, ItemTablaEvento },\n  name: \"TablaAdministracion\",\n\n  props: {\n    movimientos: Array,\n    eventos: Array,\n    idNodo: String,\n    usuarioResponsableAmplioNodo: Boolean,\n    subNodos: Array,\n  },\n  data() {\n    return {\n      mostrarMovimientosDinero: true,\n      creandoNuevoMovimiento: false,\n      mostrarMovimientosArbol:true,\n\n      mostrarEventos: true,\n      creandoNuevoEvento: false,\n      mostrarEventosArbol:true,\n      \n    };\n  },\n  methods: {\n    crearNuevoItemMovimientoDinero() {\n      this.creandoNuevoMovimiento = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!) {\n              crearNuevoMovimientoDineroNodoSolidaridad(idNodo: $idNodo) {\n                ...fragMovimientoDineroNodoSolidaridad\n              }\n            }\n            ${fragmentoMovimientoDineroNodoSolidaridad}\n          `,\n          variables: {\n            idNodo: this.$route.params.id,\n          },\n        })\n        .then(({ data: { crearNuevoMovimientoDineroNodoSolidaridad } }) => {\n          const store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_ESTE_NODO,\n            variables: {\n              idNodo: this.idNodo\n            },\n          });\n\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n          var movimientosDinero = nuevoCache.nodoSolidaridad.movimientosDinero;\n\n          const indexN = movimientosDinero.findIndex(\n            (mv) => mv.id === crearNuevoMovimientoDineroNodoSolidaridad.id\n          );\n          if (indexN === -1) {\n            movimientosDinero.push(crearNuevoMovimientoDineroNodoSolidaridad);\n            store.writeQuery({\n              query: QUERY_ESTE_NODO,\n              variables: {\n                idNodo: this.idNodo\n              },\n              data: nuevoCache,\n            });\n          }\n          this.creandoNuevoMovimiento = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.creandoNuevoMovimiento = false;\n        });\n    },\n    crearNuevoItemEvento() {\n      this.creandoNuevoEvento = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!) {\n              crearNuevoEventoNodoSolidaridad(idNodo: $idNodo) {\n                ...fragEventoNodoSolidaridad\n              }\n            }\n            ${fragmentoEventoNodoSolidaridad}\n          `,\n          variables: {\n            idNodo: this.$route.params.id,\n          },\n        })\n        .then(({ data: { crearNuevoEventoNodoSolidaridad } }) => {\n          const store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_ESTE_NODO,\n            variables: {\n              idNodo: this.idNodo\n            },\n          });\n\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n          var eventos = nuevoCache.nodoSolidaridad.eventos;\n\n          const indexN = eventos.findIndex(\n            (ev) => ev.id === crearNuevoEventoNodoSolidaridad.id\n          );\n          if (indexN === -1) {\n            eventos.push(crearNuevoEventoNodoSolidaridad);\n            store.writeQuery({\n              query: QUERY_ESTE_NODO,\n              variables: {\n                idNodo: this.idNodo\n              },\n              data: nuevoCache,\n            });\n          }\n          this.creandoNuevoEvento = false;\n\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.creandoNuevoEvento = false;\n        });\n    },\n    eliminarMovimientoCache(idMovimientoEliminado){\n      console.log(`Eliminando mov de cache`);\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        query: QUERY_ESTE_NODO,\n        variables: {\n          idNodo: this.idNodo,\n        },\n      });\n\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      var movimientosDinero = nuevoCache.nodoSolidaridad.movimientosDinero;\n\n      const indexN = movimientosDinero.findIndex(\n        (md) => md.id === idMovimientoEliminado\n      );\n      if (indexN > -1) {\n        movimientosDinero.splice(indexN, 1);\n        store.writeQuery({\n          query: QUERY_ESTE_NODO,\n          variables: {\n            idNodo: this.idNodo,\n          },\n          data: nuevoCache,\n        });\n      }\n      \n    },\n    eliminarEventoCache(idEventoEliminado){\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        query: QUERY_ESTE_NODO,\n        variables: {\n          idNodo: this.idNodo,\n        },\n      });\n\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      var eventos = nuevoCache.nodoSolidaridad.eventos;\n\n      const indexN = eventos.findIndex(\n        (e) => e.id === idEventoEliminado\n      );\n      if (indexN > -1) {\n        eventos.splice(indexN, 1);\n        store.writeQuery({\n          query: QUERY_ESTE_NODO,\n          variables: {\n            idNodo: this.idNodo,\n          },\n          data: nuevoCache,\n        });\n      }\n      \n    }\n  },\n  computed: {\n    items() {\n      var items = [];\n      if (this.mostrarMovimientosDinero) {\n        items = items.concat(this.movimientos);\n        if(this.mostrarMovimientosArbol){\n          items=items.concat(this.movimientosDineroSubnodos);\n        }\n      }\n      if (this.mostrarEventos) {\n        items = items.concat(this.eventos);\n        if(this.mostrarEventosArbol){\n          items=items.concat(this.eventosSubnodos);\n        }\n      }\n      items.sort((a, b) => Date.parse(a.fecha) - Date.parse(b.fecha));\n      return items;\n    },\n    movimientosDineroSubnodos() {\n      var todosMovimientos = [];\n      this.subNodos.forEach((subnodo) => {\n        todosMovimientos.push(\n          ...subnodo.movimientosDinero.map((md) => {\n            return {\n              ...md,\n              nodoOwner: {\n                id: subnodo.id,\n                nombre: subnodo.nombre,\n                tipoNodo: subnodo.tipoNodo,\n              },\n            };\n          })\n        );\n      });\n\n      return todosMovimientos;\n    },\n    eventosSubnodos() {\n      var todosEventos = [];\n      this.subNodos.forEach((subnodo) => {\n        todosEventos.push(\n          ...subnodo.eventos.map((ev) => {\n            return {\n              ...ev,\n              nodoOwner: {\n                id: subnodo.id,\n                nombre: subnodo.nombre,\n                tipoNodo: subnodo.tipoNodo,\n              },\n            };\n          })\n        );\n      });\n\n      return todosEventos;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#barraSuperior {\n  display: flex;\n  margin-bottom: 25px;\n}\n.botonBarraSuperior {\n  margin: 0px 10px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n  opacity: 0.7;\n}\n.botonBarraSuperior:hover {\n  opacity: 1;\n}\n.botonBarraSuperior img {\n  width: 100%;\n  height: 100%;\n}\n#contenedorBotonesCrear {\n  margin-left: auto;\n}\n.bloqueCrearItems {\n  display: flex;\n  margin-bottom: 10px;\n  padding-right: 1vw;\n}\n\n.bloqueCrearItems .boton {\n  margin: 0px 5px;\n}\n</style>"],"sourceRoot":"src/components/atlasSolidaridad/homeNodo/tablaAdministracion"}]}