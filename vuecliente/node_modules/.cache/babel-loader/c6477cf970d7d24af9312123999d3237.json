{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/eslint-loader/index.js??ref--13-0!/home/vida1/webpj/pepepe/vuecliente/src/apollo.js","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/apollo.js","mtime":1644587546118},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvdmlkYTEvd2VicGovcGVwZXBlL3Z1ZWNsaWVudGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgeyBBcG9sbG9DbGllbnQsIEh0dHBMaW5rLCBJbk1lbW9yeUNhY2hlLCBzcGxpdCB9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2NvcmUnOwppbXBvcnQgeyBjcmVhdGVBcG9sbG9Qcm92aWRlciB9IGZyb20gJ0B2dWUvYXBvbGxvLW9wdGlvbic7CmltcG9ydCB7IFdlYlNvY2tldExpbmsgfSBmcm9tICJAYXBvbGxvL2NsaWVudC9saW5rL3dzIjsKaW1wb3J0IHsgZ2V0TWFpbkRlZmluaXRpb24gfSBmcm9tICJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMiOwppbXBvcnQgeyBzZXRDb250ZXh0IH0gZnJvbSAiQGFwb2xsby9jbGllbnQvbGluay9jb250ZXh0IjsKaW1wb3J0IHsgb25FcnJvciB9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2xpbmsvZXJyb3InOwppbXBvcnQgcG9zc2libGVUeXBlcyBmcm9tICIuLi9wb3NzaWJsZVR5cGVzLmpzb24iOwppbXBvcnQgeyB0eXBlRGVmcywgcmVzb2x2ZXJzIH0gZnJvbSAiLi9hcG9sbG9TdG9yZS9TY2hlbWEiOwp2YXIgY2FjaGUgPSBuZXcgSW5NZW1vcnlDYWNoZSh7CiAgcG9zc2libGVUeXBlczogcG9zc2libGVUeXBlcwp9KTsKCnZhciBnZXRUb2tlbiA9IGZ1bmN0aW9uIGdldFRva2VuKCkgewogIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKfTsKCmV4cG9ydCB2YXIgc2VydmVyVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICdodHRwczovL3BlLXBlLXBlLmhlcm9rdWFwcC5jb20nIDogJ2h0dHA6Ly8xOTIuMTY4LjEuMTA1OjMwMDAnOwpleHBvcnQgdmFyIHdzU2VydmVyVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICd3c3M6Ly8nICsgc2VydmVyVXJsLnN1YnN0cig3KSArICcvc3Vic2NyaXBjaW9uZXMnIDogJ3dzOi8vJyArIHNlcnZlclVybC5zdWJzdHIoNykgKyAnL3N1YnNjcmlwY2lvbmVzJzsKdmFyIGh0dHBMaW5rID0gbmV3IEh0dHBMaW5rKHsKICB1cmk6IHNlcnZlclVybCArICIvZ3JhcGhxbCIKfSk7IC8vY29uc29sZS5sb2coYERpcmVjY2lvbiBzdWJzY3JpcGNpb25lcyAke3dzU2VydmVyVXJsfWApOwoKdmFyIHdzTGluayA9IG5ldyBXZWJTb2NrZXRMaW5rKHsKICB1cmk6IHdzU2VydmVyVXJsLAogIG9wdGlvbnM6IHsKICAgIHJlY29ubmVjdDogdHJ1ZSwKICAgIGNvbm5lY3Rpb25QYXJhbXM6IHsKICAgICAgaGVhZGVyczogewogICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQoZ2V0VG9rZW4oKSkKICAgICAgfQogICAgfQogIH0KfSk7CnZhciBhdXRoTGluayA9IHNldENvbnRleHQoZnVuY3Rpb24gKF8sIF9yZWYpIHsKICB2YXIgaGVhZGVycyA9IF9yZWYuaGVhZGVyczsKICByZXR1cm4gewogICAgaGVhZGVyczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBoZWFkZXJzKSwge30sIHsKICAgICAgYXV0aG9yaXphdGlvbjogZ2V0VG9rZW4oKQogICAgfSkKICB9Owp9KTsKdmFyIGVycm9yTGluayA9IG9uRXJyb3IoZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIGdyYXBoUUxFcnJvcnMgPSBfcmVmMi5ncmFwaFFMRXJyb3JzLAogICAgICBuZXR3b3JrRXJyb3IgPSBfcmVmMi5uZXR3b3JrRXJyb3I7CgogIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7CiAgICBpZiAoZ3JhcGhRTEVycm9ycykgZ3JhcGhRTEVycm9ycy5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgIHZhciBtZXNzYWdlID0gX3JlZjMubWVzc2FnZSwKICAgICAgICAgIGxvY2F0aW9ucyA9IF9yZWYzLmxvY2F0aW9ucywKICAgICAgICAgIHBhdGggPSBfcmVmMy5wYXRoOwogICAgICByZXR1cm4gY29uc29sZS5sb2coIltHcmFwaFFMIGVycm9yXTogTWVzc2FnZTogIi5jb25jYXQobWVzc2FnZSwgIiwgTG9jYXRpb246ICIpLmNvbmNhdChsb2NhdGlvbnMsICIsIFBhdGg6ICIpLmNvbmNhdChwYXRoKSk7CiAgICB9KTsKICAgIGlmIChuZXR3b3JrRXJyb3IpIGNvbnNvbGUubG9nKCJbTmV0d29yayBlcnJvcl06ICIuY29uY2F0KG5ldHdvcmtFcnJvcikpOwogIH0KfSk7CnZhciBsaW5rID0gZXJyb3JMaW5rLmNvbmNhdChhdXRoTGluaykuY29uY2F0KGh0dHBMaW5rKTsKdmFyIGZpbmFsTGluayA9IHNwbGl0KCAvLyBzcGxpdCBiYXNlZCBvbiBvcGVyYXRpb24gdHlwZQpmdW5jdGlvbiAoX3JlZjQpIHsKICB2YXIgcXVlcnkgPSBfcmVmNC5xdWVyeTsKICB2YXIgZGVmaW5pdGlvbiA9IGdldE1haW5EZWZpbml0aW9uKHF1ZXJ5KTsKICByZXR1cm4gZGVmaW5pdGlvbi5raW5kID09PSAnT3BlcmF0aW9uRGVmaW5pdGlvbicgJiYgZGVmaW5pdGlvbi5vcGVyYXRpb24gPT09ICdzdWJzY3JpcHRpb24nOwp9LCB3c0xpbmssIGxpbmspOwpleHBvcnQgdmFyIGFwb2xsb0NsaWVudCA9IG5ldyBBcG9sbG9DbGllbnQoewogIGxpbms6IGZpbmFsTGluaywKICBjYWNoZTogY2FjaGUsCiAgdHlwZURlZnM6IHR5cGVEZWZzLAogIHJlc29sdmVyczogcmVzb2x2ZXJzLAogIGNvbm5lY3RUb0RldlRvb2xzOiB0cnVlCn0pOwpleHBvcnQgdmFyIGFwb2xsb1Byb3ZpZGVyID0gY3JlYXRlQXBvbGxvUHJvdmlkZXIoewogIGRlZmF1bHRDbGllbnQ6IGFwb2xsb0NsaWVudAp9KTs="},{"version":3,"sources":["/home/vida1/webpj/pepepe/vuecliente/src/apollo.js"],"names":["ApolloClient","HttpLink","InMemoryCache","split","createApolloProvider","WebSocketLink","getMainDefinition","setContext","onError","possibleTypes","typeDefs","resolvers","cache","getToken","localStorage","getItem","serverUrl","process","env","NODE_ENV","wsServerUrl","substr","httpLink","uri","wsLink","options","reconnect","connectionParams","headers","Authorization","authLink","_","authorization","errorLink","graphQLErrors","networkError","map","message","locations","path","console","log","link","concat","finalLink","query","definition","kind","operation","apolloClient","connectToDevTools","apolloProvider","defaultClient"],"mappings":"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","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache, split } from '@apollo/client/core'\nimport { createApolloProvider } from '@vue/apollo-option'\n\nimport {WebSocketLink} from \"@apollo/client/link/ws\"\n\nimport {getMainDefinition} from \"@apollo/client/utilities\"\nimport {setContext} from \"@apollo/client/link/context\"\nimport { onError } from '@apollo/client/link/error'\n\nimport possibleTypes from \"../possibleTypes.json\"\nimport { typeDefs, resolvers} from \"./apolloStore/Schema\"\n\n\nconst cache= new InMemoryCache({\n  possibleTypes\n});\n\n\nlet getToken = ()=> localStorage.getItem('token');\n\n\nexport const serverUrl=process.env.NODE_ENV === 'production'\n? 'https://pe-pe-pe.herokuapp.com'\n: 'http://192.168.1.105:3000'\n\n\n\nexport const wsServerUrl=process.env.NODE_ENV === 'production'\n? 'wss://'+serverUrl.substr(7)+'/subscripciones'\n: 'ws://'+serverUrl.substr(7)+'/subscripciones'\n\n\nconst httpLink = new HttpLink({\n  uri: serverUrl+\"/graphql\"\n});\n\n//console.log(`Direccion subscripciones ${wsServerUrl}`);\n\nconst wsLink = new WebSocketLink({\n  uri: wsServerUrl,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    }\n  },\n})\n\nconst authLink=setContext((_, {headers})=>{    \n    return {\n        headers:{\n            ...headers,\n            authorization: getToken()\n        }\n    }\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (graphQLErrors)\n      graphQLErrors.map(({ message, locations, path }) =>\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        ),\n      )\n\n    if (networkError) console.log(`[Network error]: ${networkError}`)\n  }\n});\n\nconst link=errorLink.concat(authLink).concat(httpLink);\n\n\nconst finalLink = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n  },\n  wsLink,\n  link\n)\n\nexport const apolloClient=new ApolloClient({\n  link:finalLink,\n  cache,\n  typeDefs,\n  resolvers,\n  connectToDevTools:true,\n});\n\n\nexport const apolloProvider=createApolloProvider({\n  defaultClient:apolloClient\n});\n\n\n"]}]}