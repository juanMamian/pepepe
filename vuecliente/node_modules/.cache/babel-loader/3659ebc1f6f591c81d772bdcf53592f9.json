{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/CanvasDiagramaFlujo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/CanvasDiagramaFlujo.vue","mtime":1643654906503},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CanvasDiagramaFlujo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"canvasDiagramaFlujo\">\n    <canvas\n      id=\"canvasTodosVinculos\"\n      ref=\"canvasTodosVinculos\"\n      :style=\"[offsetCanvasTodosVinculos]\"\n      class=\"canvas\"\n    ></canvas>\n    <canvas\n      id=\"canvasVinculosSeleccionado\"\n      ref=\"canvasVinculosSeleccionado\"\n      :style=\"[sizeCanvasTodosVinculos]\"\n      class=\"canvas\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CanvasDiagramaFlujo\",\n  props: {\n    todosNodos: Array,\n    factorZoom:Number,\n    nodoSeleccionado: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      sizeCanvasTodosVinculos: {\n        width: 0,\n        height: 0,\n      },\n    };\n  },\n  methods: {\n    crearImagenTodosVinculos: function () {\n      console.log(`Creando imagen todos vínculos`);\n      if (this.todosNodos.length <= 1) return;\n      var lapiz = this.$refs.canvasTodosVinculos.getContext(\"2d\");\n      //Calcular el tamaño del diagrama      \n      const posicionCanvas={\n        x: this.esquinasCanvasTodosVinculos.x1,\n        y: this.esquinasCanvasTodosVinculos.y1,\n      }\n\n      lapiz.canvas.width = this.esquinasCanvasTodosVinculos.x2 - this.esquinasCanvasTodosVinculos.x1;\n      lapiz.canvas.height = this.esquinasCanvasTodosVinculos.y2 - this.esquinasCanvasTodosVinculos.y1;   \n\n      lapiz.lineWidth = 1;\n      lapiz.clearRect(0, 0, lapiz.canvas.width, lapiz.canvas.height);\n      lapiz.beginPath();\n      lapiz.strokeStyle = \"#b3b3b3\";\n      for (let nodo of this.todosNodos) {\n        for (let vinculo of nodo.vinculos) {\n          if (!this.todosNodos.some((n) => n.id == vinculo.idRef)) continue;\n\n          this.dibujarLineaEntreNodos(\n            this.todosNodos.find((nodo) => nodo.id == vinculo.idRef),\n            nodo,\n            lapiz,\n            posicionCanvas\n          );\n        }\n      }\n      lapiz.stroke();\n    },\n    crearImagenVinculosSeleccionado: function () {\n      this.lapiz = this.$refs.canvasVinculosSeleccionado.getContext(\"2d\");\n      this.lapiz.clearRect(\n        0,\n        0,\n        this.lapiz.canvas.width,\n        this.lapiz.canvas.height\n      );\n\n      if (this.todosNodos.some((n) => n.id == this.nodoSeleccionado.id)) {\n        //Lineas verdes de posiblidades\n        this.lapiz.beginPath();\n        this.lapiz.lineWidth = 2;\n        this.lapiz.strokeStyle = \"#008000\";\n\n        //Lineas verdes de salida\n        for (let vinculo of this.nodoSeleccionado.vinculos) {\n          if (!this.todosNodos.some((n) => n.id == vinculo.idRef)) {\n            console.log(`ALERTA. Vinculo a ${vinculo.idRef} huerfano`);\n            continue;\n          }\n\n          let otroNodo = this.todosNodos.find((n) => n.id == vinculo.idRef);\n          this.dibujarLineaEntreNodos(otroNodo, this.nodoSeleccionado);\n        }\n        this.lapiz.stroke();\n        //Lineas rojas de dependencias\n\n        \n      }\n    },\n    dibujarLineaEntreNodos(nodoFrom, nodoTo, lapiz, posicionCanvas) {\n      let inicio = {\n        x: (nodoFrom.coords.x*this.factorZoom)-posicionCanvas.x,\n        y: (nodoFrom.coords.y*this.factorZoom)-posicionCanvas.y,\n      };\n      let final = {\n        x: (nodoTo.coords.x*this.factorZoom)-posicionCanvas.x,\n        y: (nodoTo.coords.y*this.factorZoom)-posicionCanvas.y,\n      };\n\n      const distanciaVertical=final.y-inicio.y;\n      const largoCodo=Math.round(distanciaVertical*0.5);\n\n      const primeraEsquina={\n        x:inicio.x,\n        y:inicio.y+largoCodo\n      }\n\n      const segundaEsquina={\n        x:final.x,\n        y:final.y-largoCodo\n      }\n\n      lapiz.moveTo(inicio.x, inicio.y);\n      lapiz.lineTo(primeraEsquina.x, primeraEsquina.y);\n      lapiz.lineTo(segundaEsquina.x, segundaEsquina.y);\n      lapiz.lineTo(final.x, final.y);\n      //ahora la flechita\n      // let centro = {\n      //   x: (final.x + inicio.x) / 2,\n      //   y: (final.y + inicio.y) / 2,\n      // };\n      // let longitudAla = 7;\n      // let anguloVinculo = Math.atan(\n      //   (final.y - inicio.y) / (final.x - inicio.x)\n      // );\n      // if (final.y - inicio.y < 0 && final.x - inicio.x < 0)\n      //   anguloVinculo += Math.PI;\n      // if (final.y - inicio.y > 0 && final.x - inicio.x < 0)\n      //   anguloVinculo += Math.PI;\n      // //anguloVinculo=anguloVinculo*180/Math.PI;\n\n      // let puntaAlaIzquierda = {\n      //   x: centro.x + longitudAla * Math.cos(anguloVinculo - (3 * Math.PI) / 4),\n      //   y: centro.y + longitudAla * Math.sin(anguloVinculo - (3 * Math.PI) / 4),\n      // };\n      // let puntaAlaDerecha = {\n      //   x: centro.x + longitudAla * Math.cos(anguloVinculo + (3 * Math.PI) / 4),\n      //   y: centro.y + longitudAla * Math.sin(anguloVinculo + (3 * Math.PI) / 4),\n      // };\n      // this.lapiz.moveTo(centro.x, centro.y);\n      // this.lapiz.lineTo(puntaAlaIzquierda.x, puntaAlaIzquierda.y);\n      // this.lapiz.moveTo(centro.x, centro.y);\n      // this.lapiz.lineTo(puntaAlaDerecha.x, puntaAlaDerecha.y);\n    },\n  },\n  computed:{\n    esquinasCanvasTodosVinculos(){\n      var nodosRelevantes=this.todosNodos;\n\n      if (nodosRelevantes.length <= 1) return {\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,        \n      };\n\n      let bordes = {};\n      bordes.top = nodosRelevantes.reduce((acc, n) => {\n        //console.log(`Reduciendo ${n.nombre} con coords: ${n.posicion}`);\n        return n.coords.y > acc ? n.coords.y : acc;\n      }, 0);\n      bordes.bot = nodosRelevantes.reduce((acc, n) => {\n        return n.coords.y < acc ? n.coords.y : acc;\n      }, 0);\n      bordes.left = nodosRelevantes.reduce((acc, n) => {\n        return n.coords.x < acc ? n.coords.x : acc;\n      }, 0);\n      bordes.right = nodosRelevantes.reduce((acc, n) => {\n        return n.coords.x > acc ? n.coords.x : acc;\n      }, 0);\n\n      return {\n        x1: bordes.left*this.factorZoom,\n        y1: bordes.bot*this.factorZoom,\n        x2: (bordes.right+2)*this.factorZoom,\n        y2: (bordes.top+2)*this.factorZoom\n      }\n    },\n    offsetCanvasTodosVinculos(){\n      return {\n        left:  this.esquinasCanvasTodosVinculos.x1 + \"px\",\n        top: this.esquinasCanvasTodosVinculos.y1 + \"px\",\n\n        width: (this.esquinasCanvasTodosVinculos.x2-this.esquinasCanvasTodosVinculos.x1) + \"px\",\n        height: (this.esquinasCanvasTodosVinculos.y2-this.esquinasCanvasTodosVinculos.y1) + \"px\",\n      }\n    }\n\n  },\n  watch: {\n    todosNodos: function () {\n      if (this.todosNodos.length < 1) return;\n      this.crearImagenTodosVinculos();\n      this.crearImagenVinculosSeleccionado();\n    },\n    nodoSeleccionado: function () {\n      this.crearImagenVinculosSeleccionado();\n    },\n    factorZoom(){\n      this.crearImagenTodosVinculos();\n      this.crearImagenVinculosSeleccionado();\n    },\n\n  },\n  mounted() {\n    this.montado = true;\n    this.crearImagenTodosVinculos();\n    this.crearImagenVinculosSeleccionado();    \n  },\n  \n\n};\n</script>\n\n<style scoped>\n#canvasDiagramaFlujo{\n  position: relative;\n}\n.canvas{\n  position: absolute\n}\n</style>"],"sourceRoot":"src/components/proyecto"}]}