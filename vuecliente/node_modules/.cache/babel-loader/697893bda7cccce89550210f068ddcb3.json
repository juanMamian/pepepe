{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/EnlacesNodoConocimiento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/EnlacesNodoConocimiento.vue","mtime":1675431779461},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC5oeXBvdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVubGFjZXNOb2RvQ29ub2NpbWllbnRvIiwKICBwcm9wczogewogICAgeW86IE9iamVjdCwKICAgIGlkTm9kb1NlbGVjY2lvbmFkbzogU3RyaW5nLAogICAgaWRzTm9kb3NQcmV2aW9zU2VsZWNjaW9uYWRvOiBBcnJheSwKICAgIGlkc05vZG9zQ29udGludWFjaW9uU2VsZWNjaW9uYWRvOiBBcnJheSwKICAgIGNvbmVjdGFkb1NlbGVjY2lvbmFkbzogQm9vbGVhbiwKICAgIGVzdGVOb2RvOiBPYmplY3QsCiAgICB0b2Rvc05vZG9zOiBBcnJheSwKICAgIGZhY3Rvclpvb206IE51bWJlciwKICAgIGNhbGxpbmdQb3NpY2lvbmVzOiBCb29sZWFuLAogICAgbm9kb1NlbGVjY2lvbmFkbzogT2JqZWN0LAogICAgY2hpbGRTZWxlY2Npb25hZG86IEJvb2xlYW4sCiAgICBpZHNUb2Rvc05vZG9zUmVuZGVyOiBBcnJheSwKICAgIGVzcXVpbmFzRGlhZ3JhbWE6IE9iamVjdCwKICAgIHRyYW5zaWNpb25hclBvc2ljaW9uTm9kb3M6IEJvb2xlYW4sCiAgICBpZHNOb2Rvc1ByZXNlbnRlc0NhYmV6YTogQXJyYXksCiAgICByZWRpYnVqYXJFbmxhY2VzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVzcXVpbmFzU2VsZWNjaW9uYWRvOiB7CiAgICAgICAgeDE6IDAsCiAgICAgICAgeDI6IDAsCiAgICAgICAgeTE6IDAsCiAgICAgICAgeTI6IDAKICAgICAgfSwKICAgICAgcG9zaWNpb25TZWxlY2Npb25hZG86IHsKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAKICAgICAgfSwKICAgICAgZmFjdG9yRnVlcnphOiAxNSwKICAgICAgdmluY3Vsb3NHcmlzZXM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2V0VmluY3Vsb3NHcmlzZXM6IGZ1bmN0aW9uIHNldFZpbmN1bG9zR3Jpc2VzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coIkNhbGN1bGFuZG8gZmxlY2hhcyBkZSB2w61uY3Vsb3MiKTsKICAgICAgdmFyIHZHcmlzZXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZXN0ZU5vZG8udmluY3Vsb3MuZmlsdGVyKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIHYucm9sID09PSAidGFyZ2V0IiAmJiBfdGhpcy5pZHNUb2Rvc05vZG9zUmVuZGVyLmluY2x1ZGVzKHYuaWRSZWYpOwogICAgICB9KSkpOwogICAgICB2R3Jpc2VzLmZvckVhY2goZnVuY3Rpb24gKHYpIHsKICAgICAgICB2YXIgY29vcmRzRnJvbSA9IF90aGlzLnRvZG9zTm9kb3MuZmluZChmdW5jdGlvbiAobikgewogICAgICAgICAgcmV0dXJuIG4uaWQgPT09IHYuaWRSZWY7CiAgICAgICAgfSkuY29vcmRzOwoKICAgICAgICB2YXIgcGFyYWxlbGFzID0gewogICAgICAgICAgeDogY29vcmRzRnJvbS54IC0gX3RoaXMucG9zTm9kby54LAogICAgICAgICAgeTogY29vcmRzRnJvbS55IC0gX3RoaXMucG9zTm9kby55CiAgICAgICAgfTsKICAgICAgICB2YXIgYW5ndWxvID0gTWF0aC5QSSArIE1hdGguYXRhbjIocGFyYWxlbGFzLnksIHBhcmFsZWxhcy54KTsKICAgICAgICB2YXIgbW9kdWxvID0gTWF0aC5oeXBvdChwYXJhbGVsYXMueCwgcGFyYWxlbGFzLnkpOwoKICAgICAgICB2YXIgZXNFbmxhY2VTdXBlcmFkbyA9IHYucm9sID09PSAidGFyZ2V0IiAmJiBfdGhpcy5pZHNOb2Rvc1ByZXNlbnRlc0NhYmV6YS5pbmNsdWRlcyhfdGhpcy5lc3RlTm9kby5pZCkgfHwgdi5yb2wgPT09ICJzb3VyY2UiICYmIF90aGlzLmlkc05vZG9zUHJlc2VudGVzQ2FiZXphLmluY2x1ZGVzKHYuaWRSZWYpOwoKICAgICAgICB2YXIgZXNFbmxhY2VQb3JTdXBlcmFyID0gdi5yb2wgPT09ICJzb3VyY2UiICYmICFfdGhpcy5pZHNOb2Rvc1ByZXNlbnRlc0NhYmV6YS5pbmNsdWRlcyhfdGhpcy5lc3RlTm9kby5pZCkgfHwgdi5yb2wgPT09ICJ0YXJnZXQiICYmIF90aGlzLmlkc05vZG9zUHJlc2VudGVzQ2FiZXphLmluY2x1ZGVzKHYuaWRSZWYpOwoKICAgICAgICB2YXIgZXNFbmxhY2VJbmFjY2VzaWJsZSA9ICFlc0VubGFjZVN1cGVyYWRvICYmICFlc0VubGFjZVBvclN1cGVyYXI7CiAgICAgICAgdmFyIGJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CgogICAgICAgIGlmIChlc0VubGFjZVBvclN1cGVyYXIpIHsKICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9ICJ2YXIoLS1hdGxhc0Nvbm9jaW1pZW50b0F2YWlsYWJsZSkiOwogICAgICAgIH0KCiAgICAgICAgaWYgKGVzRW5sYWNlSW5hY2Nlc2libGUpIHsKICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CiAgICAgICAgfQoKICAgICAgICBpZiAoZXNFbmxhY2VTdXBlcmFkbykgewogICAgICAgICAgYmFja2dyb3VuZENvbG9yID0gInZhcigtLWF0bGFzQ29ub2NpbWllbnRvQ2hlY2spIjsKICAgICAgICB9CgogICAgICAgIHYuaW5hY2Nlc2libGUgPSBlc0VubGFjZUluYWNjZXNpYmxlOwogICAgICAgIHYuZXN0aWxvID0gewogICAgICAgICAgdHJhbnNmb3JtOiAicm90YXRlKCIgKyBhbmd1bG8gKyAicmFkKSIsCiAgICAgICAgICB0b3A6IE1hdGgucm91bmQoKHBhcmFsZWxhcy55IC0gMSkgKiBfdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgICBsZWZ0OiBNYXRoLnJvdW5kKHBhcmFsZWxhcy54ICogX3RoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgICAgd2lkdGg6IE1hdGgucm91bmQobW9kdWxvICogX3RoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgICBib3JkZXJMZWZ0Q29sb3I6IGJhY2tncm91bmRDb2xvcgogICAgICAgIH07CiAgICAgIH0pOwogICAgICB0aGlzLnZpbmN1bG9zR3Jpc2VzID0gdkdyaXNlczsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb250aW51YWNpb25EZVNlbGVjY2lvbmFkbzogZnVuY3Rpb24gY29udGludWFjaW9uRGVTZWxlY2Npb25hZG8oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLm5vZG9TZWxlY2Npb25hZG8pIHJldHVybiBmYWxzZTsKICAgICAgaWYgKHRoaXMubm9kb1NlbGVjY2lvbmFkby52aW5jdWxvcy5zb21lKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIHYuaWRSZWYgPT09IF90aGlzMi5lc3RlTm9kby5pZDsKICAgICAgfSkpIHJldHVybiB0cnVlOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgZXN0aWxvUG9zaWNpb246IGZ1bmN0aW9uIGVzdGlsb1Bvc2ljaW9uKCkgewogICAgICB2YXIgcG9zWEFqdXN0YWRhID0gdGhpcy5lc3RlTm9kby5hdXRvQ29vcmRzLnggLSB0aGlzLmVzcXVpbmFzRGlhZ3JhbWEueDE7CiAgICAgIHZhciBwb3NZQWp1c3RhZGEgPSB0aGlzLmVzdGVOb2RvLmF1dG9Db29yZHMueSAtIHRoaXMuZXNxdWluYXNEaWFncmFtYS55MTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsZWZ0OiBwb3NYQWp1c3RhZGEgKiB0aGlzLmZhY3Rvclpvb20gKyAicHgiLAogICAgICAgIHRvcDogcG9zWUFqdXN0YWRhICogdGhpcy5mYWN0b3Jab29tICsgInB4IgogICAgICB9OwogICAgfSwKICAgIGVzdGlsb0Z1ZXJ6YUNvbGlzaW9uOiBmdW5jdGlvbiBlc3RpbG9GdWVyemFDb2xpc2lvbigpIHsKICAgICAgLy8gdmFyIHBhcmFsZWxhcz17CiAgICAgIC8vICAgeDogdGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5mdWVyemEqTWF0aC5jb3ModGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5kaXJlY2Npb24pLAogICAgICAvLyAgIHk6IHRoaXMuZXN0ZU5vZG8uZnVlcnphQ29saXNpb24uZnVlcnphKk1hdGguc2luKHRoaXMuZXN0ZU5vZG8uZnVlcnphQ29saXNpb24uZGlyZWNjaW9uKSwKICAgICAgLy8gfQogICAgICByZXR1cm4gewogICAgICAgIHRyYW5zZm9ybTogInJvdGF0ZSgiICsgdGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5kaXJlY2Npb24gKyAicmFkKSIsCiAgICAgICAgLy8gdG9wOiBNYXRoLnJvdW5kKChwYXJhbGVsYXMueSAtIDEpICogdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgLy8gbGVmdDogTWF0aC5yb3VuZChwYXJhbGVsYXMueCAqIHRoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgIHRvcDogIjBweCIsCiAgICAgICAgbGVmdDogIjBweCIsCiAgICAgICAgd2lkdGg6IE1hdGguY2VpbCh0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNvbGlzaW9uLmZ1ZXJ6YSAqIHRoaXMuZmFjdG9yRnVlcnphICogdGhpcy5mYWN0b3Jab29tKSArICJweCIKICAgICAgfTsKICAgIH0sCiAgICBlc3RpbG9GdWVyemFDZW50cm9NYXNhOiBmdW5jdGlvbiBlc3RpbG9GdWVyemFDZW50cm9NYXNhKCkgewogICAgICAvLyB2YXIgcGFyYWxlbGFzPXsKICAgICAgLy8gICB4OiB0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNlbnRyb01hc2EuZnVlcnphKk1hdGguY29zKHRoaXMuZXN0ZU5vZG8uZnVlcnphQ2VudHJvTWFzYS5kaXJlY2Npb24pLAogICAgICAvLyAgIHk6IHRoaXMuZXN0ZU5vZG8uZnVlcnphQ2VudHJvTWFzYS5mdWVyemEqTWF0aC5zaW4odGhpcy5lc3RlTm9kby5mdWVyemFDZW50cm9NYXNhLmRpcmVjY2lvbiksCiAgICAgIC8vIH0KICAgICAgcmV0dXJuIHsKICAgICAgICB0cmFuc2Zvcm06ICJyb3RhdGUoIiArIHRoaXMuZXN0ZU5vZG8uZnVlcnphQ2VudHJvTWFzYS5kaXJlY2Npb24gKyAicmFkKSIsCiAgICAgICAgLy8gdG9wOiBNYXRoLnJvdW5kKChwYXJhbGVsYXMueSAtIDEpICogdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgLy8gbGVmdDogTWF0aC5yb3VuZChwYXJhbGVsYXMueCAqIHRoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgIHRvcDogIjBweCIsCiAgICAgICAgbGVmdDogIjBweCIsCiAgICAgICAgd2lkdGg6IE1hdGgucm91bmQodGhpcy5lc3RlTm9kby5mdWVyemFDZW50cm9NYXNhLmZ1ZXJ6YSAqIHRoaXMuZmFjdG9yRnVlcnphICogdGhpcy5mYWN0b3Jab29tKSArICJweCIKICAgICAgfTsKICAgIH0sCiAgICBhbHRvVmluY3Vsb3M6IGZ1bmN0aW9uIGFsdG9WaW5jdWxvcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBoZWlnaHQ6IE1hdGguY2VpbCgxICogdGhpcy5mYWN0b3Jab29tKSArICJweCIKICAgICAgfTsKICAgIH0sCiAgICBzaXplRmxlY2hhOiBmdW5jdGlvbiBzaXplRmxlY2hhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGJvcmRlcldpZHRoOiBNYXRoLnJvdW5kKDcgKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IgogICAgICB9OwogICAgfSwKICAgIHBvc05vZG86IGZ1bmN0aW9uIHBvc05vZG8oKSB7CiAgICAgIHJldHVybiB0aGlzLmVzdGVOb2RvLmNvb3JkczsKICAgIH0sCiAgICBzZWxlY2Npb25hZG86IGZ1bmN0aW9uIHNlbGVjY2lvbmFkbygpIHsKICAgICAgaWYgKCF0aGlzLm5vZG9TZWxlY2Npb25hZG8pIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLm5vZG9TZWxlY2Npb25hZG8uaWQgPT09IHRoaXMuZXN0ZU5vZG8uaWQ7CiAgICB9LAogICAgbm9kb1JlbmRlcjogZnVuY3Rpb24gbm9kb1JlbmRlcigpIHsKICAgICAgaWYgKHRoaXMudXN1YXJpbyAmJiB0aGlzLmVzdGVOb2RvLmlkID09PSB0aGlzLnVzdWFyaW8uaWQpIHJldHVybiB0cnVlOwogICAgICByZXR1cm4gdGhpcy5pZHNUb2Rvc05vZG9zUmVuZGVyLmluY2x1ZGVzKHRoaXMuZXN0ZU5vZG8uaWQpOwogICAgfSwKICAgIGVuQW1iaXRvTm9kb1NlbGVjY2lvbmFkbzogZnVuY3Rpb24gZW5BbWJpdG9Ob2RvU2VsZWNjaW9uYWRvKCkgewogICAgICByZXR1cm4gdGhpcy5pZE5vZG9TZWxlY2Npb25hZG8gJiYgKHRoaXMuaWRzTm9kb3NQcmV2aW9zU2VsZWNjaW9uYWRvLmluY2x1ZGVzKHRoaXMuZXN0ZU5vZG8uaWQpIHx8IHRoaXMuaWRzTm9kb3NDb250aW51YWNpb25TZWxlY2Npb25hZG8uaW5jbHVkZXModGhpcy5lc3RlTm9kby5pZCkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["EnlacesNodoConocimiento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA,MADA;AAEA,IAAA,kBAAA,EAAA,MAFA;AAGA,IAAA,2BAAA,EAAA,KAHA;AAIA,IAAA,gCAAA,EAAA,KAJA;AAKA,IAAA,qBAAA,EAAA,OALA;AAMA,IAAA,QAAA,EAAA,MANA;AAOA,IAAA,UAAA,EAAA,KAPA;AAQA,IAAA,UAAA,EAAA,MARA;AASA,IAAA,iBAAA,EAAA,OATA;AAUA,IAAA,gBAAA,EAAA,MAVA;AAWA,IAAA,iBAAA,EAAA,OAXA;AAYA,IAAA,mBAAA,EAAA,KAZA;AAaA,IAAA,gBAAA,EAAA,MAbA;AAcA,IAAA,yBAAA,EAAA,OAdA;AAeA,IAAA,uBAAA,EAAA,KAfA;AAgBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAhBA,GAFA;AAuBA,EAAA,IAvBA,kBAuBA;AACA,WAAA;AACA,MAAA,oBAAA,EAAA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,EAAA,EAAA,CAFA;AAGA,QAAA,EAAA,EAAA,CAHA;AAIA,QAAA,EAAA,EAAA;AAJA,OADA;AAOA,MAAA,oBAAA,EAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,CAAA,EAAA;AAFA,OAPA;AAWA,MAAA,YAAA,EAAA,EAXA;AAaA,MAAA,cAAA,EAAA;AAbA,KAAA;AAeA,GAvCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gCAAA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CACA,IAAA,CAAA,SAAA,CACA,KAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CACA,UAAA,CAAA;AAAA,eACA,CAAA,CAAA,GAAA,KAAA,QAAA,IAAA,KAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CADA;AAAA,OADA,CADA,CADA,CAAA;AASA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,KAAA;AAAA,SAAA,EAAA,MAAA;;AACA,YAAA,SAAA,GAAA;AACA,UAAA,CAAA,EAAA,UAAA,CAAA,CAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CADA;AAEA,UAAA,CAAA,EAAA,UAAA,CAAA,CAAA,GAAA,KAAA,CAAA,OAAA,CAAA;AAFA,SAAA;AAIA,YAAA,MAAA,GAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,YAAA,gBAAA,GACA,CAAA,CAAA,GAAA,KAAA,QAAA,IACA,KAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CADA,IAEA,CAAA,CAAA,GAAA,KAAA,QAAA,IACA,KAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CAJA;;AAMA,YAAA,kBAAA,GACA,CAAA,CAAA,GAAA,KAAA,QAAA,IACA,CAAA,KAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CADA,IAEA,CAAA,CAAA,GAAA,KAAA,QAAA,IACA,KAAA,CAAA,uBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,CAJA;;AAMA,YAAA,mBAAA,GAAA,CAAA,gBAAA,IAAA,CAAA,kBAAA;AAEA,YAAA,eAAA,GAAA,OAAA;;AAEA,YAAA,kBAAA,EAAA;AACA,UAAA,eAAA,GAAA,mCAAA;AACA;;AACA,YAAA,mBAAA,EAAA;AACA,UAAA,eAAA,GAAA,OAAA;AACA;;AACA,YAAA,gBAAA,EAAA;AACA,UAAA,eAAA,GAAA,+BAAA;AACA;;AAEA,QAAA,CAAA,CAAA,WAAA,GAAA,mBAAA;AAEA,QAAA,CAAA,CAAA,MAAA,GAAA;AACA,UAAA,SAAA,EAAA,YAAA,MAAA,GAAA,MADA;AAEA,UAAA,GAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAA,SAAA,CAAA,CAAA,GAAA,CAAA,IAAA,KAAA,CAAA,UAAA,IAAA,IAFA;AAGA,UAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,GAAA,KAAA,CAAA,UAAA,IAAA,IAHA;AAIA,UAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,UAAA,IAAA,IAJA;AAKA,UAAA,eAAA,EAAA,eALA;AAMA,UAAA,eAAA,EAAA;AANA,SAAA;AAQA,OA7CA;AA+CA,WAAA,cAAA,GAAA,OAAA;AACA;AA5DA,GAxCA;AAuGA,EAAA,QAAA,EAAA;AACA,IAAA,0BADA,wCACA;AAAA;;AACA,UAAA,CAAA,KAAA,gBAAA,EAAA,OAAA,KAAA;AACA,UACA,KAAA,gBAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,QAAA,CAAA,EAAA;AAAA,OAAA,CADA,EAGA,OAAA,IAAA;AACA,aAAA,KAAA;AACA,KARA;AASA,IAAA,cATA,4BASA;AACA,UAAA,YAAA,GACA,KAAA,QAAA,CAAA,UAAA,CAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,EADA;AAEA,UAAA,YAAA,GACA,KAAA,QAAA,CAAA,UAAA,CAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,EADA;AAEA,aAAA;AACA,QAAA,IAAA,EAAA,YAAA,GAAA,KAAA,UAAA,GAAA,IADA;AAEA,QAAA,GAAA,EAAA,YAAA,GAAA,KAAA,UAAA,GAAA;AAFA,OAAA;AAIA,KAlBA;AAoBA,IAAA,oBApBA,kCAoBA;AACA;AACA;AACA;AACA;AACA,aAAA;AACA,QAAA,SAAA,EAAA,YAAA,KAAA,QAAA,CAAA,cAAA,CAAA,SAAA,GAAA,MADA;AAEA;AACA;AACA,QAAA,GAAA,EAAA,KAJA;AAKA,QAAA,IAAA,EAAA,KALA;AAMA,QAAA,KAAA,EACA,IAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,cAAA,CAAA,MAAA,GACA,KAAA,YADA,GAEA,KAAA,UAHA,IAIA;AAXA,OAAA;AAaA,KAtCA;AAuCA,IAAA,sBAvCA,oCAuCA;AACA;AACA;AACA;AACA;AACA,aAAA;AACA,QAAA,SAAA,EACA,YAAA,KAAA,QAAA,CAAA,gBAAA,CAAA,SAAA,GAAA,MAFA;AAGA;AACA;AACA,QAAA,GAAA,EAAA,KALA;AAMA,QAAA,IAAA,EAAA,KANA;AAOA,QAAA,KAAA,EACA,IAAA,CAAA,KAAA,CACA,KAAA,QAAA,CAAA,gBAAA,CAAA,MAAA,GACA,KAAA,YADA,GAEA,KAAA,UAHA,IAIA;AAZA,OAAA;AAcA,KA1DA;AA4DA,IAAA,YA5DA,0BA4DA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,KAAA,UAAA,IAAA;AADA,OAAA;AAGA,KAhEA;AAiEA,IAAA,UAjEA,wBAiEA;AACA,aAAA;AACA,QAAA,WAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,KAAA,UAAA,IAAA;AADA,OAAA;AAGA,KArEA;AAuEA,IAAA,OAvEA,qBAuEA;AACA,aAAA,KAAA,QAAA,CAAA,MAAA;AACA,KAzEA;AA2EA,IAAA,YA3EA,0BA2EA;AACA,UAAA,CAAA,KAAA,gBAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,KAAA,gBAAA,CAAA,EAAA,KAAA,KAAA,QAAA,CAAA,EAAA;AACA,KAhFA;AAiFA,IAAA,UAjFA,wBAiFA;AACA,UAAA,KAAA,OAAA,IAAA,KAAA,QAAA,CAAA,EAAA,KAAA,KAAA,OAAA,CAAA,EAAA,EAAA,OAAA,IAAA;AACA,aAAA,KAAA,mBAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,EAAA,CAAA;AACA,KApFA;AAsFA,IAAA,wBAtFA,sCAsFA;AACA,aACA,KAAA,kBAAA,KACA,KAAA,2BAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,EAAA,KACA,KAAA,gCAAA,CAAA,QAAA,CAAA,KAAA,QAAA,CAAA,EAAA,CAFA,CADA;AAKA;AA5FA;AAvGA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"enlacesNodoConocimiento\"\n    v-show=\"nodoRender\"\n    :style=\"[estiloPosicion]\"\n  >\n    <transition-group tag=\"div\">\n      <div\n        class=\"vinculo vinculoGris\"\n        v-for=\"vinculo of vinculosGrises\"\n        :key=\"vinculo.id\"\n        :style=\"[vinculo.estilo, altoVinculos]\"\n        :class=\"{\n          irrelevante:\n            idNodoSeleccionado &&\n            esteNodo.id != idNodoSeleccionado &&\n            (!enAmbitoNodoSeleccionado ||\n              (!idsNodosPreviosSeleccionado.includes(vinculo.idRef) &&\n                !idsNodosContinuacionSeleccionado.includes(vinculo.idRef) &&\n                vinculo.idRef != idNodoSeleccionado)),\n          inaccesible: vinculo.inaccesible,\n        }\"\n      >\n        <div class=\"flechaVinculo\" :style=\"[sizeFlecha]\"></div>\n      </div>\n    </transition-group>\n    <div\n      class=\"fuerza\"\n      v-show=\"callingPosiciones\"\n      :style=\"[estiloFuerzaColision, { opacity: nodoSeleccionado ? 1 : 0.3 }]\"\n      id=\"fuerzaColision\"\n    ></div>\n    <div\n      class=\"fuerza\"\n      v-show=\"callingPosiciones\"\n      :style=\"[estiloFuerzaCentroMasa, { opacity: nodoSeleccionado ? 1 : 0.3 }]\"\n      id=\"fuerzaCentroMasa\"\n    ></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"EnlacesNodoConocimiento\",\n  props: {\n    yo: Object,\n    idNodoSeleccionado: String,\n    idsNodosPreviosSeleccionado: Array,\n    idsNodosContinuacionSeleccionado: Array,\n    conectadoSeleccionado: Boolean,\n    esteNodo: Object,\n    todosNodos: Array,\n    factorZoom: Number,\n    callingPosiciones: Boolean,\n    nodoSeleccionado: Object,\n    childSeleccionado: Boolean,\n    idsTodosNodosRender: Array,\n    esquinasDiagrama: Object,\n    transicionarPosicionNodos: Boolean,\n    idsNodosPresentesCabeza: Array,\n    redibujarEnlaces: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      esquinasSeleccionado: {\n        x1: 0,\n        x2: 0,\n        y1: 0,\n        y2: 0,\n      },\n      posicionSeleccionado: {\n        x: 0,\n        y: 0,\n      },\n      factorFuerza: 15,\n\n      vinculosGrises: [],\n    };\n  },\n  methods: {\n    setVinculosGrises() {\n      console.log(\"Calculando flechas de vínculos\");\n      var vGrises = JSON.parse(\n        JSON.stringify(\n          this.esteNodo.vinculos.filter(\n            (v) =>\n              v.rol === \"target\" && this.idsTodosNodosRender.includes(v.idRef)\n          )\n        )\n      );\n\n      vGrises.forEach((v) => {\n        const coordsFrom = this.todosNodos.find((n) => n.id === v.idRef).coords;\n        const paralelas = {\n          x: coordsFrom.x - this.posNodo.x,\n          y: coordsFrom.y - this.posNodo.y,\n        };\n        const angulo = Math.PI + Math.atan2(paralelas.y, paralelas.x);\n        const modulo = Math.hypot(paralelas.x, paralelas.y);\n\n        const esEnlaceSuperado =\n          (v.rol === \"target\" &&\n            this.idsNodosPresentesCabeza.includes(this.esteNodo.id)) ||\n          (v.rol === \"source\" &&\n            this.idsNodosPresentesCabeza.includes(v.idRef));\n\n        const esEnlacePorSuperar =\n          (v.rol === \"source\" &&\n            !this.idsNodosPresentesCabeza.includes(this.esteNodo.id)) ||\n          (v.rol === \"target\" &&\n            this.idsNodosPresentesCabeza.includes(v.idRef));\n\n        const esEnlaceInaccesible = !esEnlaceSuperado && !esEnlacePorSuperar;\n\n        let backgroundColor = \"black\";\n\n        if (esEnlacePorSuperar) {\n          backgroundColor = \"var(--atlasConocimientoAvailable)\";\n        }\n        if (esEnlaceInaccesible) {\n          backgroundColor = \"black\";\n        }\n        if (esEnlaceSuperado) {\n          backgroundColor = \"var(--atlasConocimientoCheck)\";\n        }\n\n        v.inaccesible = esEnlaceInaccesible;\n\n        v.estilo = {\n          transform: \"rotate(\" + angulo + \"rad)\",\n          top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n          left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n          width: Math.round(modulo * this.factorZoom) + \"px\",\n          backgroundColor,\n          borderLeftColor: backgroundColor,\n        };\n      });\n\n      this.vinculosGrises = vGrises;\n    },\n  },\n\n  computed: {\n    continuacionDeSeleccionado() {\n      if (!this.nodoSeleccionado) return false;\n      if (\n        this.nodoSeleccionado.vinculos.some((v) => v.idRef === this.esteNodo.id)\n      )\n        return true;\n      return false;\n    },\n    estiloPosicion() {\n      const posXAjustada =\n        this.esteNodo.autoCoords.x - this.esquinasDiagrama.x1;\n      const posYAjustada =\n        this.esteNodo.autoCoords.y - this.esquinasDiagrama.y1;\n      return {\n        left: posXAjustada * this.factorZoom + \"px\",\n        top: posYAjustada * this.factorZoom + \"px\",\n      };\n    },\n\n    estiloFuerzaColision() {\n      // var paralelas={\n      //   x: this.esteNodo.fuerzaColision.fuerza*Math.cos(this.esteNodo.fuerzaColision.direccion),\n      //   y: this.esteNodo.fuerzaColision.fuerza*Math.sin(this.esteNodo.fuerzaColision.direccion),\n      // }\n      return {\n        transform: \"rotate(\" + this.esteNodo.fuerzaColision.direccion + \"rad)\",\n        // top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n        // left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n        top: \"0px\",\n        left: \"0px\",\n        width:\n          Math.ceil(\n            this.esteNodo.fuerzaColision.fuerza *\n              this.factorFuerza *\n              this.factorZoom\n          ) + \"px\",\n      };\n    },\n    estiloFuerzaCentroMasa() {\n      // var paralelas={\n      //   x: this.esteNodo.fuerzaCentroMasa.fuerza*Math.cos(this.esteNodo.fuerzaCentroMasa.direccion),\n      //   y: this.esteNodo.fuerzaCentroMasa.fuerza*Math.sin(this.esteNodo.fuerzaCentroMasa.direccion),\n      // }\n      return {\n        transform:\n          \"rotate(\" + this.esteNodo.fuerzaCentroMasa.direccion + \"rad)\",\n        // top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n        // left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n        top: \"0px\",\n        left: \"0px\",\n        width:\n          Math.round(\n            this.esteNodo.fuerzaCentroMasa.fuerza *\n              this.factorFuerza *\n              this.factorZoom\n          ) + \"px\",\n      };\n    },\n\n    altoVinculos() {\n      return {\n        height: Math.ceil(1 * this.factorZoom) + \"px\",\n      };\n    },\n    sizeFlecha() {\n      return {\n        borderWidth: Math.round(7 * this.factorZoom) + \"px\",\n      };\n    },\n\n    posNodo() {\n      return this.esteNodo.coords;\n    },\n\n    seleccionado() {\n      if (!this.nodoSeleccionado) {\n        return false;\n      }\n      return this.nodoSeleccionado.id === this.esteNodo.id;\n    },\n    nodoRender() {\n      if (this.usuario && this.esteNodo.id === this.usuario.id) return true;\n      return this.idsTodosNodosRender.includes(this.esteNodo.id);\n    },\n\n    enAmbitoNodoSeleccionado() {\n      return (\n        this.idNodoSeleccionado &&\n        (this.idsNodosPreviosSeleccionado.includes(this.esteNodo.id) ||\n          this.idsNodosContinuacionSeleccionado.includes(this.esteNodo.id))\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.enlacesNodoConocimiento {\n  position: relative;\n  width: 1px;\n  overflow: visible;\n}\n\n.enlaces {\n  position: absolute;\n  pointer-events: none;\n}\n.vinculo {\n  position: absolute;\n  transform-origin: 0% 0%;\n  /* transition: left 3s, top 3s; */\n}\n\n.vinculoGris.inaccesible {\n  opacity: 0.2;\n}\n\n.vinculoGris.irrelevante {\n  opacity: 0.02;\n}\n.fuerza {\n  position: absolute;\n  transform-origin: 0% 0%;\n  height: 3px;\n}\n#fuerzaColision {\n  background-color: red;\n}\n#fuerzaCentroMasa {\n  background-color: yellow;\n}\n.flechaVinculo {\n  width: 1px;\n  height: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-left-color: inherit;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.vinculoGris {\n  background-color: black;\n}\n.fade-enter-active {\n  animation: fade 0.5s;\n}\n.fade-leave-active {\n  animation: fade 0.5s reverse;\n}\n\n@keyframes fade {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n</style>"],"sourceRoot":"src/components/atlasConocimiento"}]}