{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/DiagramaFlujo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/DiagramaFlujo.vue","mtime":1643654906503},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvaG9tZS92aWRhMS93ZWJwai9wZXBlcGUvdnVlY2xpZW50ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgICAgICAgICBtdXRhdGlvbihcbiAgICAgICAgICAgICAgJGlkUHJveWVjdG86IElEIVxuICAgICAgICAgICAgICAkaWROb2RvUmVxdWllcmU6IElEIVxuICAgICAgICAgICAgICAkaWROb2RvUmVxdWVyaWRvOiBJRCFcbiAgICAgICAgICAgICAgJHRpcG9Ob2RvUmVxdWllcmU6IFN0cmluZyFcbiAgICAgICAgICAgICAgJHRpcG9Ob2RvUmVxdWVyaWRvOiBTdHJpbmchXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgZGVzdmluY3VsYXJOb2Rvc1Byb3llY3RvKFxuICAgICAgICAgICAgICAgIGlkUHJveWVjdG86ICRpZFByb3llY3RvXG4gICAgICAgICAgICAgICAgaWROb2RvUmVxdWllcmU6ICRpZE5vZG9SZXF1aWVyZVxuICAgICAgICAgICAgICAgIGlkTm9kb1JlcXVlcmlkbzogJGlkTm9kb1JlcXVlcmlkb1xuICAgICAgICAgICAgICAgIHRpcG9Ob2RvUmVxdWllcmU6ICR0aXBvTm9kb1JlcXVpZXJlXG4gICAgICAgICAgICAgICAgdGlwb05vZG9SZXF1ZXJpZG86ICR0aXBvTm9kb1JlcXVlcmlkb1xuICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBub2RvIHtcbiAgICAgICAgICAgICAgICAgIC4uLiBvbiBPYmpldGl2b0RlUHJveWVjdG8ge1xuICAgICAgICAgICAgICAgICAgICBpZFxuICAgICAgICAgICAgICAgICAgICB2aW5jdWxvcyB7XG4gICAgICAgICAgICAgICAgICAgICAgaWRSZWZcbiAgICAgICAgICAgICAgICAgICAgICB0aXBvUmVmXG4gICAgICAgICAgICAgICAgICAgICAgdGlwb1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAuLi4gb24gVHJhYmFqb0RlUHJveWVjdG8ge1xuICAgICAgICAgICAgICAgICAgICBpZFxuICAgICAgICAgICAgICAgICAgICB2aW5jdWxvcyB7XG4gICAgICAgICAgICAgICAgICAgICAgaWRSZWZcbiAgICAgICAgICAgICAgICAgICAgICB0aXBvUmVmXG4gICAgICAgICAgICAgICAgICAgICAgdGlwb1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgICAgICAgICBtdXRhdGlvbihcbiAgICAgICAgICAgICAgJGlkUHJveWVjdG86IElEIVxuICAgICAgICAgICAgICAkaWROb2RvUmVxdWllcmU6IElEIVxuICAgICAgICAgICAgICAkaWROb2RvUmVxdWVyaWRvOiBJRCFcbiAgICAgICAgICAgICAgJHRpcG9Ob2RvUmVxdWllcmU6IFN0cmluZyFcbiAgICAgICAgICAgICAgJHRpcG9Ob2RvUmVxdWVyaWRvOiBTdHJpbmchXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgY3JlYXJSZXF1ZXJpbWVudG9FbnRyZU5vZG9zUHJveWVjdG8oXG4gICAgICAgICAgICAgICAgaWRQcm95ZWN0bzogJGlkUHJveWVjdG9cbiAgICAgICAgICAgICAgICBpZE5vZG9SZXF1aWVyZTogJGlkTm9kb1JlcXVpZXJlXG4gICAgICAgICAgICAgICAgaWROb2RvUmVxdWVyaWRvOiAkaWROb2RvUmVxdWVyaWRvXG4gICAgICAgICAgICAgICAgdGlwb05vZG9SZXF1aWVyZTogJHRpcG9Ob2RvUmVxdWllcmVcbiAgICAgICAgICAgICAgICB0aXBvTm9kb1JlcXVlcmlkbzogJHRpcG9Ob2RvUmVxdWVyaWRvXG4gICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIG5vZG8ge1xuICAgICAgICAgICAgICAgICAgLi4uIG9uIE9iamV0aXZvRGVQcm95ZWN0byB7XG4gICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgIHZpbmN1bG9zIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZFJlZlxuICAgICAgICAgICAgICAgICAgICAgIHRpcG9SZWZcbiAgICAgICAgICAgICAgICAgICAgICB0aXBvXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC4uLiBvbiBUcmFiYWpvRGVQcm95ZWN0byB7XG4gICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgIHZpbmN1bG9zIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZFJlZlxuICAgICAgICAgICAgICAgICAgICAgIHRpcG9SZWZcbiAgICAgICAgICAgICAgICAgICAgICB0aXBvXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAiXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZ3FsIGZyb20gImdyYXBocWwtdGFnIjsKaW1wb3J0IENhbnZhc0RpYWdyYW1hRmx1am8gZnJvbSAiLi9DYW52YXNEaWFncmFtYUZsdWpvLnZ1ZSI7CmltcG9ydCBOb2RvT2JqZXRpdm8gZnJvbSAiLi9Ob2RvT2JqZXRpdm8udnVlIjsKaW1wb3J0IE5vZG9UcmFiYWpvIGZyb20gIi4vTm9kb1RyYWJham8udnVlIjsKaW1wb3J0IFZlbnRhbml0YU9iamV0aXZvIGZyb20gIi4vVmVudGFuaXRhT2JqZXRpdm8udnVlIjsKaW1wb3J0IFZlbnRhbml0YVRyYWJham8gZnJvbSAiLi9WZW50YW5pdGFUcmFiYWpvLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBOb2RvT2JqZXRpdm86IE5vZG9PYmpldGl2bywKICAgIE5vZG9UcmFiYWpvOiBOb2RvVHJhYmFqbywKICAgIENhbnZhc0RpYWdyYW1hRmx1am86IENhbnZhc0RpYWdyYW1hRmx1am8sCiAgICBWZW50YW5pdGFPYmpldGl2bzogVmVudGFuaXRhT2JqZXRpdm8sCiAgICBWZW50YW5pdGFUcmFiYWpvOiBWZW50YW5pdGFUcmFiYWpvCiAgfSwKICBuYW1lOiAiRGlhZ3JhbWFGbHVqbyIsCiAgcHJvcHM6IHsKICAgIHRyYWJham9zOiBBcnJheSwKICAgIG9iamV0aXZvczogQXJyYXksCiAgICBpZFByb3llY3RvOiBTdHJpbmcsCiAgICB1c3VhcmlvUmVzcG9uc2FibGVQcm95ZWN0bzogQm9vbGVhbiwKICAgIGFjdGl2bzogQm9vbGVhbiwKICAgIGRlc2hhYmlsaXRhcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc2ljaW9uTWVudUN4OiB7CiAgICAgICAgeDogMCwKICAgICAgICB5OiAwCiAgICAgIH0sCiAgICAgIG1vc3RyYW5kb01lbnVDeDogZmFsc2UsCiAgICAgIGlkTm9kb1NlbGVjY2lvbmFkbzogbnVsbCwKICAgICAgaWROb2RvUGFWZW50YW5pdGE6IG51bGwsCiAgICAgIHRpcG9Ob2RvU2VsZWNjaW9uYWRvOiBudWxsLAogICAgICBwb3NEdW1teTogewogICAgICAgIHg6IDMwMCwKICAgICAgICB5OiAzMDAKICAgICAgfSwKICAgICAgaW5mb1RyYWJham9zOiBbXSwKICAgICAgaWROb2RvQ2xpY2tEZXJlY2hvOiBudWxsLAogICAgICBjZW50cm9WaXN0YURlY2ltYWw6IHsKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAKICAgICAgfSwKICAgICAgaG92ZXJlZDogZmFsc2UsCiAgICAgIHpvb206IDEwMCwKICAgICAgbWF4Wm9vbTogMjAwLAogICAgICBtaW5ab29tOiA1MAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb3NNZW51Q3g6IGZ1bmN0aW9uIHBvc01lbnVDeCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0b3A6IHRoaXMucG9zaWNpb25NZW51Q3gueSArICJweCIsCiAgICAgICAgbGVmdDogdGhpcy5wb3NpY2lvbk1lbnVDeC54ICsgInB4IgogICAgICB9OwogICAgfSwKICAgIG9wYWNpZGFkOiBmdW5jdGlvbiBvcGFjaWRhZCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBvcGFjaXR5OiB0aGlzLmFjdGl2byA/IDEgOiAwLjQKICAgICAgfTsKICAgIH0sCiAgICBpbmZvT2JqZXRpdm9zOiBmdW5jdGlvbiBpbmZvT2JqZXRpdm9zKCkgewogICAgICByZXR1cm4gdGhpcy5vYmpldGl2b3MubWFwKGZ1bmN0aW9uIChvYmpldGl2bykgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZDogb2JqZXRpdm8uaWQsCiAgICAgICAgICBwb3NpY2lvbjogb2JqZXRpdm8uY29vcmRzLAogICAgICAgICAgdmluY3Vsb3M6IG9iamV0aXZvLnZpbmN1bG9zCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgcG9zaWNpb25DYW52YXNGbGVjaGFzOiBmdW5jdGlvbiBwb3NpY2lvbkNhbnZhc0ZsZWNoYXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdG9wOiBNYXRoLnJvdW5kKC10aGlzLmNlbnRyb1Zpc3RhLnkgKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IiwKICAgICAgICBsZWZ0OiBNYXRoLnJvdW5kKC10aGlzLmNlbnRyb1Zpc3RhLnggKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IgogICAgICB9OwogICAgfSwKICAgIGNlbnRyb1Zpc3RhOiBmdW5jdGlvbiBjZW50cm9WaXN0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiBNYXRoLnJvdW5kKHRoaXMuY2VudHJvVmlzdGFEZWNpbWFsLngpLAogICAgICAgIHk6IE1hdGgucm91bmQodGhpcy5jZW50cm9WaXN0YURlY2ltYWwueSkKICAgICAgfTsKICAgIH0sCiAgICBmYWN0b3Jab29tOiBmdW5jdGlvbiBmYWN0b3Jab29tKCkgewogICAgICByZXR1cm4gTnVtYmVyKCh0aGlzLnpvb20gLyAxMDApLnRvRml4ZWQoMikpOwogICAgfSwKICAgIHRvZG9zTm9kb3M6IGZ1bmN0aW9uIHRvZG9zTm9kb3MoKSB7CiAgICAgIHJldHVybiB0aGlzLm9iamV0aXZvcy5jb25jYXQodGhpcy50cmFiYWpvcyk7CiAgICB9LAogICAgb2JqZXRpdm9FblZlbnRhbml0YTogZnVuY3Rpb24gb2JqZXRpdm9FblZlbnRhbml0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5pZE5vZG9QYVZlbnRhbml0YSkgcmV0dXJuIG51bGw7CiAgICAgIHJldHVybiB0aGlzLm9iamV0aXZvcy5maW5kKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgcmV0dXJuIG8uaWQgPT0gX3RoaXMuaWROb2RvUGFWZW50YW5pdGE7CiAgICAgIH0pOwogICAgfSwKICAgIHRyYWJham9FblZlbnRhbml0YTogZnVuY3Rpb24gdHJhYmFqb0VuVmVudGFuaXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5pZE5vZG9QYVZlbnRhbml0YSkgcmV0dXJuIG51bGw7CiAgICAgIHJldHVybiB0aGlzLnRyYWJham9zLmZpbmQoZnVuY3Rpb24gKHQpIHsKICAgICAgICByZXR1cm4gdC5pZCA9PSBfdGhpczIuaWROb2RvUGFWZW50YW5pdGE7CiAgICAgIH0pOwogICAgfSwKICAgIG5vZG9TZWxlY2Npb25hZG86IGZ1bmN0aW9uIG5vZG9TZWxlY2Npb25hZG8oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMudG9kb3NOb2Rvcy5maW5kKGZ1bmN0aW9uIChuKSB7CiAgICAgICAgcmV0dXJuIG4uaWQgPT09IF90aGlzMy5pZE5vZG9TZWxlY2Npb25hZG87CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWJyaXJNZW51Q3g6IGZ1bmN0aW9uIGFicmlyTWVudUN4KGUpIHsKICAgICAgdmFyIGNvbnRlbmVkb3IgPSB0aGlzLiRlbDsKICAgICAgdmFyIHBvc0NvbnRlbmVkb3IgPSBjb250ZW5lZG9yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICB0aGlzLiRzZXQodGhpcy5wb3NpY2lvbk1lbnVDeCwgIngiLCBNYXRoLnJvdW5kKGUuY2xpZW50WCAtIHBvc0NvbnRlbmVkb3IubGVmdCArIGNvbnRlbmVkb3Iuc2Nyb2xsTGVmdCkpOwogICAgICB0aGlzLiRzZXQodGhpcy5wb3NpY2lvbk1lbnVDeCwgInkiLCBNYXRoLnJvdW5kKGUuY2xpZW50WSAtIHBvc0NvbnRlbmVkb3IudG9wICsgY29udGVuZWRvci5zY3JvbGxUb3ApKTsKICAgICAgdGhpcy5tb3N0cmFuZG9NZW51Q3ggPSB0cnVlOwogICAgfSwKICAgIGNyZWFyVHJhYmFqb0FxdWk6IGZ1bmN0aW9uIGNyZWFyVHJhYmFqb0FxdWkoZSkgewogICAgICB2YXIgcG9zaWNpb24gPSB7CiAgICAgICAgeDogMCwKICAgICAgICB5OiAwCiAgICAgIH07CiAgICAgIHZhciBjb250ZW5lZG9yID0gdGhpcy4kZWw7CiAgICAgIHZhciBwb3NDb250ZW5lZG9yID0gY29udGVuZWRvci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgcG9zaWNpb24ueCA9IE1hdGgucm91bmQoKGUuY2xpZW50WCAtIHBvc0NvbnRlbmVkb3IubGVmdCkgLyB0aGlzLmZhY3Rvclpvb20gKyB0aGlzLmNlbnRyb1Zpc3RhLngpOwogICAgICBwb3NpY2lvbi55ID0gTWF0aC5yb3VuZCgoZS5jbGllbnRZIC0gcG9zQ29udGVuZWRvci50b3ApIC8gdGhpcy5mYWN0b3Jab29tICsgdGhpcy5jZW50cm9WaXN0YS55KTsKICAgICAgdGhpcy5tb3N0cmFuZG9NZW51Q3ggPSBmYWxzZTsKICAgICAgdGhpcy4kZW1pdCgiY3JlYXJUcmFiYWpvRW5Qb3NpY2lvbiIsIHBvc2ljaW9uKTsKICAgIH0sCiAgICBjcmVhck9iamV0aXZvQXF1aTogZnVuY3Rpb24gY3JlYXJPYmpldGl2b0FxdWkoZSkgewogICAgICB2YXIgcG9zaWNpb24gPSB7CiAgICAgICAgeDogMCwKICAgICAgICB5OiAwCiAgICAgIH07CiAgICAgIHZhciBjb250ZW5lZG9yID0gdGhpcy4kZWw7CiAgICAgIHZhciBwb3NDb250ZW5lZG9yID0gY29udGVuZWRvci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgcG9zaWNpb24ueCA9IE1hdGgucm91bmQoZS5jbGllbnRYICsgdGhpcy5jZW50cm9WaXN0YS54IC0gcG9zQ29udGVuZWRvci5sZWZ0KTsKICAgICAgcG9zaWNpb24ueSA9IE1hdGgucm91bmQoZS5jbGllbnRZICsgdGhpcy5jZW50cm9WaXN0YS55IC0gcG9zQ29udGVuZWRvci50b3ApOwogICAgICB0aGlzLm1vc3RyYW5kb01lbnVDeCA9IGZhbHNlOwogICAgICB0aGlzLiRlbWl0KCJjcmVhck9iamV0aXZvRW5Qb3NpY2lvbiIsIHBvc2ljaW9uKTsKICAgIH0sCiAgICBhY3R1YWxpemFySW5mb1RyYWJham9zOiBmdW5jdGlvbiBhY3R1YWxpemFySW5mb1RyYWJham9zKGlkVHJhYmFqbywgaW5mbykgewogICAgICB2YXIgaW5kZXhUID0gdGhpcy5pbmZvVHJhYmFqb3MuZmluZEluZGV4KGZ1bmN0aW9uICh0KSB7CiAgICAgICAgcmV0dXJuIHQuaWQgPT09IGlkVHJhYmFqbzsKICAgICAgfSk7CgogICAgICBpZiAoaW5kZXhUID4gLTEpIHsKICAgICAgICB0aGlzLmluZm9UcmFiYWpvcy5zcGxpY2UoaW5kZXhULCAxKTsKICAgICAgfQoKICAgICAgdGhpcy5pbmZvVHJhYmFqb3MucHVzaChpbmZvKTsKICAgIH0sCiAgICBjcmVhclJlcXVlcmltZW50bzogZnVuY3Rpb24gY3JlYXJSZXF1ZXJpbWVudG8odGlwb05vZG9SZXF1ZXJpZG8sIF9yZWYpIHsKICAgICAgdmFyIGlkTm9kb1JlcXVpZXJlID0gX3JlZi5pZE5vZG9SZXF1aWVyZSwKICAgICAgICAgIGlkTm9kb1JlcXVlcmlkbyA9IF9yZWYuaWROb2RvUmVxdWVyaWRvOwogICAgICBjb25zb2xlLmxvZygiUHJlcGFyYW5kbyBtdXRhY2lceEYzbiBwYXJhIHNldGVhciBxdWUgIi5jb25jYXQoaWROb2RvUmVxdWllcmUsICIgcmVxdWllcmUgYSAiKS5jb25jYXQoaWROb2RvUmVxdWVyaWRvLCAiIGRlIHRpcG8gIikuY29uY2F0KHRpcG9Ob2RvUmVxdWVyaWRvKSk7CiAgICAgIHZhciB0aXBvTm9kb1JlcXVpZXJlID0gdGhpcy50aXBvTm9kb1NlbGVjY2lvbmFkbzsKICAgICAgdGhpcy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgbXV0YXRpb246IGdxbChfdGVtcGxhdGVPYmplY3QoKSksCiAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICBpZFByb3llY3RvOiB0aGlzLmlkUHJveWVjdG8sCiAgICAgICAgICBpZE5vZG9SZXF1aWVyZTogaWROb2RvUmVxdWllcmUsCiAgICAgICAgICBpZE5vZG9SZXF1ZXJpZG86IGlkTm9kb1JlcXVlcmlkbywKICAgICAgICAgIHRpcG9Ob2RvUmVxdWllcmU6IHRpcG9Ob2RvUmVxdWllcmUsCiAgICAgICAgICB0aXBvTm9kb1JlcXVlcmlkbzogdGlwb05vZG9SZXF1ZXJpZG8KICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgdmFyIGNyZWFyUmVxdWVyaW1lbnRvRW50cmVOb2Rvc1Byb3llY3RvID0gX3JlZjIuZGF0YS5jcmVhclJlcXVlcmltZW50b0VudHJlTm9kb3NQcm95ZWN0bzsKICAgICAgICBjb25zb2xlLmxvZygiUmVxdWVyaW1lbnRvIGNyZWFkbzogIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoY3JlYXJSZXF1ZXJpbWVudG9FbnRyZU5vZG9zUHJveWVjdG8pKSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCJFcnJvciIsIGVycm9yLm1lc3NhZ2UpOwogICAgICB9KTsKICAgIH0sCiAgICBlbGltaW5hclZpbmN1bG86IGZ1bmN0aW9uIGVsaW1pbmFyVmluY3Vsbyh0aXBvTm9kb1JlcXVlcmlkbywgX3JlZjMpIHsKICAgICAgdmFyIGlkTm9kb1JlcXVpZXJlID0gX3JlZjMuaWROb2RvUmVxdWllcmUsCiAgICAgICAgICBpZE5vZG9SZXF1ZXJpZG8gPSBfcmVmMy5pZE5vZG9SZXF1ZXJpZG87CiAgICAgIGNvbnNvbGUubG9nKCJQcmVwYXJhbmRvIG11dGFjaVx4RjNuIHBhcmEgc2V0ZWFyIHF1ZSAiLmNvbmNhdChpZE5vZG9SZXF1aWVyZSwgIiB5YSBubyBlc3RceEUxIHZpbmN1bGFkbyBhICIpLmNvbmNhdChpZE5vZG9SZXF1ZXJpZG8sICIgZGUgdGlwbyAiKS5jb25jYXQodGlwb05vZG9SZXF1ZXJpZG8pKTsKICAgICAgdmFyIHRpcG9Ob2RvUmVxdWllcmUgPSB0aGlzLnRpcG9Ob2RvU2VsZWNjaW9uYWRvOwogICAgICB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICBtdXRhdGlvbjogZ3FsKF90ZW1wbGF0ZU9iamVjdDIoKSksCiAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICBpZFByb3llY3RvOiB0aGlzLmlkUHJveWVjdG8sCiAgICAgICAgICBpZE5vZG9SZXF1aWVyZTogaWROb2RvUmVxdWllcmUsCiAgICAgICAgICBpZE5vZG9SZXF1ZXJpZG86IGlkTm9kb1JlcXVlcmlkbywKICAgICAgICAgIHRpcG9Ob2RvUmVxdWllcmU6IHRpcG9Ob2RvUmVxdWllcmUsCiAgICAgICAgICB0aXBvTm9kb1JlcXVlcmlkbzogdGlwb05vZG9SZXF1ZXJpZG8KICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJWaW5jdWxvIGVsaW1pbmFkbyIpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygiRXJyb3IiLCBlcnJvci5tZXNzYWdlKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVzcGxhemFyVmlzdGE6IGZ1bmN0aW9uIGRlc3BsYXphclZpc3RhKGRlbHRhWCwgZGVsdGFZKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLmNlbnRyb1Zpc3RhRGVjaW1hbCwgIngiLCB0aGlzLmNlbnRyb1Zpc3RhRGVjaW1hbC54IC0gZGVsdGFYKTsKICAgICAgdGhpcy4kc2V0KHRoaXMuY2VudHJvVmlzdGFEZWNpbWFsLCAieSIsIHRoaXMuY2VudHJvVmlzdGFEZWNpbWFsLnkgLSBkZWx0YVkpOyAvL3RoaXMuYWN0dWFsaXphclRyYXpvcysrOwogICAgfSwKICAgIHBhblZpc3RhOiBmdW5jdGlvbiBwYW5WaXN0YShlKSB7CiAgICAgIGlmICghdGhpcy5wYW5uaW5nVmlzdGEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuZGVzcGxhemFyVmlzdGEoZS5tb3ZlbWVudFggLyB0aGlzLmZhY3Rvclpvb20sIGUubW92ZW1lbnRZIC8gdGhpcy5mYWN0b3Jab29tKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLnZpc3RhUGFubmVkID0gdHJ1ZTsKICAgIH0sCiAgICBtb3VzZVVwRm9uZG86IGZ1bmN0aW9uIG1vdXNlVXBGb25kbygpIHsKICAgICAgaWYgKCF0aGlzLnZpc3RhUGFubmVkKSB7CiAgICAgICAgdGhpcy5pZE5vZG9TZWxlY2Npb25hZG8gPSBudWxsOwogICAgICAgIHRoaXMuaWROb2RvUGFWZW50YW5pdGEgPSBudWxsOwogICAgICAgIHRoaXMubW9zdHJhbmRvTWVudUN4ID0gZmFsc2U7CiAgICAgICAgdGhpcy5pZE5vZG9DbGlja0RlcmVjaG8gPSBudWxsOwogICAgICB9CgogICAgICB0aGlzLnZpc3RhUGFubmVkID0gZmFsc2U7CiAgICAgIHRoaXMucGFubmluZ1Zpc3RhID0gZmFsc2U7CiAgICB9LAogICAgem9vbVZpc3RhOiBmdW5jdGlvbiB6b29tVmlzdGEoZSkgewogICAgICBpZiAoIXRoaXMuaG92ZXJlZCB8fCAhZS5jdHJsS2V5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHZhciBjb250ZW5lZG9yID0gdGhpcy4kZWw7CiAgICAgIHZhciBwb3NDb250ZW5lZG9yID0gY29udGVuZWRvci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgdmFyIHByb3BvcmNpb25lcyA9IHsKICAgICAgICB4OiAoZS5jbGllbnRYIC0gcG9zQ29udGVuZWRvci5sZWZ0KSAvIHBvc0NvbnRlbmVkb3Iud2lkdGgsCiAgICAgICAgeTogKGUuY2xpZW50WSAtIHBvc0NvbnRlbmVkb3IudG9wKSAvIHBvc0NvbnRlbmVkb3IuaGVpZ2h0CiAgICAgIH07CiAgICAgIHZhciBwb3Nab29tID0gewogICAgICAgIHg6IE1hdGgucm91bmQoKGUuY2xpZW50WCAtIHBvc0NvbnRlbmVkb3IubGVmdCkgLyB0aGlzLmZhY3Rvclpvb20pICsgdGhpcy5jZW50cm9WaXN0YS54LAogICAgICAgIHk6IE1hdGgucm91bmQoKGUuY2xpZW50WSAtIHBvc0NvbnRlbmVkb3IudG9wKSAvIHRoaXMuZmFjdG9yWm9vbSkgKyB0aGlzLmNlbnRyb1Zpc3RhLnkKICAgICAgfTsKICAgICAgdmFyIGZhY3Rvclpvb20gPSAwLjI7CiAgICAgIHZhciBudWV2b1pvb20gPSB0aGlzLnpvb20gLSBNYXRoLnJvdW5kKGUuZGVsdGFZICogZmFjdG9yWm9vbSk7CgogICAgICBpZiAobnVldm9ab29tIDwgdGhpcy5taW5ab29tKSB7CiAgICAgICAgdGhpcy56b29tID0gdGhpcy5taW5ab29tOwogICAgICB9IGVsc2UgaWYgKG51ZXZvWm9vbSA+IHRoaXMubWF4Wm9vbSkgewogICAgICAgIHRoaXMuem9vbSA9IHRoaXMubWF4Wm9vbTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnpvb20gPSBudWV2b1pvb207CiAgICAgIH0gLy9QYW4gdmlzdGEgZGUgYWN1ZXJkbyBjb24gbGEgcG9zaWNpw7NuIGRlbCBtb3VzZSByZXNwZWN0byBkZWwgYXRsYXMgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgIHRoaXMuJHNldCh0aGlzLmNlbnRyb1Zpc3RhRGVjaW1hbCwgIngiLCBwb3Nab29tLnggLSBwb3NDb250ZW5lZG9yLndpZHRoIC8gdGhpcy5mYWN0b3Jab29tICogcHJvcG9yY2lvbmVzLngpOwogICAgICB0aGlzLiRzZXQodGhpcy5jZW50cm9WaXN0YURlY2ltYWwsICJ5IiwgcG9zWm9vbS55IC0gcG9zQ29udGVuZWRvci5oZWlnaHQgLyB0aGlzLmZhY3Rvclpvb20gKiBwcm9wb3JjaW9uZXMueSk7CiAgICB9CiAgfSwKICBtb3VudDogZnVuY3Rpb24gbW91bnQoKSB7CiAgICB0aGlzLiRzZXQodGhpcy5zaXplRGlhZ3JhbWEsICJ3IiwgdGhpcy4kJHBhcmVudC4kcmVmcy56b25hRGlhZ3JhbWFGbHVqby5vZmZzZXRXaWR0aCk7CiAgICB0aGlzLiRzZXQodGhpcy5zaXplRGlhZ3JhbWEsICJoIiwgdGhpcy4kJHBhcmVudC4kcmVmcy56b25hRGlhZ3JhbWFGbHVqby5vZmZzZXRIZWlnaHQpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJ3aGVlbCIsIHRoaXMuem9vbVZpc3RhLCB7CiAgICAgIHBhc3NpdmU6IGZhbHNlCiAgICB9KTsKICB9LAogIHJlbW92ZWQ6IGZ1bmN0aW9uIHJlbW92ZWQoKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigid2hlZWwiLCB0aGlzLnpvb21WaXN0YSk7CiAgfQp9Ow=="},{"version":3,"sources":["DiagramaFlujo.vue"],"names":[],"mappings":"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","sourcesContent":["<template> \n  <div\n    class=\"diagramaFlujo\"\n    :class=\"{ deshabilitado: deshabilitar }\"\n    id=\"diagramaFlujo\"\n    :style=\"[opacidad, {backgroundColor:hovered?'rgb(225, 229, 241)':'white'}]\"\n    @mouseenter=\"hovered=true\"\n    @mouseleave=\"hovered=false\"\n    @click.right.self.prevent=\"abrirMenuCx\"\n    @mousedown.left.self=\"panningVista=true\"\n    @mouseup.left.self=\"mouseUpFondo\"\n    @mousemove=\"panVista\"\n    \n  >\n    <canvas-diagrama-flujo :todosNodos=\"todosNodos\" :style=\"[posicionCanvasFlechas]\" :factorZoom=\"factorZoom\" />\n    <div id=\"contenedorNodos\">\n    <nodo-trabajo\n      v-for=\"trabajo of trabajos\"\n      :key=\"trabajo.id\"      \n      :esteTrabajo=\"trabajo\"\n      :idProyecto=\"idProyecto\"\n      :usuarioResponsableProyecto=\"usuarioResponsableProyecto\"\n      :seleccionado=\"idNodoSeleccionado == trabajo.id\"\n      :posDummy=\"posDummy\"\n      :menuCx=\"idNodoClickDerecho === trabajo.id\"\n      :idNodoSeleccionado=\"idNodoSeleccionado\"\n      :centroVista=\"centroVista\"\n      :factorZoom=\"Number(factorZoom.toFixed(2))\"\n      @click.native=\"\n        idNodoSeleccionado = trabajo.id;\n        tipoNodoSeleccionado = 'trabajo';\n      \"\n      @dblclick.native=\"idNodoPaVentanita=trabajo.id\"\n      @meAbrieron=\"$emit('nodoAbierto', trabajo.id)\"            \n      @miInfo=\"actualizarInfoTrabajos(trabajo.id, $event)\"\n      @crearRequerimento=\"crearRequerimento('trabajo', $event)\"\n      @eliminarVinculo=\"eliminarVinculo('trabajo', $event)\"\n      @click.right.native.prevent=\"idNodoClickDerecho = trabajo.id\"\n    />\n    <nodo-objetivo\n      v-for=\"objetivo of objetivos\"\n      :key=\"objetivo.id\"\n      :idProyecto=\"idProyecto\"\n      :esteObjetivo=\"objetivo\"\n      :usuarioResponsableProyecto=\"usuarioResponsableProyecto\"\n      :seleccionado=\"idNodoSeleccionado == objetivo.id\"\n      :idNodoSeleccionado=\"idNodoSeleccionado\"\n      :posDummy=\"posDummy\"\n      :menuCx=\"idNodoClickDerecho === objetivo.id\"\n      :centroVista=\"centroVista\"\n      :factorZoom=\"factorZoom\"\n      @click.native=\"\n        idNodoSeleccionado = objetivo.id;\n        tipoNodoSeleccionado = 'objetivo';\n      \"      \n      @dblclick.native=\"idNodoPaVentanita=objetivo.id\"\n      @meAbrieron=\"$emit('nodoAbierto', objetivo.id)\"      \n      @crearRequerimento=\"crearRequerimento('objetivo', $event)\"\n      @eliminarVinculo=\"eliminarVinculo('objetivo', $event)\"\n      @click.right.native.prevent.stop=\"idNodoClickDerecho = objetivo.id\"\n    />       \n    </div>\n\n    <ventanita-objetivo\n      v-if=\"idNodoPaVentanita && objetivoEnVentanita\"\n      class=\"ventanitaNodo\"\n      :usuarioResponsableProyecto=\"usuarioResponsableProyecto\"\n      :key=\"'ventanita'+objetivoEnVentanita.id\"\n      :esteObjetivo=\"objetivoEnVentanita\"\n      :idProyecto=\"idProyecto\"\n    />\n    <ventanita-trabajo\n      v-if=\"idNodoPaVentanita && trabajoEnVentanita\"\n      class=\"ventanitaNodo\"\n      :usuarioResponsableProyecto=\"usuarioResponsableProyecto\"\n      :key=\"'ventanita'+trabajoEnVentanita.id\"\n      :esteTrabajo=\"trabajoEnVentanita\"\n      :idProyecto=\"idProyecto\"\n    />\n\n    <div id=\"menuCx\" :style=\"posMenuCx\" v-show=\"mostrandoMenuCx\">\n      <div class=\"itemMenuCx\" @click=\"crearTrabajoAqui\">Crear trabajo aquí</div>\n      <div class=\"itemMenuCx\" @click=\"crearObjetivoAqui\">\n        Crear objetivo aquí\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport CanvasDiagramaFlujo from \"./CanvasDiagramaFlujo.vue\";\nimport NodoObjetivo from \"./NodoObjetivo.vue\";\nimport NodoTrabajo from \"./NodoTrabajo.vue\";\nimport VentanitaObjetivo from \"./VentanitaObjetivo.vue\"\nimport VentanitaTrabajo from \"./VentanitaTrabajo.vue\"\n\nexport default {\n  components: { NodoObjetivo, NodoTrabajo, CanvasDiagramaFlujo, VentanitaObjetivo, VentanitaTrabajo },\n  name: \"DiagramaFlujo\",\n  props: {\n    trabajos: Array,\n    objetivos: Array,\n    idProyecto: String,\n    usuarioResponsableProyecto: Boolean,\n    activo: Boolean,\n    deshabilitar: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      posicionMenuCx: {\n        x: 0,\n        y: 0,\n      },\n      mostrandoMenuCx: false,\n      idNodoSeleccionado: null,\n      idNodoPaVentanita:null,\n      tipoNodoSeleccionado: null,\n      posDummy: {\n        x: 300,\n        y: 300,\n      },\n      infoTrabajos: [],\n      idNodoClickDerecho: null,\n\n      centroVistaDecimal:{\n        x:0,\n        y:0\n      },      \n\n      hovered:false,\n\n      zoom:100,\n      maxZoom:200,\n      minZoom:50,\n    };\n  },\n  computed: {\n    posMenuCx() {\n      return {\n        top: this.posicionMenuCx.y + \"px\",\n        left: this.posicionMenuCx.x + \"px\",\n      };\n    },\n    opacidad() {\n      return {\n        opacity: this.activo ? 1 : 0.4,\n      };\n    },\n    infoObjetivos() {\n      return this.objetivos.map((objetivo) => {\n        return {\n          id: objetivo.id,\n          posicion: objetivo.coords,\n          vinculos: objetivo.vinculos,\n        };\n      });\n    },    \n    posicionCanvasFlechas(){\n      return {\n        top: Math.round(-this.centroVista.y*this.factorZoom)+\"px\",\n        left: Math.round(-this.centroVista.x*this.factorZoom)+\"px\"\n      }\n    },\n    centroVista(){\n      return {\n        x: Math.round(this.centroVistaDecimal.x),\n        y: Math.round(this.centroVistaDecimal.y),\n      }\n    },\n    factorZoom(){\n      return Number((this.zoom/100).toFixed(2));\n    },\n    todosNodos(){\n      return this.objetivos.concat(this.trabajos);\n    },\n    objetivoEnVentanita() {\n      if (!this.idNodoPaVentanita) return null;\n      return this.objetivos.find((o) => o.id == this.idNodoPaVentanita);\n    },\n    trabajoEnVentanita() {\n      if (!this.idNodoPaVentanita) return null;\n      return this.trabajos.find((t) => t.id == this.idNodoPaVentanita);\n    },\n    nodoSeleccionado() {\n      return this.todosNodos.find((n) => n.id === this.idNodoSeleccionado);\n    },\n  },\n  methods: {\n    abrirMenuCx(e) {\n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();\n      this.$set(\n        this.posicionMenuCx,\n        \"x\",\n        Math.round(e.clientX - posContenedor.left + contenedor.scrollLeft)\n      );\n      this.$set(\n        this.posicionMenuCx,\n        \"y\",\n        Math.round(e.clientY - posContenedor.top + contenedor.scrollTop)\n      );\n\n      this.mostrandoMenuCx = true;\n    },\n    crearTrabajoAqui(e) {\n      var posicion = {\n        x: 0,\n        y: 0,\n      };\n\n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();      \n\n      posicion.x = Math.round(\n        ((e.clientX - posContenedor.left)/this.factorZoom)+this.centroVista.x                \n      );\n      posicion.y = Math.round(\n        ((e.clientY - posContenedor.top)/this.factorZoom)+this.centroVista.y\n      );\n      this.mostrandoMenuCx=false;\n      this.$emit(\"crearTrabajoEnPosicion\", posicion);\n    },\n    crearObjetivoAqui(e) {\n      var posicion = {\n        x: 0,\n        y: 0,\n      };\n\n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();\n      posicion.x = Math.round(\n        e.clientX + this.centroVista.x - posContenedor.left \n      );\n      posicion.y = Math.round(\n        e.clientY + this.centroVista.y - posContenedor.top \n      );\n      this.mostrandoMenuCx=false;\n      this.$emit(\"crearObjetivoEnPosicion\", posicion);\n    },   \n    actualizarInfoTrabajos(idTrabajo, info) {\n      const indexT = this.infoTrabajos.findIndex((t) => t.id === idTrabajo);\n      if (indexT > -1) {\n        this.infoTrabajos.splice(indexT, 1);\n      }\n      this.infoTrabajos.push(info);\n    },\n    crearRequerimento(tipoNodoRequerido, { idNodoRequiere, idNodoRequerido }) {\n      console.log(\n        `Preparando mutación para setear que ${idNodoRequiere} requiere a ${idNodoRequerido} de tipo ${tipoNodoRequerido}`\n      );\n      const tipoNodoRequiere = this.tipoNodoSeleccionado;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation(\n              $idProyecto: ID!\n              $idNodoRequiere: ID!\n              $idNodoRequerido: ID!\n              $tipoNodoRequiere: String!\n              $tipoNodoRequerido: String!\n            ) {\n              crearRequerimentoEntreNodosProyecto(\n                idProyecto: $idProyecto\n                idNodoRequiere: $idNodoRequiere\n                idNodoRequerido: $idNodoRequerido\n                tipoNodoRequiere: $tipoNodoRequiere\n                tipoNodoRequerido: $tipoNodoRequerido\n              ) {\n                nodo {\n                  ... on ObjetivoDeProyecto {\n                    id\n                    vinculos {\n                      idRef\n                      tipoRef\n                      tipo\n                    }\n                  }\n                  ... on TrabajoDeProyecto {\n                    id\n                    vinculos {\n                      idRef\n                      tipoRef\n                      tipo\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idProyecto: this.idProyecto,\n            idNodoRequiere,\n            idNodoRequerido,\n            tipoNodoRequiere,\n            tipoNodoRequerido,\n          },\n        })\n        .then(({ data: { crearRequerimentoEntreNodosProyecto } }) => {\n          console.log(\n            `Requerimento creado: ${JSON.stringify(\n              crearRequerimentoEntreNodosProyecto\n            )}`\n          );\n        })\n        .catch((error) => {\n          console.log(`Error`, error.message);\n        });\n    },\n    eliminarVinculo(tipoNodoRequerido, { idNodoRequiere, idNodoRequerido }) {\n      console.log(\n        `Preparando mutación para setear que ${idNodoRequiere} ya no está vinculado a ${idNodoRequerido} de tipo ${tipoNodoRequerido}`\n      );\n      const tipoNodoRequiere = this.tipoNodoSeleccionado;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation(\n              $idProyecto: ID!\n              $idNodoRequiere: ID!\n              $idNodoRequerido: ID!\n              $tipoNodoRequiere: String!\n              $tipoNodoRequerido: String!\n            ) {\n              desvincularNodosProyecto(\n                idProyecto: $idProyecto\n                idNodoRequiere: $idNodoRequiere\n                idNodoRequerido: $idNodoRequerido\n                tipoNodoRequiere: $tipoNodoRequiere\n                tipoNodoRequerido: $tipoNodoRequerido\n              ) {\n                nodo {\n                  ... on ObjetivoDeProyecto {\n                    id\n                    vinculos {\n                      idRef\n                      tipoRef\n                      tipo\n                    }\n                  }\n                  ... on TrabajoDeProyecto {\n                    id\n                    vinculos {\n                      idRef\n                      tipoRef\n                      tipo\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idProyecto: this.idProyecto,\n            idNodoRequiere,\n            idNodoRequerido,\n            tipoNodoRequiere,\n            tipoNodoRequerido,\n          },\n        })\n        .then(() => {\n          console.log(`Vinculo eliminado`);\n        })\n        .catch((error) => {\n          console.log(`Error`, error.message);\n        });\n    },  \n    desplazarVista(deltaX, deltaY) {\n      this.$set(this.centroVistaDecimal, \"x\",this.centroVistaDecimal.x - deltaX);\n      this.$set(this.centroVistaDecimal, \"y\",this.centroVistaDecimal.y - deltaY);\n      //this.actualizarTrazos++;\n    },\n    panVista(e){\n      if(!this.panningVista){\n        return\n      }      \n      this.desplazarVista((e.movementX/this.factorZoom), (e.movementY/this.factorZoom));\n      e.preventDefault();\n      this.vistaPanned = true;\n    },\n    mouseUpFondo(){\n      if(!this.vistaPanned){    \n        this.idNodoSeleccionado = null;\n        this.idNodoPaVentanita=null;\n        this.mostrandoMenuCx = false;\n        this.idNodoClickDerecho = null;\n      }\n      this.vistaPanned=false;\n      this.panningVista=false;\n    },\n    zoomVista(e){\n      if(!this.hovered || !e.ctrlKey){\n        return\n      }\n      e.preventDefault();      \n      \n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();\n\n      const proporciones={\n        x: (e.clientX-posContenedor.left)/posContenedor.width,\n        y: (e.clientY-posContenedor.top)/posContenedor.height,\n      }\n\n      const posZoom={\n        x: Math.round((e.clientX-posContenedor.left)/this.factorZoom)+this.centroVista.x,\n        y: Math.round((e.clientY-posContenedor.top)/this.factorZoom)+this.centroVista.y\n      }\n\n\n      const factorZoom=0.2;\n      var nuevoZoom=this.zoom-Math.round(e.deltaY*factorZoom);\n      if(nuevoZoom<this.minZoom){\n        this.zoom=this.minZoom;\n      }\n      else if(nuevoZoom>this.maxZoom){\n        this.zoom=this.maxZoom\n      }\n      else{\n        this.zoom=nuevoZoom;\n      }\n\n      //Pan vista de acuerdo con la posición del mouse respecto del atlas                       \n\n      this.$set(this.centroVistaDecimal, \"x\", posZoom.x-((posContenedor.width/this.factorZoom)*proporciones.x) );\n      this.$set(this.centroVistaDecimal, \"y\", posZoom.y-((posContenedor.height/this.factorZoom)*proporciones.y) );\n\n    }\n  },\n  mount() {\n    this.$set(\n      this.sizeDiagrama,\n      \"w\",\n      this.$$parent.$refs.zonaDiagramaFlujo.offsetWidth\n    );\n    this.$set(\n      this.sizeDiagrama,\n      \"h\",\n      this.$$parent.$refs.zonaDiagramaFlujo.offsetHeight\n    );\n  },\n  created(){\n    window.addEventListener(\"wheel\", this.zoomVista, {passive:false});\n  },\n  removed(){\n    window.removeEventListener(\"wheel\", this.zoomVista);\n  }\n};\n</script>\n\n<style scoped>\n.diagramaFlujo {\n  width: 100%;\n  height: 800px;\n  position: relative;\n  overflow: scroll;\n  background-color: rgb(225, 229, 241);\n  overflow: hidden;\n  z-index: 0;\n}\n#canvasDiagramaFlujo {\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n#dummy {\n  position: absolute;\n  width: 30px;\n  height: 30px;\n  pointer-events: none;\n}\n\n#menuCx {\n  position: absolute;\n  z-index: 100;\n}\n\n.itemMenuCx {\n  padding: 5px 10px;\n  font-size: 15px;\n  cursor: pointer;\n  background-color: azure;\n}\n.itemMenuCx:hover {\n  background-color: rgb(141, 158, 158);\n}\n\n#contenedorNodos{\n  z-index: 0;\n}\n\n.ventanitaNodo {\n  width: min(400px, 90%);\n  position: absolute;\n  top: 50px;\n  left: 50px;\n  z-index: 1000;\n}\n</style>"],"sourceRoot":"src/components/proyecto"}]}