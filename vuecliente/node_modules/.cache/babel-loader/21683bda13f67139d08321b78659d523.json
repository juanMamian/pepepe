{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue","mtime":1676563818640},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ColeccionNodosConocimiento.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"coleccionNodosConocimiento\" @click=\"idNodoMenuCx = null\">\n    <div\n      id=\"zonaBarraProgreso\"\n      v-show=\"!$apollo.queries.progresoColeccion.loading\"\n      @mouseenter=\"mostrarPorcentajesNodos = true\"\n      @mouseleave=\"mostrarPorcentajesNodos = false\"\n    >\n      <div id=\"barraProgreso\">\n        <div\n          id=\"barraProgresoVerde\"\n          :style=\"[{ width: progresoColeccion + '%' }]\"\n        ></div>\n      </div>\n\n      <div id=\"numeroProgreso\">{{ progresoColeccion }}%</div>\n    </div>\n\n    <loading v-show=\"$apollo.queries.progresoColeccion.loading\" />\n\n    <div class=\"barraSeccion\" id=\"barraSuperior\">\n      <div\n        id=\"elTitulo\"\n        v-show=\"!editandoTitulo\"\n        @click.stop=\"iniciarEdicionTitulo\"\n      >\n        {{ estaColeccion.titulo }}\n      </div>\n\n      <input\n        :class=\"{ deshabilitado: guardandoNuevoTitulo }\"\n        type=\"text\"\n        id=\"inputNuevoTitulo\"\n        style=\"text-align: center\"\n        ref=\"inputNuevoTitulo\"\n        v-show=\"editandoTitulo\"\n        @keypress.enter=\"guardarNuevoTitulo\"\n      />\n    </div>\n\n    <div class=\"listaNodos\">\n      <icono-nodo-conocimiento\n        v-for=\"nodo of nodosConocimiento\"\n        :key=\"nodo.id\"\n        :esteNodo=\"nodo\"\n        :seleccionado=\"idNodoSeleccionado === nodo.id\"\n        :datosEsteNodo=\"yo.atlas.datosNodos.find((dn) => dn.idNodo === nodo.id)\"\n        :mostrarPorcentajeCompletado=\"mostrarPorcentajesNodos\"\n        :siendoRemovido=\"idNodoSiendoRemovido===nodo.id\"\n        :porcentajeCompletado=\"\n          (progresoNodos.find((info) => info.id === nodo.id) || {})\n            .porcentajeCompletado\n        \"\n        :menuCx=\"idNodoMenuCx === nodo.id\"\n        :opcionesMenuCx=\"opcionesMenuCxNodos\"\n        @contextmenu.native.stop.prevent=\"idNodoMenuCx = nodo.id\"\n        @click.self.stop=\"\n          idNodoSeleccionado = idNodoSeleccionado === nodo.id ? null : nodo.id\n        \"\n        @removerme=\"removerNodo(nodo.id)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport IconoNodoConocimiento from \"./IconoNodoConocimiento.vue\";\nimport Loading from \"../utilidades/Loading.vue\";\nimport { charProhibidosNombreCosa } from \"../configs\";\n\nconst QUERY_NODOS_COLECCION = gql`\n  query ($idsNodos: [ID!]!) {\n    nodosConocimientoByIds(idsNodos: $idsNodos) {\n      id\n      nombre\n      descripcion\n      tipoNodo\n    }\n  }\n`;\n\nexport default {\n  name: \"ColeccionNodosConocimiento\",\n  components: { IconoNodoConocimiento, Loading },\n  apollo: {\n    nodosConocimiento: {\n      query: QUERY_NODOS_COLECCION,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.estaColeccion?.idsNodos.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoNodos: {\n      query: gql`\n        query ($idsNodos: [ID!]!) {\n          nodosConocimientoByIds(idsNodos: $idsNodos) {\n            id\n            porcentajeCompletado\n          }\n        }\n      `,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.nodosConocimiento?.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoColeccion: {\n      query: gql`\n        query ($idColeccion: ID!, $idUsuario: ID!) {\n          coleccionNodosConocimiento(\n            idColeccion: $idColeccion\n            idUsuario: $idUsuario\n          ) {\n            id\n            progreso\n          }\n        }\n      `,\n      variables() {\n        return {\n          idColeccion: this.estaColeccion.id,\n          idUsuario: this.yo.id,\n        };\n      },\n      skip() {\n        return !this.yo?.id || !this.estaColeccion?.id;\n      },\n      update({ coleccionNodosConocimiento }) {\n        return coleccionNodosConocimiento.progreso;\n      },\n    },\n  },\n  props: {\n    estaColeccion: Object,\n    yo: Object,\n  },\n  data() {\n    return {\n      idNodoSeleccionado: null,\n      idNodoMenuCx: null,\n      idNodoSiendoRemovido:null,\n      nodosConocimiento: [],\n      progresoNodos: [],\n      progresoColeccion: null,\n\n      editandoTitulo: false,\n      guardandoNuevoTitulo: false,\n\n      mostrarPorcentajesNodos: false,\n\n      opcionesMenuCxNodos: [\n        {\n          texto: \"Remover\",\n          accion: \"removerme\",\n        },\n      ],\n    };\n  },\n  methods: {\n    iniciarEdicionTitulo() {\n      this.$refs.inputNuevoTitulo.value = this.estaColeccion.titulo;\n      this.editandoTitulo = true;\n    },\n    guardarNuevoTitulo() {\n      var nuevoNombre = this.$refs.inputNuevoTitulo.value;\n      console.log(`seting nombre de coleccion con value: ${nuevoNombre}`);\n      if (charProhibidosNombreCosa.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.guardandoNuevoTitulo = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion: this.estaColeccion.id,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.guardandoNuevoTitulo = false;\n          this.editandoTitulo = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.guardandoNuevoTitulo = false;\n        });\n    },\n    removerNodo(idNodo) {\n      this.idNodoSiendoRemovido = idNodo;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $idNodo: ID!) {\n              removeNodoColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                idNodo: $idNodo\n              )\n            }\n          `,\n          variables: {\n            idColeccion: this.estaColeccion.id,\n            idNodo,\n          },\n        })\n        .then(() => {\n          this.idNodoSiendoRemovido = null;\n          this.idNodoSeleccionado = null;\n\n          const store=this.$apollo.provider.defaultClient;\n          const cache=store.readQuery({\n            query: QUERY_NODOS_COLECCION,\n            variables:{\n              idsNodos: this.estaColeccion.idsNodos,\n            }\n          });\n\n          let nuevoCache=JSON.parse(JSON.stringify(cache));\n\n          const indexN=nuevoCache.nodosConocimientoByIds.findIndex(n=>n.id===idNodo);\n\n          if(indexN>-1){\n            nuevoCache.nodosConocimientoByIds.splice(indexN, 1);\n\n            store.writeQuery({\n              query: QUERY_NODOS_COLECCION,\n              variables:{\n                idsNodos: this.estaColeccion.idsNodos,\n              },\n              data: nuevoCache\n            })\n          }\n          else{\n            console.log(`El nodo no estaba en la colección.`);\n          }\n\n\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.idNodoSiendoRemovido = null;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.listaNodos {\n  display: flex;\n  padding: 20px 20px;\n  padding-bottom: 90px;\n  gap: 60px;\n  flex-wrap: wrap;\n}\n\n#barraProgreso {\n  background-color: gray;\n  height: 12px;\n  width: 100%;\n}\n#barraProgresoVerde {\n  background-color: green;\n  height: 100%;\n}\n\n#numeroProgreso {\n  width: 100%;\n  text-align: center;\n}\n\n#barraSuperior {\n  display: flex;\n  justify-content: center;\n}\n</style>"],"sourceRoot":"src/components/atlasConocimiento"}]}