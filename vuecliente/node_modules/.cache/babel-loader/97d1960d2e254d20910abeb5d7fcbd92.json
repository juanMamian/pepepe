{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue","mtime":1674568326919},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL2hvbWUvdmlkYTEvd2VicGovcGVwZXBlL3Z1ZWNsaWVudGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCI7CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAgICAgICBxdWVyeSAoJGlkQ29sZWNjaW9uOiBJRCEsICRpZFVzdWFyaW86IElEISkge1xuICAgICAgICAgIGNvbGVjY2lvbk5vZG9zQ29ub2NpbWllbnRvKFxuICAgICAgICAgICAgaWRDb2xlY2Npb246ICRpZENvbGVjY2lvblxuICAgICAgICAgICAgaWRVc3VhcmlvOiAkaWRVc3VhcmlvXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBpZFxuICAgICAgICAgICAgcHJvZ3Jlc29cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSAoJGlkc05vZG9zOiBbSUQhXSEpIHtcbiAgICBub2Rvc0Nvbm9jaW1pZW50b0J5SWRzKGlkc05vZG9zOiAkaWRzTm9kb3MpIHtcbiAgICAgIGlkXG4gICAgICBub21icmVcbiAgICAgIGRlc2NyaXBjaW9uXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZ3FsIGZyb20gImdyYXBocWwtdGFnIjsKaW1wb3J0IEljb25vTm9kb0Nvbm9jaW1pZW50byBmcm9tICIuL0ljb25vTm9kb0Nvbm9jaW1pZW50by52dWUiOwppbXBvcnQgTG9hZGluZyBmcm9tICcuLi91dGlsaWRhZGVzL0xvYWRpbmcudnVlJzsKdmFyIFFVRVJZX05PRE9TX0NPTEVDQ0lPTiA9IGdxbChfdGVtcGxhdGVPYmplY3QoKSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ29sZWNjaW9uTm9kb3NDb25vY2ltaWVudG8iLAogIGNvbXBvbmVudHM6IHsKICAgIEljb25vTm9kb0Nvbm9jaW1pZW50bzogSWNvbm9Ob2RvQ29ub2NpbWllbnRvLAogICAgTG9hZGluZzogTG9hZGluZwogIH0sCiAgYXBvbGxvOiB7CiAgICBub2Rvc0Nvbm9jaW1pZW50bzogewogICAgICBxdWVyeTogUVVFUllfTk9ET1NfQ09MRUNDSU9OLAogICAgICB2YXJpYWJsZXM6IGZ1bmN0aW9uIHZhcmlhYmxlcygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWRzTm9kb3M6IHRoaXMuZXN0YUNvbGVjY2lvbi5pZHNOb2RvcwogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNraXA6IGZ1bmN0aW9uIHNraXAoKSB7CiAgICAgICAgdmFyIF90aGlzJGVzdGFDb2xlY2Npb247CgogICAgICAgIHJldHVybiAhKChfdGhpcyRlc3RhQ29sZWNjaW9uID0gdGhpcy5lc3RhQ29sZWNjaW9uKSAhPT0gbnVsbCAmJiBfdGhpcyRlc3RhQ29sZWNjaW9uICE9PSB2b2lkIDAgJiYgX3RoaXMkZXN0YUNvbGVjY2lvbi5pZHNOb2Rvcy5sZW5ndGgpID4gMDsKICAgICAgfSwKICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoX3JlZikgewogICAgICAgIHZhciBub2Rvc0Nvbm9jaW1pZW50b0J5SWRzID0gX3JlZi5ub2Rvc0Nvbm9jaW1pZW50b0J5SWRzOwogICAgICAgIHJldHVybiBub2Rvc0Nvbm9jaW1pZW50b0J5SWRzOwogICAgICB9CiAgICB9LAogICAgcHJvZ3Jlc29Db2xlY2Npb246IHsKICAgICAgcXVlcnk6IGdxbChfdGVtcGxhdGVPYmplY3QyKCkpLAogICAgICB2YXJpYWJsZXM6IGZ1bmN0aW9uIHZhcmlhYmxlcygpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWRDb2xlY2Npb246IHRoaXMuZXN0YUNvbGVjY2lvbi5pZCwKICAgICAgICAgIGlkVXN1YXJpbzogdGhpcy55by5pZAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNraXA6IGZ1bmN0aW9uIHNraXAoKSB7CiAgICAgICAgdmFyIF90aGlzJHlvLCBfdGhpcyRlc3RhQ29sZWNjaW9uMjsKCiAgICAgICAgcmV0dXJuICEoKF90aGlzJHlvID0gdGhpcy55bykgIT09IG51bGwgJiYgX3RoaXMkeW8gIT09IHZvaWQgMCAmJiBfdGhpcyR5by5pZCkgfHwgISgoX3RoaXMkZXN0YUNvbGVjY2lvbjIgPSB0aGlzLmVzdGFDb2xlY2Npb24pICE9PSBudWxsICYmIF90aGlzJGVzdGFDb2xlY2Npb24yICE9PSB2b2lkIDAgJiYgX3RoaXMkZXN0YUNvbGVjY2lvbjIuaWQpOwogICAgICB9LAogICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShfcmVmMikgewogICAgICAgIHZhciBjb2xlY2Npb25Ob2Rvc0Nvbm9jaW1pZW50byA9IF9yZWYyLmNvbGVjY2lvbk5vZG9zQ29ub2NpbWllbnRvOwogICAgICAgIHJldHVybiBjb2xlY2Npb25Ob2Rvc0Nvbm9jaW1pZW50by5wcm9ncmVzbzsKICAgICAgfQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGVzdGFDb2xlY2Npb246IE9iamVjdCwKICAgIHlvOiBPYmplY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZE5vZG9TZWxlY2Npb25hZG86IG51bGwsCiAgICAgIG5vZG9zQ29ub2NpbWllbnRvOiBbXSwKICAgICAgcHJvZ3Jlc29Db2xlY2Npb246IG51bGwKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["ColeccionNodosConocimiento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,GAAA,MAAA,aAAA;AACA,OAAA,qBAAA,MAAA,6BAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AAEA,IAAA,qBAAA,GAAA,GAAA,mBAAA;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,4BADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,qBAAA,EAAA,qBAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAFA;AAGA,EAAA,MAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACA,MAAA,KAAA,EAAA,qBADA;AAEA,MAAA,SAFA,uBAEA;AACA,eAAA;AACA,UAAA,QAAA,EAAA,KAAA,aAAA,CAAA;AADA,SAAA;AAGA,OANA;AAOA,MAAA,IAPA,kBAOA;AAAA;;AACA,eAAA,yBAAA,KAAA,aAAA,gDAAA,oBAAA,QAAA,CAAA,MAAA,IAAA,CAAA;AACA,OATA;AAUA,MAAA,MAVA,wBAUA;AAAA,YAAA,sBAAA,QAAA,sBAAA;AACA,eAAA,sBAAA;AACA;AAZA,KADA;AAeA,IAAA,iBAAA,EAAA;AACA,MAAA,KAAA,EAAA,GAAA,oBADA;AAYA,MAAA,SAZA,uBAYA;AACA,eAAA;AACA,UAAA,WAAA,EAAA,KAAA,aAAA,CAAA,EADA;AAEA,UAAA,SAAA,EAAA,KAAA,EAAA,CAAA;AAFA,SAAA;AAIA,OAjBA;AAkBA,MAAA,IAlBA,kBAkBA;AAAA;;AACA,eAAA,cAAA,KAAA,EAAA,qCAAA,SAAA,EAAA,KAAA,0BAAA,KAAA,aAAA,iDAAA,qBAAA,EAAA,CAAA;AACA,OApBA;AAqBA,MAAA,MArBA,yBAqBA;AAAA,YAAA,0BAAA,SAAA,0BAAA;AACA,eAAA,0BAAA,CAAA,QAAA;AACA;AAvBA;AAfA,GAHA;AA4CA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA,MADA;AAEA,IAAA,EAAA,EAAA;AAFA,GA5CA;AAgDA,EAAA,IAhDA,kBAgDA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,IADA;AAEA,MAAA,iBAAA,EAAA,EAFA;AAGA,MAAA,iBAAA,EAAA;AAHA,KAAA;AAKA;AAtDA,CAAA","sourcesContent":["<template>\n  <div class=\"coleccionNodosConocimiento\">\n    <div id=\"zonaBarraProgreso\" v-show=\"!$apollo.queries.progresoColeccion.loading\">\n      <div id=\"barraProgreso\">\n        <div id=\"barraProgresoVerde\" :style=\"[{width: progresoColeccion+'%'}]\"></div>\n      </div>\n    \n    <div id=\"numeroProgreso\">\n        {{progresoColeccion}}%\n    </div>\n    </div>\n\n    <loading v-show=\"$apollo.queries.progresoColeccion.loading\" />\n\n    <div class=\"listaNodos\">\n      <icono-nodo-conocimiento\n        v-for=\"nodo of nodosConocimiento\"\n        :key=\"nodo.id\"\n        :esteNodo=\"nodo\"\n        :seleccionado=\"idNodoSeleccionado === nodo.id\"\n        @click.self.stop=\"\n          idNodoSeleccionado = idNodoSeleccionado === nodo.id ? null : nodo.id\n        \"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport IconoNodoConocimiento from \"./IconoNodoConocimiento.vue\";\nimport Loading from '../utilidades/Loading.vue';\n\nconst QUERY_NODOS_COLECCION = gql`\n  query ($idsNodos: [ID!]!) {\n    nodosConocimientoByIds(idsNodos: $idsNodos) {\n      id\n      nombre\n      descripcion\n    }\n  }\n`;\n\nexport default {\n  name: \"ColeccionNodosConocimiento\",\n  components: { IconoNodoConocimiento, Loading },\n  apollo: {\n    nodosConocimiento: {\n      query: QUERY_NODOS_COLECCION,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.estaColeccion?.idsNodos.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoColeccion: {\n      query: gql`\n        query ($idColeccion: ID!, $idUsuario: ID!) {\n          coleccionNodosConocimiento(\n            idColeccion: $idColeccion\n            idUsuario: $idUsuario\n          ) {\n            id\n            progreso\n          }\n        }\n      `,\n      variables() {\n        return {\n          idColeccion: this.estaColeccion.id,\n          idUsuario: this.yo.id,\n        };\n      },\n      skip() {\n        return !this.yo?.id || !this.estaColeccion?.id;\n      },\n      update({ coleccionNodosConocimiento }) {\n        return coleccionNodosConocimiento.progreso;\n      },\n    },\n  },\n  props: {\n    estaColeccion: Object,\n    yo: Object,\n  },\n  data() {\n    return {\n      idNodoSeleccionado: null,\n      nodosConocimiento: [],\n      progresoColeccion: null,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.listaNodos {\n  display: flex;\n  padding: 20px 20px;\n  padding-bottom: 90px;\n  gap: 60px;\n  flex-wrap: wrap;\n}\n\n#barraProgreso {\n  background-color: gray;\n  height: 12px;\n  width: 100%;\n}\n#barraProgresoVerde {\n  background-color: green;\n  height: 100%;\n}\n\n#numeroProgreso{\n    width: 100%;\n    text-align: center;\n}\n</style>"],"sourceRoot":"src/components/atlasConocimiento"}]}