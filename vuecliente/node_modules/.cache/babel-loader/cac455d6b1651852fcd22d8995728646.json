{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/AtlasSolidaridad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasSolidaridad/AtlasSolidaridad.vue","mtime":1643654906499},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AtlasSolidaridad.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"atlasSolidaridad\"\n    @mousedown.left.exact.self.stop=\"panningVista = true\"\n    @mouseenter=\"hovered = true\"\n    @mouseleave=\"hovered = false\"\n    @click.right.self.exact.prevent=\"abrirMenuContextual\"\n    @mousemove=\"panVista\"\n    @mouseup.left=\"clickFondoAtlas\"\n    @touchmove.prevent.stop=\"movimientoMobile\"\n    @touchstart=\"iniciaMovimientoTouch\"\n    @touchend=\"finTouch\"\n  >    \n    <div\n      id=\"botonCallingPosiciones\"\n      v-if=\"usuarioSuperadministrador && usuario.username == 'juanMamian'\"\n      @click.stop=\"iniciarCallingPosiciones\"\n      :class=\"{ deshabilitado: callingPosiciones }\"\n      :style=\"[\n        { backgroundColor: callingPosiciones ? 'green' : 'transparent' },\n      ]\"\n    ></div>\n    <transition name=\"fadeOut\">\n      <div v-show=\"showingZoomInfo\" id=\"infoZoom\">x{{ factorZoom }}</div>\n    </transition>      \n    <div\n      id=\"menuContextual\"\n      v-if=\"usuario && usuario.id\"\n      v-show=\"mostrandoMenuContextual\"\n      :style=\"[offsetMenuContextual]\"\n      :class=\"{ deshabilitado: enviandoQueryNodos }\"\n    >\n      <div\n        class=\"botonMenuContextual\"\n        id=\"botonCrearObjetivo\"\n        v-show=\"usuarioSuperadministrador\"\n        @mouseup.left.stop=\"\"\n        @click.stop=\"crearNodoEnMenuContextual('objetivo')\"\n      >\n        Crear objetivo\n      </div>\n      <div\n        class=\"botonMenuContextual\"\n        id=\"botonCrearObjetivo\"\n        @click.stop=\"crearNodoEnMenuContextual('trabajo')\"\n        @mouseup.left.stop=\"\"\n        v-show=\"usuarioSuperadministrador\"\n      >\n        Crear trabajo\n      </div>\n    </div>\n\n    <div\n      id=\"centroVista\"\n      v-show=\"usuarioSuperadministrador && callingPosiciones\"\n    >\n      {{ centroVista.x + \", \" + centroVista.y }}\n    </div>\n\n    <div id=\"contenedorVinculosNodos\" :style=\"[posContenedores]\">\n      <enlaces-nodo\n        v-for=\"nodo of nodosConRequerimentos\"\n        :yo=\"yo\"\n        :key=\"nodo.id\"\n        :idNodoSeleccionado=\"idNodoSeleccionado\"\n        :esteNodo=\"nodo\"\n        :todosNodos=\"todosNodos\"\n        :factorZoom=\"factorZoom\"\n        :nodoSeleccionado=\"nodoSeleccionado\"\n        :redibujarEnlaces=\"redibujarEnlacesNodos\"\n        :idsTodosNodosRender=\"idsTodosNodosRender\"\n        :callingPosiciones=\"callingPosiciones\"\n        :transicionarPosicionNodos=\"transicionarPosicionNodos\"\n      />\n    </div>\n\n    <div id=\"contenedorNodos\" :style=\"[posContenedores]\">\n      <nodo-persona\n        v-for=\"persona of personasRender\"\n        :esNodoYo=\"nodoYo.id === persona.id\"\n        :key=\"persona.id\"\n        :esteNodo=\"persona\"\n        :idNodoSeleccionado=\"idNodoSeleccionado\"\n        :idsNodosNeedingFetchMore=\"idsNodosNeedingFetchMore\"\n        :nodoSeleccionado=\"nodoSeleccionado\"\n        :nodosUnder=\"indiceNodosUnder[persona.id]\"\n        :requeridoPorSeleccionado=\"\n          idsNodosRequeridosSeleccionado.includes(persona.id)\n        \"\n        :requiereAlSeleccionado=\"\n          idsNodosRequierenSeleccionado.includes(persona.id)\n        \"\n        :idsNodosDesplegados=\"idsNodosDesplegados\"\n        :menuCx=\"idNodoMenuCx && idNodoMenuCx === persona.id\"\n        :factorZoom=\"factorZoom\"\n        :callingPosiciones=\"callingPosiciones\"\n        :transparentoso=\"\n          idNodoSeleccionado &&\n          idNodoSeleccionado != persona.id &&\n          !nodoSeleccionado.responsables.includes(persona.id) &&\n          !idsNodosRequierenSeleccionado.includes(persona.id) &&\n          nodoSeleccionado &&\n          nodoSeleccionado.nodoParent != persona.id\n        \"\n        :todosNodos=\"todosNodos\"\n        :todasPersonas=\"personas\"\n        :transicionarPosicionNodos=\"transicionarPosicionNodos\"\n        @mouseup.native.stop=\"\"\n        @click.native=\"idNodoSeleccionado = persona.id\"\n        @click.native.right.exact.stop.prevent=\"idNodoMenuCx = persona.id\"\n        @nodoSolidaridadCreado=\"addNodoToNodosSolidaridad($event)\"\n\n      />\n      <transition-group name=\"fade\" tag=\"div\" v-if=\"indiceNodosUnder\">\n        <nodo\n          v-for=\"nodo of nodosSolidaridadRender\"\n          :key=\"nodo.id\"\n          :esteNodo=\"nodo\"\n          :nodoYo=\"nodoYo\"\n          :idNodoSeleccionado=\"idNodoSeleccionado\"\n          :idsNodosNeedingFetchMore=\"idsNodosNeedingFetchMore\"\n          :nodoParent=\"todosNodos.find((n) => n.id === nodo.nodoParent)\"\n          :nodoSeleccionado=\"nodoSeleccionado\"\n          :nodosUnder=\"indiceNodosUnder[nodo.id]\"\n          :requeridoPorSeleccionado=\"\n            idsNodosRequeridosSeleccionado.includes(nodo.id)\n          \"\n          :seleccionadoEsResponsable=\"\n            nodo.responsables.includes(idNodoSeleccionado)\n          \"\n          :requiereAlSeleccionado=\"\n            idsNodosRequierenSeleccionado.includes(nodo.id)\n          \"\n          :enVentanita=\"idNodoPaVentanita === nodo.id\"\n          :idsNodosDesplegados=\"idsNodosDesplegados\"\n          :menuCx=\"idNodoMenuCx && idNodoMenuCx == nodo.id\"\n          :factorZoom=\"factorZoom\"\n          :callingPosiciones=\"callingPosiciones\"\n          :usuarioAdministradorNodoSeleccionado=\"\n            usuarioAdministradorNodoSeleccionado\n          \"\n          :usuarioResponsableNodoSeleccionado=\"\n            usuarioResponsableNodoSeleccionado\n          \"\n          :usuarioResponsableAmplioNodoSeleccionado=\"\n            usuarioResponsableAmplioNodoSeleccionado\n          \"\n          :transparentoso=\"\n            idNodoSeleccionado &&\n            idNodoSeleccionado != nodo.id &&\n            !idsNodosRequeridosSeleccionado.includes(nodo.id) &&\n            !idsNodosRequierenSeleccionado.includes(nodo.id) &&\n            !nodo.responsables.includes(idNodoSeleccionado) &&\n            nodoSeleccionado &&\n            nodoSeleccionado.nodoParent != nodo.id\n          \"\n          :childSeleccionado=\"idsNodosChildrenSeleccionado.includes(nodo.id)\"\n          :todosNodos=\"todosNodos\"\n          :transicionarPosicionNodos=\"transicionarPosicionNodos\"\n          @meMovi=\"redibujarEnlacesNodos++\"\n          @mouseup.native.stop=\"\"\n          @click.native=\"idNodoSeleccionado = nodo.id\"\n          @click.native.right.exact.stop.prevent=\"idNodoMenuCx = nodo.id\"\n          @meAbrieron=\"setNodoEnVentanita(nodo.id)\"\n          @meElimine=\"eliminarNodoCache(nodo.id)\"\n          @nodoSolidaridadCreado=\"addNodoToNodosSolidaridad($event)\"\n\n        />\n      </transition-group>\n\n      <div\n        id=\"indicadorCentroDescarga\"\n        :style=\"[\n          {\n            left: centroDescarga.x * factorZoom + 'px',\n            top: centroDescarga.y * factorZoom + 'px',\n            width: 20 * factorZoom + 'px',\n            height: 20 * factorZoom + 'px',\n          },\n        ]\"\n        v-show=\"usuario.username == 'juanMamian'\"\n      ></div>\n      <div\n        id=\"indicadorCentroVista\"\n        :style=\"[\n          {\n            left: centroVista.x * factorZoom + 'px',\n            top: centroVista.y * factorZoom + 'px',\n            width: 20 * factorZoom + 'px',\n            height: 20 * factorZoom + 'px',\n          },\n        ]\"\n        v-show=\"usuario.username == 'juanMamian'\"\n      ></div>\n    </div>\n\n    <!-- <ventanita-nodo\n      v-if=\"idNodoPaVentanita && nodoEnVentanita && !callingPosiciones\"      \n      :key=\"nodoEnVentanita.id\"\n      :esteNodo=\"nodoEnVentanita\"      \n      @cerrarme=\"cerrarNodoEnVentanita()\"\n    /> -->\n\n    <router-view\n      v-if=\"idNodoPaVentanita && nodoEnVentanita && !callingPosiciones\"\n      :key=\"nodoEnVentanita.id\"\n      :esteNodo=\"nodoEnVentanita\"\n      @cerrarme=\"cerrarNodoEnVentanita()\"\n    />\n\n    <transition name=\"fadeOutLento\">\n      <div id=\"nombreNodoEmergente\" v-show=\"showingNombreNodoEmergente\">\n        {{ nodoSeleccionado ? nodoSeleccionado.nombre : \"\" }}\n      </div>\n    </transition>\n\n    <div id=\"panelConfiguracion\" @mouseup.stop=\"\">\n      <div\n        class=\"boton botonPanelConfiguracion\"\n        :class=\"{ activo: mostrandoPersonas }\"\n        :title=\"mostrandoPersonas ? 'Ocultar personas' : 'Mostrar personas'\"\n        @click.stop=\"mostrandoPersonas = !mostrandoPersonas\"\n      >\n        <img src=\"@/assets/iconos/user.svg\" alt=\"Usuarios\" />\n      </div>\n    </div>\n\n    <loading\n      id=\"loadingNodos\"\n      v-show=\"        \n        $apollo.queries.nodoRoot.loading        \n      \"\n      texto=\"Descargando información...\"\n      colorLetra=\"white\"\n    />\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\n\nimport Loading from \"../utilidades/Loading.vue\";\nimport Nodo from \"./Nodo.vue\";\nimport EnlacesNodo from \"./EnlacesNodo.vue\";\nimport debounce from \"debounce\";\nimport { fragmentoNodoSolidaridad, fragmentoPersonaAtlas } from \"./frags\";\nimport NodoPersona from \"./NodoPersona.vue\";\nimport { MixinAtlasSolidaridad } from \"./MixinAtlasSolidaridad\";\nimport { QUERY_DATOS_USUARIO_ATLAS_SOLIDARIDAD } from \"./ConfiguracionNodoSolidaridad\";\n// const QUERY_NODOS = gql`\n//   query ($nivel: Int!) {\n//     nodosSolidaridadById(nivel: $nivel) {\n//       ...fragNodoSolidaridad\n//     }\n//   }\n//   ${fragmentoNodoSolidaridad}\n// `;\n\nexport const QUERY_PERSONAS_ATLAS_SOLIDARIDAD = gql`\n  query ($idsUsuarios: [ID!]) {\n    usuariosByIds(idsUsuarios: $idsUsuarios) {\n      ...fragPersonaAtlas\n    }\n  }\n  ${fragmentoPersonaAtlas}\n`;\n\nexport const QUERY_NODOS_ATLAS = gql`\n  query {\n    nodosSolidaridadByIds {\n      ...fragNodoSolidaridad\n    }\n  }\n  ${fragmentoNodoSolidaridad}\n`;\n\nexport default {\n  components: {\n    Loading,\n    Nodo,\n    EnlacesNodo,\n    NodoPersona,\n  },\n  name: \"AtlasSolidaridad\",\n  apollo: {           \n    yo: {\n      query: QUERY_DATOS_USUARIO_ATLAS_SOLIDARIDAD,\n      update({ yo }) {\n        this.calcularEsquinaVista(yo.coords);\n        this.datosYoDescargados = true;\n        return yo;\n      },\n      skip() {\n        return !this.usuarioLogeado || !this.montado;\n      },\n      fetchPolicy: \"network-only\",\n    },\n    $subscribe:{\n      nodosAtlasPosicionados: {\n        query: gql`\n          subscription ($idAtlas: ID!) {\n            nodosAtlasPosicionados(idAtlas: $idAtlas)\n          }\n        `,\n        variables: {\n          idAtlas: \"61b3fe0280509360825b2634\", //Id del atlas de solidaridad.\n        },\n        result() {\n          console.log(\n            `Nodos del atlas han sido posicionados. Refetching coords`\n          );\n          this.refetchCoordsNodos();\n        },\n      },\n    }    \n  },\n  mixins: [MixinAtlasSolidaridad],\n  data() {\n    return {\n      tipoNodoRoot:'usuario',\n      montado: false,\n      personas: [],\n      descargasPersonas: 0,\n      nodosRenderRoot: [],\n      nodosSolidaridadRender: [],\n\n      personasRenderRoot: [],\n      personasRender: [],\n\n      mostrandoMenuContextual: false,\n      posMenuContextual: {\n        top: 0,\n        left: 0,\n      },\n\n      esquinaVistaDecimal: {\n        x: 0,\n        y: 0,\n      },\n      centroDescarga: {\n        x: 0,\n        y: 0,\n      },\n\n      radioDescarga: null,\n      sizeAtlas: {\n        x: 0,\n        y: 0,\n        diagonal: 0,\n      },\n      panningVista: false,\n      vistaPanned: false,\n      hovered: false,\n\n      idNodoSeleccionado: null,\n      idNodoMenuCx: null,\n      idNodoCentradoArbol: null,\n\n      zoom: 80,\n      minZoom: 20,\n      maxZoom: 120,\n      showingZoomInfo: false,\n      infoPosZoom: null,\n\n      pinching: false,\n      lastPinchDistance: 0,\n\n      // proyectos: [],\n      // trabajos: [],\n      // objetivos: [],\n\n      enviandoQueryNodos: false,\n      refetchingCoords: false,\n      transicionarPosicionNodos: true,\n\n      callingPosiciones: false,\n\n      redibujarEnlacesNodos: 0,\n\n      enviandoCoordsVistaUsuario: false,\n      esquinaVistaCalculada: false,\n\n      mostrandoPersonas: false,\n\n      showingNombreNodoEmergente: false,\n      vista: \"atlas\",\n    };\n  },\n  methods: {    \n    setNodosRender() {\n      if (!this.indiceNodosUnder || this.indiceNodosUnder.length < 1) return [];\n      console.log(`Setting nodos render`);      \n      var currentTodosNodos = {\n        nodosSolidaridad: this.nodosSolidaridadRoot,\n        personas: this.personasRoot,\n      };\n      var nodosSolidaridadRender=this.nodosSolidaridadRoot;\n      var personasRender=this.personasRoot;\n\n      var idsnodosSolidaridadRenderParcial = nodosSolidaridadRender.map((nr) => nr.id);\n      var idsPersonasRenderParcial = personasRender.map((p) => p.id);\n      var cuenta = 0;\n      do {\n        cuenta++;\n        if (cuenta > 1000) {\n          console.log(`OVERFLOW`);\n          break;\n        }\n        //nodosUnder\n        let nodosUnder = currentTodosNodos.nodosSolidaridad\n          .concat(currentTodosNodos.personas)\n          .filter((cr) => this.idsNodosDesplegados.includes(cr.id))\n          .reduce((acc, cn) => {\n            const requeridos = this.indiceNodosUnder[cn.id].nodosRequeridos;\n            return acc.concat(requeridos.filter(r=>!acc.map(v=>v.id).includes(r.id)));\n          }, []);\n        let nodosUnderNuevos = nodosUnder.filter(\n          (nu) => !idsnodosSolidaridadRenderParcial.includes(nu.id)\n        );\n\n        //PersonasUnder\n        let personasUnder = [];\n        let personasUnderNuevos = [];\n        if (this.mostrandoPersonas) {\n          personasUnder = currentTodosNodos.nodosSolidaridad\n            .filter((n) => this.idsNodosDesplegados.includes(n.id))\n            .reduce((acc, cn) => {\n              const responsables=this.indiceNodosUnder[cn.id].responsables;\n              return acc.concat(responsables.filter(r=>!acc.map(v=>v.id).includes(r.id)));\n            }, []);\n          personasUnderNuevos = personasUnder.filter(\n            (p) => !idsPersonasRenderParcial.includes(p.id)\n          );\n        }\n\n        nodosSolidaridadRender = nodosSolidaridadRender.concat(nodosUnderNuevos);\n        personasRender = personasRender.concat(personasUnderNuevos);\n\n        currentTodosNodos.nodosSolidaridad = nodosUnderNuevos;\n        currentTodosNodos.personas = personasUnderNuevos;\n\n        idsnodosSolidaridadRenderParcial = nodosSolidaridadRender.map((nr) => nr.id);\n        idsPersonasRenderParcial = personasRender.map((p) => p.id);\n      } while (\n        currentTodosNodos.nodosSolidaridad.length + currentTodosNodos.personas.length >\n        0\n      );\n\n      this.nodosSolidaridadRender = nodosSolidaridadRender;\n      this.personasRender = personasRender;\n    },\n    setNodoEnVentanita(idNodo) {\n      console.log(`Setting path to ${idNodo}`);\n      // var currentPath = this.$route.currentRoute.path;\n      // console.log(`Era: ${currentPath}`);\n      this.$router.push({ name: \"nodoEnVentanita\", params: { idNv: idNodo } });\n    },\n    cerrarNodoEnVentanita() {\n      console.log(`Cerrando nodo en ventanita`);\n      this.$router.push({ name: \"atlasSolidaridad\" });\n    },\n    iniciarCallingPosiciones() {\n      var ciclos = prompt(\"¿Cuantos ciclos?\");\n      if (isNaN(ciclos)) {\n        return;\n      }\n\n      ciclos = Math.round(ciclos);\n      if (ciclos < 1) {\n        return;\n      }\n      console.log(`Enviando reposicionamiento de ${ciclos} ciclos`);\n      this.callingPosiciones = true;\n\n      this.$apollo\n        .query({\n          query: gql`\n            query ($ciclos: Int!) {\n              posicionarNodosSolidaridadByFuerzas(ciclos: $ciclos)\n            }\n          `,\n          variables: {\n            ciclos,\n          },\n        })\n        .then(() => {\n          this.callingPosiciones = false;\n        })\n        .catch((error) => {\n          this.callingPosiciones = false;\n          console.log(`Error: ${error}`);\n        });\n    },\n    calcularEsquinaVista(centro) {\n      console.log(`Centrando en usuario`);\n      if (this.esquinaVistaCalculada) return;\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"x\",\n        Math.round(centro.x - this.sizeAtlas.x / (2 * this.factorZoom))\n      );\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"y\",\n        Math.round(centro.y - this.sizeAtlas.y / (2 * this.factorZoom))\n      );\n      this.esquinaVistaCalculada = true;\n    },\n    abrirMenuContextual(e) {\n      let posAtlas = this.$el.getBoundingClientRect();\n\n      let topClick = Math.round(e.pageY - posAtlas.top);\n      let leftClick = Math.round(e.pageX - posAtlas.left);\n\n      this.$set(this.posMenuContextual, \"y\", topClick);\n      this.$set(this.posMenuContextual, \"x\", leftClick);\n      this.mostrandoMenuContextual = true;\n    },\n    uploadVistaActual: debounce(function () {\n      this.enviandoCoordsVistaUsuario = true;\n      console.log(`Uploading vista de usuario`);\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($coords: CoordsInput!) {\n              setCoordsVistaAtlasSolidaridadUsuario(coords: $coords)\n            }\n          `,\n          variables: {\n            coords: {\n              x: Math.round(\n                this.esquinaVistaDecimal.x +\n                  this.sizeAtlas.x / (2 * this.factorZoom)\n              ),\n              y: Math.round(\n                this.esquinaVistaDecimal.y +\n                  this.sizeAtlas.y / (2 * this.factorZoom)\n              ),\n            },\n          },\n        })\n        .then(() => {\n          this.enviandoCoordsVistaUsuario = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoCoordsVistaUsuario = false;\n        });\n    }, 3000),\n    desplazarVista(deltaX, deltaY) {\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"x\",\n        this.esquinaVistaDecimal.x - deltaX\n      );\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"y\",\n        this.esquinaVistaDecimal.y - deltaY\n      );\n      this.uploadVistaActual();\n    },\n    panVista(e) {\n      if (!this.panningVista) {\n        return;\n      }\n      this.desplazarVista(\n        e.movementX / this.factorZoom,\n        e.movementY / this.factorZoom\n      );\n      e.preventDefault();\n      this.vistaPanned = true;\n    },\n    clickFondoAtlas() {\n      if (!this.vistaPanned) {\n        if (!this.idNodoPaVentanita) {\n          this.idNodoSeleccionado = null;\n        }\n        if (this.$route.name === \"nodoEnVentanita\") {\n          this.cerrarNodoEnVentanita();\n        }\n        this.idNodoMenuCx = null;\n\n        if (this.$route.name === \"atlasConLista\") {\n          this.$router.push({ name: \"atlasSolidaridad\" });\n        }\n      }\n      this.mostrandoMenuContextual = false;\n\n      this.panningVista = false;\n      this.vistaPanned = false;\n    },\n    movimientoMobile(e) {\n      if (this.pinching) {\n        var contenedor = this.$el;\n        let posContenedor = contenedor.getBoundingClientRect();\n\n        const posPinch = {\n          x:\n            (e.touches[0].pageX -\n              posContenedor.left +\n              (e.touches[1].pageX - posContenedor.left)) /\n            2,\n          y:\n            (e.touches[0].pageY -\n              posContenedor.top +\n              (e.touches[1].pageY - posContenedor.top)) /\n            2,\n        }; //Posición en pixeles.\n\n        const coordsPinch = {\n          x: Math.round(\n            posPinch.x / this.factorZoom + this.esquinaVistaDecimal.x\n          ),\n          y: Math.round(\n            posPinch.y / this.factorZoom + this.esquinaVistaDecimal.y\n          ),\n        }; //Posicion en unidades absolutas (Las que usa el atlas)\n\n        var dist = Math.hypot(\n          e.touches[0].pageX - e.touches[1].pageX,\n          e.touches[0].pageY - e.touches[1].pageY\n        );\n        var pinch = dist - this.lastPinchDistance;\n        pinch = pinch * 0.3;\n        this.zoomVista(pinch, coordsPinch);\n        this.lastPinchDistance = dist;\n\n        return;\n      }\n\n      const deltaX = Math.round(\n        (e.changedTouches[0].clientX - this.ultimoTouchX) / this.factorZoom\n      );\n      const deltaY = Math.round(\n        (e.changedTouches[0].clientY - this.ultimoTouchY) / this.factorZoom\n      );\n      this.ultimoTouchX = e.changedTouches[0].clientX;\n      this.ultimoTouchY = e.changedTouches[0].clientY;\n\n      this.desplazarVista(deltaX, deltaY);\n    },\n    iniciaMovimientoTouch(e) {\n      if (e.touches.length === 2) {\n        var dist = Math.hypot(\n          e.touches[0].pageX - e.touches[1].pageX,\n          e.touches[0].pageY - e.touches[1].pageY\n        );\n        this.lastPinchDistance = dist;\n        this.pinching = true;\n        return;\n      }\n\n      this.ultimoTouchX = e.changedTouches[0].clientX;\n      this.ultimoTouchY = e.changedTouches[0].clientY;\n    },\n    finTouch() {\n      this.pinching = false;\n    },\n    zoomVista(deltaZoom, posZoom) {\n      const viejoZoom = this.zoom;\n      var nuevoZoom = Math.round(this.zoom + deltaZoom);\n      if (nuevoZoom < this.minZoom) {\n        this.zoom = this.minZoom;\n      } else if (nuevoZoom > this.maxZoom) {\n        this.zoom = this.maxZoom;\n      } else {\n        this.zoom = nuevoZoom;\n      }\n\n      //Pan vista de acuerdo con la posición del mouse respecto del atlas\n      const distanciaEsquina = {\n        x: posZoom.x - this.esquinaVistaDecimal.x,\n        y: posZoom.y - this.esquinaVistaDecimal.y,\n      };\n      const proporcionZoom = viejoZoom / this.zoom;\n\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"x\",\n        posZoom.x - proporcionZoom * distanciaEsquina.x\n      );\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"y\",\n        posZoom.y - proporcionZoom * distanciaEsquina.y\n      );\n    },\n    zoomWheel(e) {\n      if (!this.hovered || !e.ctrlKey) {\n        return;\n      }\n      e.preventDefault();\n      var contenedor = document.getElementById(\"contenedorNodos\");\n      let posContenedor = contenedor.getBoundingClientRect();\n\n      const posZoom = {\n        x: Math.round((e.clientX - posContenedor.left) / this.factorZoom),\n        y: Math.round((e.clientY - posContenedor.top) / this.factorZoom),\n      };\n\n      const factorZoom = 0.2;\n      this.zoomVista(-Math.round(e.deltaY * factorZoom), posZoom);\n\n      // const posZoom={\n      //   x: Math.round((e.clientX-posContenedor.left)/this.factorZoom)+this.esquinaVista.x,\n      //   y: Math.round((e.clientY-posContenedor.top)/this.factorZoom)+this.esquinaVista.y\n      // }\n\n      // const proporciones={\n      //   x: (posZoom.x-this.esquinaVistaDecimal.x)/(posContenedor.width/this.factorZoom),\n      //   y: (posZoom.y-this.esquinaVistaDecimal.y)/(posContenedor.height/this.factorZoom),\n      // }\n\n      // const factorZoom=0.2;\n      // this.zoomVista(-Math.round(e.deltaY*factorZoom), {x:posZoom.x, y: posZoom.y});\n\n      // this.$set(this.esquinaVistaDecimal, \"x\", posZoom.x-((posContenedor.width/this.factorZoom)*proporciones.x) );\n      // this.$set(this.esquinaVistaDecimal, \"y\", posZoom.y-((posContenedor.height/this.factorZoom)*proporciones.y) );\n    },\n    eliminarNodoCache(idNodo) {\n      console.log(`Eliminando nodo de caché`);\n      const indexN=this.nodosSolidaridad.find(n=>n.id===idNodo);\n      if(indexN>-1){\n        this.nodosSolidaridad.splice(indexN, 1);\n      }\n      else{\n        console.log(`Nodo no estaba en lista`);\n      }\n    },\n    crearNodoEnMenuContextual(tipo) {\n      let posContenedor = document\n        .getElementById(\"contenedorNodos\")\n        .getBoundingClientRect();\n\n      var posicionNuevoNodo = {\n        x: parseInt(\n          (parseInt(this.posMenuContextual.x) - posContenedor.left) /\n            this.factorZoom\n        ),\n        y: parseInt(\n          (parseInt(this.posMenuContextual.y) - posContenedor.top) /\n            this.factorZoom\n        ),\n      };\n\n      console.log(`Creando nuevo nodo en ${JSON.stringify(posicionNuevoNodo)}`);\n      this.crearNodo(posicionNuevoNodo, tipo);\n    },\n    crearNodo(posicion, tipoNodo) {\n      if (!this.usuario || !this.usuario.id) {\n        console.log(`Error usuario no logeado`);\n        return;\n      }\n      console.log(`enviando una mutación de crear nodo`);\n      this.enviandoQueryNodos = true;\n\n      let infoNodo = {\n        coords: {\n          x: posicion.x,\n          y: posicion.y,\n        },\n        tipoNodo,\n      };\n      console.log(`en las coordenadas: ${posicion.x}, ${posicion.y}`);\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($infoNodo: NodoSolidaridadInput!) {\n              crearNodoSolidaridad(infoNodo: $infoNodo) {\n                ...fragNodoSolidaridad\n              }\n            }\n            ${fragmentoNodoSolidaridad}\n          `,\n          variables: {\n            infoNodo,\n          },\n        })\n        .then(({ data: { crearNodoSolidaridad } }) => {\n          console.log(`Creado ${crearNodoSolidaridad.id}`);\n          const store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_NODOS_ATLAS,\n            variables: {\n              centro: {\n                x: this.centroDescarga.x,\n                y: this.centroDescarga.y,\n              },\n              radio: this.radioDescarga,\n            },\n          });\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n          var losNodos = nuevoCache.nodosSolidaridadById;\n          const indexN = losNodos.findIndex(\n            (n) => n.id === crearNodoSolidaridad.id\n          );\n          if (indexN > -1) {\n            console.log(`El nodo ya estaba en caché`);\n          } else {\n            losNodos.push(crearNodoSolidaridad);\n            store.writeQuery({\n              query: QUERY_NODOS_ATLAS,\n              variables: {\n                centro: {\n                  x: this.centroDescarga.x,\n                  y: this.centroDescarga.y,\n                },\n                radio: this.radioDescarga,\n              },\n              data: nuevoCache,\n            });\n          }\n          this.setNodoEnVentanita(crearNodoSolidaridad.id);\n          this.enviandoQueryNodos = false;\n          this.mostrandoMenuContextual = false;\n\n          //this.$router.push(\"/nodoConocimiento/\"+crearNodoSolidaridad.id);\n        })\n        .catch((error) => {\n          this.enviandoQueryNodos = false;\n          console.log(`Error. E: ${error}`);\n        });\n    },\n    centrarEnNodo(n) {\n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();\n\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"x\",\n        n.coords.x - posContenedor.width / (2 * this.factorZoom)\n      );\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"y\",\n        n.coords.y - posContenedor.height / (2 * this.factorZoom)\n      );\n      this.idNodoSeleccionado = n.id;\n      //this.centroVista=e;\n    },\n    centrarEnNodoById(idNodo) {\n      var contenedor = this.$el;\n      let posContenedor = contenedor.getBoundingClientRect();\n\n      const elNodo = this.todosNodos.find((n) => n.id === idNodo);\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"x\",\n        elNodo.coords.x - posContenedor.width / (2 * this.factorZoom)\n      );\n      this.$set(\n        this.esquinaVistaDecimal,\n        \"y\",\n        elNodo.coords.y - posContenedor.height / (2 * this.factorZoom)\n      );\n      this.idNodoSeleccionado = idNodo;\n\n      //this.centroVista=e;\n    },\n\n    uploadNodosDesplegados: debounce(function () {\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idsNodos: [ID!]) {\n              setNodosSolidaridadDesplegadosUsuario(idsNodos: $idsNodos)\n            }\n          `,\n          variables: {\n            idsNodos: this.idsNodosDesplegados,\n          },\n        })\n        .then(() => {})\n        .catch((error) => {\n          console.log(`Error: E:${error}`);\n        });\n    }, 5000),\n    refetchCoordsNodos: debounce(function () {\n      console.log(`Iniciando refetch de coords`);\n      this.refetchingCoords = true;\n      this.$apollo\n        .query({\n          query: gql`\n            query ($idsNodos: [ID!]) {\n              nodosSolidaridadByIds(idsNodos: $idsNodos) {\n                id\n                coords {\n                  x\n                  y\n                }\n              }\n            }\n          `,\n          variables: {\n            idsNodos: this.todosNodos.map((n) => n.id),\n          },\n        })\n        .then(() => {\n          console.log(`Coords refetched`);\n          this.refetchingCoords = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.refetchingCoords = false;\n        });\n    }, 2000),\n    hideNombreNodoEmergente: debounce(function () {\n      this.showingNombreNodoEmergente = false;\n    }, 4000),\n    hideZoomInfo: debounce(function () {\n      this.showingZoomInfo = false;\n    }, 1000),\n  },\n  computed: {\n    personasRoot(){\n      if(this.nodoRoot.__typename==='Usuario'){\n        return [this.nodoRoot]\n      }\n      else{\n        return []\n      }\n    },\n    nodosSolidaridadRoot(){\n      if(this.nodoRoot.__typename==='NodoSolidaridad'){\n        return [this.nodoRoot]\n      }\n      else{\n        return []\n      }\n    },\n    nodoYo() {\n      if (!this.usuarioLogeado) return null;\n      return this.personas.find((p) => p.id === this.usuario.id);\n    },\n    idNodoRoot() {\n      return this.usuario ? this.usuario.id : null;\n    },    \n    idNodoPaVentanita() {\n      return this.$route.params.idNv;\n    },\n    refreshNodoVentanita() {\n      return this.$store.state.refreshNodoVentanitaAtlasSolidaridad;\n    },\n    offsetMenuContextual() {\n      return {\n        top: this.posMenuContextual.y + \"px\",\n        left: this.posMenuContextual.x + \"px\",\n      };\n    },\n    factorZoom() {\n      return Number((this.zoom / 100).toFixed(2));\n    },\n    esquinaVista() {\n      return {\n        x: Math.round(this.esquinaVistaDecimal.x),\n        y: Math.round(this.esquinaVistaDecimal.y),\n      };\n    },\n    centroVista() {\n      return {\n        x: this.esquinaVista.x + this.sizeAtlas.x / this.factorZoom / 2,\n        y: this.esquinaVista.y + this.sizeAtlas.y / this.factorZoom / 2,\n      };\n    },\n    posContenedores() {\n      return {\n        left: -(this.esquinaVista.x * this.factorZoom) + \"px\",\n        top: -(this.esquinaVista.y * this.factorZoom) + \"px\",\n      };\n    },\n    posCuadroDescarga() {\n      const posx =\n        this.centroDescarga.x - this.radioDescarga - this.esquinaVista.x;\n      const posy =\n        this.centroDescarga.y - this.radioDescarga - this.esquinaVista.y;\n      return {\n        left: posx * this.factorZoom + \"px\",\n        top: posy * this.factorZoom + \"px\",\n      };\n    },\n    nodoEnVentanita() {\n      if (!this.idNodoPaVentanita) return null;\n      return this.nodosSolidaridad.find((n) => n.id == this.idNodoPaVentanita);\n    },\n    nodoSeleccionado() {\n      return this.todosNodos.find((n) => n.id === this.idNodoSeleccionado);\n    },\n    // nodoCentradoArbol() {\n    //   return this.nodosTodos.find((n) => n.id === this.idNodoCentradoArbol);\n    // },\n    usuarioAdministradorNodoSeleccionado() {\n      if (!this.usuario || !this.usuario.id) return false;\n      if (!this.nodoSeleccionado) return false;\n      return this.nodoSeleccionado.administradores.includes(this.usuario.id);\n    },\n    usuarioResponsableNodoSeleccionado() {\n      if (!this.usuario || !this.usuario.id) return false;\n      if (!this.nodoSeleccionado) return false;\n\n      return this.nodoSeleccionado.responsables.includes(this.usuario.id);\n    },\n    usuarioResponsableAmplioNodoSeleccionado() {\n      if (!this.usuarioLogeado || !this.usuario || !this.usuario.id)\n        return false;\n\n      if (!this.nodoSeleccionado) return false;\n      return (\n        this.nodoSeleccionado.responsablesAmplio &&\n        this.nodoSeleccionado.responsablesAmplio.includes(this.usuario.id)\n      );\n    },\n    nodosRequierenSeleccionado() {\n      if (!this.idNodoSeleccionado) return [];\n      return this.todosNodos.filter((n) =>\n        n.vinculos\n          .filter((v) => v.tipo == \"requiere\")\n          .map((v) => v.idRef)\n          .includes(this.idNodoSeleccionado)\n      );\n    },\n    nodosRequeridosSeleccionado() {\n      return this.todosNodos.filter((n) =>\n        this.idsNodosRequeridosSeleccionado.includes(n.id)\n      );\n    },\n    idsNodosChildrenSeleccionado() {\n      if (!this.nodoSeleccionado || !this.indiceNodosUnder) return [];\n      return this.indiceNodosUnder[this.idNodoSeleccionado].nodosChildren.map(\n        (n) => n.id\n      );\n    },\n    idsNodosRequierenSeleccionado() {\n      return this.nodosRequierenSeleccionado.map((n) => n.id);\n    },\n    idsNodosRequeridosSeleccionado() {\n      if (!this.nodoSeleccionado) {\n        return [];\n      }\n      return this.nodoSeleccionado.vinculos\n        .filter((v) => v.tipo == \"requiere\")\n        .map((v) => v.idRef);\n    },\n    idsNodosDesplegados() {\n      if (\n        !this.yo ||\n        !this.yo.atlasSolidaridad ||\n        !this.yo.atlasSolidaridad.idsNodosDesplegados\n      )\n        return [];\n      return this.yo.atlasSolidaridad.idsNodosDesplegados;\n    },   \n    trabajos() {\n      return this.nodosSolidaridad.filter((n) => n.tipoNodo === \"trabajo\");\n    },\n    objetivos() {\n      return this.nodosSolidaridad.filter((n) => n.tipoNodo === \"objetivo\");\n    },\n    nodosConRequerimentos() {\n      var nr = this.todosNodos.filter(\n          (n) =>\n            n.vinculos.filter((v) => v.tipo === \"requiere\").length > 0 ||\n            (n.__typename==='NodoSolidaridad' && n.responsables.length > 0)\n        );\n\n      return nr;\n    },        \n    idsNodosSolidaridadRender() {\n      return this.nodosSolidaridadRender.map((n) => n.id);\n    },\n    idsPersonasRender() {\n      return this.personasRender.map((n) => n.id);\n    },\n    idsTodosNodosRender() {\n      return this.idsNodosSolidaridadRender.concat(this.idsPersonasRender);\n    },\n    \n  },\n  watch: {\n    centroVista(actual) {\n      const distanciaCentroDescarga = Math.hypot(\n        this.centroDescarga.x - actual.x,\n        this.centroDescarga.y - actual.y\n      );\n      // console.log(`Distancia centro descarga: ${distanciaCentroDescarga}`);\n      if (\n        this.radioDescarga - distanciaCentroDescarga <\n        this.sizeAtlas.diagonal / this.factorZoom / 2\n      ) {\n        //Hora de actualizar nodos\n        this.radioDescarga = Math.ceil(\n          (Math.max(this.sizeAtlas.x, this.sizeAtlas.y) * 2) / this.factorZoom\n        );\n        this.$set(this.centroDescarga, \"x\", Math.round(this.centroVista.x));\n        this.$set(this.centroDescarga, \"y\", Math.round(this.centroVista.y));\n      }\n    },\n    idNodoSeleccionado(nuevo) {\n      if (!nuevo) {\n        // this.cerrarNodoEnVentanita();\n        this.showingNombreNodoEmergente = false;\n      } else {\n        // this.$refs.listas.desplegarCascadaHaciaNodo(nuevo);\n        if (this.zoom < 65) {\n          this.showingNombreNodoEmergente = true;\n          this.hideNombreNodoEmergente();\n        }\n      }\n    },\n    zoom() {\n      this.transicionarPosicionNodos = false;\n      this.showingZoomInfo = true;\n      this.hideZoomInfo();\n    },\n    idsNodosDesplegados() {\n      if (this.usuarioLogeado) {\n        this.setNodosRender();\n        this.uploadNodosDesplegados();\n      }\n    },\n    personas() {\n      this.setNodosRender();\n    },\n    todosNodos() {\n      this.setNodosRender();\n    },\n    mostrandoPersonas() {\n      this.setNodosRender();\n    },\n    idsTodosNodosRender() {\n      const idsNuevosPersonas = this.idsPersonasRender.filter(\n        (id) => !this.infoNodosEverRendered.map((ner) => ner.id).includes(id)\n      );\n      const idsNuevosNodosSolidaridad = this.idsNodosSolidaridadRender.filter(\n        (id) => !this.infoNodosEverRendered.map((ner) => ner.id).includes(id)\n      );\n\n      const infoPersonasNuevosRender = idsNuevosPersonas.map((idp) => {\n        return { id: idp, tipo: \"usuario\" };\n      });\n      const infoNodosSolidaridadNuevosRender = idsNuevosNodosSolidaridad.map(\n        (idn) => {\n          return { id: idn, tipo: \"nodoSolidaridad\" };\n        }\n      );\n\n      this.infoNodosEverRendered = this.infoNodosEverRendered\n        .concat(infoPersonasNuevosRender)\n        .concat(infoNodosSolidaridadNuevosRender);\n    },\n    \n  },\n  mounted() {\n    var posAtlas = this.$el.getBoundingClientRect();\n    this.$set(this.sizeAtlas, \"x\", posAtlas.width);\n    this.$set(this.sizeAtlas, \"y\", posAtlas.height);\n    this.$set(\n      this.sizeAtlas,\n      \"diagonal\",\n      Math.hypot(this.sizeAtlas.x, this.sizeAtlas.y)\n    );\n\n    this.radioDescarga = Math.ceil(\n      (Math.max(this.sizeAtlas.x, this.sizeAtlas.y) * 2) / this.factorZoom\n    );\n    this.montado = true;\n    this.$el.scrollIntoView({ behavior: \"smooth\" });\n  },\n  created() {\n    window.addEventListener(\"wheel\", this.zoomWheel, { passive: false });\n  },\n  removed() {\n    window.removeEventListener(\"wheel\", this.zoomWheel);\n  },\n  // beforeRouteLeave(to, from, next) {\n  //   console.log(`Hacia: ${to}`);\n  //   if (this.$refs.listas.abierta) {\n  //     this.$refs.listas.abierta = false;\n  //     return next(false);\n  //   }\n  //   if (this.idNodoPaVentanita) {\n  //     this.idNodoPaVentanita = null;\n  //     return next(false);\n  //   }\n  //   next();\n  // },\n};\n</script>\n<style>\n:root {\n  --atlasFondo: #12263a;\n  --atlasVerde: #4d8b31;\n  --atlasAmarillo: #ffc800;\n  --atlasAzul: #69c7c7;\n  --atlasFondoNodo: #a9d1d1;\n  --atlasNaranja: #ef7229;\n  --atlasMorado: #ba2c73;\n  --atlasGris: #929292;\n  --atlasParent: #3066be;\n\n  --atlasFilterFondo: invert(10%) sepia(55%) saturate(1034%) hue-rotate(174deg)\n    brightness(91%) contrast(91%);\n  --atlasFilterVerde: invert(41%) sepia(84%) saturate(349%) hue-rotate(57deg)\n    brightness(95%) contrast(89%);\n  --atlasFilterAmarillo: invert(79%) sepia(32%) saturate(4772%) hue-rotate(3deg)\n    brightness(108%) contrast(105%);\n  --atlasFilterAzul: invert(73%) sepia(20%) saturate(732%) hue-rotate(131deg)\n    brightness(92%) contrast(98%);\n  --atlasFilterNaranja: invert(53%) sepia(29%) saturate(1745%)\n    hue-rotate(340deg) brightness(96%) contrast(95%);\n  --atlasFilterMorado: invert(27%) sepia(24%) saturate(4772%) hue-rotate(301deg)\n    brightness(92%) contrast(95%);\n  --atlasFilterGris: invert(61%) sepia(0%) saturate(1316%) hue-rotate(210deg)\n    brightness(97%) contrast(81%);\n  --filterBlanco: invert(100%) sepia(100%) saturate(0%) hue-rotate(130deg)\n    brightness(106%) contrast(102%);\n}\n</style>\n<style scoped>\n.atlasSolidaridad {\n  overflow: hidden;\n  position: relative;\n  background-color: #12263a;\n  height: 100vh;\n}\n#botonVistaLista {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 22px;\n  left: 22px;\n  filter: var(--atlasFilterGris);\n  cursor: pointer;\n  z-index: 2;\n}\n#botonVistaLista:hover {\n  filter: var(--filterBlanco);\n}\n.ventanaLista {\n  position: absolute;\n  top: 0;\n  left: 0%;\n  transition: transform 0.6s;\n  box-shadow: 4px 4px 6px rgba(152, 143, 253, 0.25);\n  background-color: #a9d1d1;\n  width: min(1000px, 100%);\n}\n\n.nodoVistaLista #barraSuperior {\n  background-color: red;\n}\n#menuContextual {\n  position: absolute;\n  background-color: rgb(173, 173, 173);\n  z-index: 2;\n}\n.botonMenuContextual {\n  padding: 5px 10px;\n  cursor: pointer;\n}\n.botonMenuContextual:hover {\n  background-color: gray;\n}\n#contenedorNodos {\n  position: relative;\n  z-index: 1;\n}\n#contenedorVinculosNodos {\n  position: relative;\n}\n\n#canvasesatlasSolidaridad {\n  position: relative;\n}\n#centroVista {\n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  background-color: orange;\n  transform: translate(-50%, -50%);\n  position: absolute;\n}\n\n#botonCallingPosiciones {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 1px solid black;\n  position: absolute;\n  top: 1%;\n  right: 1%;\n  cursor: pointer;\n  z-index: 100;\n}\n.ventanitaNodo {\n  width: min(400px, 90%);\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  z-index: 60;\n}\n#loadingNodos {\n  position: absolute;\n  bottom: 50%;\n  left: 50%;\n  transform: translateX(-50%);\n}\n#indicadorCentroDescarga {\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  background-color: red;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n}\n#indicadorCentroVista {\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  background-color: rgb(0, 60, 255);\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n}\n\n#infoZoom {\n  position: absolute;\n  top: 2%;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px;\n  display: inline-block;\n  font-weight: bold;\n  color: rgb(102, 102, 102);\n  z-index: 3;\n}\n\n#nombreNodoEmergente {\n  position: fixed;\n  bottom: 5px;\n  left: 50%;\n  transform: translateX(-50%);\n  border-radius: 10px;\n  border: 2px solid rgb(56, 128, 131);\n  background-color: rgb(185, 215, 216);\n  padding: 10px;\n  font-size: 20px;\n  z-index: 10;\n}\n#panelConfiguracion {\n  position: fixed;\n  bottom: 1vh;\n  right: 3vw;\n}\n\n.botonPanelConfiguracion {\n  height: 25px;\n  padding: 5px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid transparent;\n}\n.botonPanelConfiguracion.activo {\n  border-color: white;\n}\n.botonPanelConfiguracion img {\n  height: 100%;\n}\n.fadeOut-leave-to {\n  opacity: 0;\n}\n.fadeOut-leave-active {\n  transition: opacity 1s;\n}\n.fadeOut-leave {\n  opacity: 1;\n}\n\n.fadeOutLento-leave-to {\n  opacity: 0;\n}\n.fadeOutLento-leave-active {\n  transition: opacity 2s;\n}\n.fadeOutLento-leave {\n  opacity: 1;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>"],"sourceRoot":"src/components/atlasSolidaridad"}]}