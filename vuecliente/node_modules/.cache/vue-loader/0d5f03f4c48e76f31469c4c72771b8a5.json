{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/usuario/Notificacion.vue?vue&type=style&index=0&id=4932e4e6&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/usuario/Notificacion.vue","mtime":1643654906679},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ub3RpZmljYWNpb24gewogIHdpZHRoOiAzMDBweDsKICBoZWlnaHQ6IDEzMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMzgsIDIyNywgMjE5KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAxMzgsIDU4KTsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMTAwcHggMWZyOwogIGdyaWQtdGVtcGxhdGUtcm93czogMTVweCAxZnI7CiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczoKICAgICJpbmZvIGluZm8iCiAgICAiaW1hZ2VuIHRleHRvIjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktaXRlbXM6IGNlbnRlcjsKICBjdXJzb3I6IHBvaW50ZXI7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoubm90aWZpY2FjaW9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMxLCAxNjgsIDExOSk7Cn0KI2luZm8gewogIGdyaWQtYXJlYTogaW5mbzsKICBmb250LXNpemU6IDExcHg7CiAgY29sb3I6IHdoaXRlOwp9CiNjYXJpdGFDYXVzYW50ZSB7CiAgZ3JpZC1hcmVhOiBpbWFnZW47CiAgd2lkdGg6IDcwcHg7CiAgaGVpZ2h0OiA3MHB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQojdGV4dG8gewogIGdyaWQtYXJlYTogdGV4dG87Cn0KLnRleHRvVGFyZ2V0IHsKICBjb2xvcjogd2hpdGU7Cn0KLnJlY29nZXJzZUFycmliYS1sZWF2ZS10byB7CiAgaGVpZ2h0OiAwcHg7Cn0KLnJlY29nZXJzZUFycmliYS1sZWF2ZS1hY3RpdmUgewogIHRyYW5zaXRpb246IGhlaWdodCAwLjNzOwp9Cg=="},{"version":3,"sources":["Notificacion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notificacion.vue","sourceRoot":"src/components/usuario","sourcesContent":["<template>\n  <transition name=\"recogerseArriba\">\n    <div class=\"notificacion\" @click=\"visitar\">\n      <div id=\"info\">{{ fechaFormateada }}</div>\n      <img\n        :src=\"\n          this.serverUrl +\n          '/api/usuarios/fotografias/' +\n          estaNotificacion.causante.id\n        \"\n        alt=\"\"\n        id=\"caritaCausante\"\n      />\n      <div id=\"texto\" v-html=\"mensaje\"></div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport { QUERY_YO } from \"../../App.vue\";\nexport default {\n  name: \"Notificacion\",\n  props: {\n    estaNotificacion: {\n      type: Object,\n      default: function () {\n        return {};\n      },\n    },\n  },\n  methods: {\n    visitar() {\n      var enlace = \"/\";\n      if (this.estaNotificacion.elementoTarget.tipo == \"actividadEstudiantil\") {\n        enlace += \"actividad/\" + this.estaNotificacion.elementoTarget.id;\n      } else if (\n        this.estaNotificacion.elementoTarget.tipo === \"nodoAtlasSolidaridad\"\n      ) {\n        enlace += \"atlasSolidaridad/\" + this.estaNotificacion.elementoTarget.id;\n      }\n      this.eliminarse();\n      this.$router.push(enlace).catch((error) => {\n        console.log(`Error de navegaciÃ³n: ${error.message.substr(0, 28)}`);\n        if (error.message.substr(0, 28) == \"Avoided redundant navigation\") {\n          console.log(`Refreshing`);\n          //this.$router.go();\n          if (\n            this.estaNotificacion.elementoTarget.tipo == \"actividadEstudiantil\"\n          ) {\n              this.$store.commit(\"refreshActividadEspecifica\");\n\n          } else if (\n            this.estaNotificacion.elementoTarget.tipo === \"nodoAtlasSolidaridad\"\n          ) {\n            this.$store.commit(\"refreshNodoVentanitaAtlasSolidaridad\");\n          }\n        }\n      });\n    },\n    eliminarse() {\n      let idNotificacion = this.estaNotificacion.id;\n      console.log(`Eliminandose: ${idNotificacion}`);\n      this.$apollo.mutate({\n        mutation: gql`\n          mutation ($idNotificacion: ID!) {\n            eliminarNotificacion(idNotificacion: $idNotificacion)\n          }\n        `,\n        variables: {\n          idNotificacion,\n        },\n        update: (store, { data: { eliminarNotificacion } }) => {\n          if (eliminarNotificacion) {\n            let cache = store.readQuery({\n              query: QUERY_YO,\n              variables: { idNotificacion },\n            });\n            let nuevoCache = JSON.parse(JSON.stringify(cache));\n            let indexN = nuevoCache.yo.notificaciones.findIndex(\n              (n) => n.id == idNotificacion\n            );\n            if (indexN > -1) {\n              nuevoCache.yo.notificaciones.splice(indexN, 1);\n            }\n            store.writeQuery({\n              query: QUERY_YO,\n              variables: { idNotificacion },\n              data: nuevoCache,\n            });\n          }\n        },\n      });\n    },\n  },\n  computed: {\n    mensaje: function () {\n      var mensaje = \"\";\n      if (this.estaNotificacion.elementoTarget.tipo == \"actividadEstudiantil\") {\n        if (this.estaNotificacion.elementoTarget.nombre) {\n          mensaje +=\n            \"Tienes una nueva respuesta en la actividad <span style='color: white' class='textoTarget'>\" +\n            this.estaNotificacion.elementoTarget.nombre +\n            \"</span>\";\n        } else {\n          mensaje += \"Tienes una nueva respuesta en una actividad\";\n        }\n      } else {\n        mensaje = this.estaNotificacion.texto;\n      }\n      return mensaje;\n    },\n    fechaFormateada: function () {\n      let laFecha = new Date(this.estaNotificacion.fecha).toString();\n      let indexParentesis = laFecha.indexOf(\"(\");\n      let fechaCorta = laFecha.substr(0, indexParentesis);\n      let indexGMT = fechaCorta.indexOf(\"GMT\");\n      if (indexGMT > -1) {\n        fechaCorta = fechaCorta.substr(0, indexGMT);\n      }\n      return fechaCorta;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.notificacion {\n  width: 300px;\n  height: 130px;\n  border: 1px solid rgb(238, 227, 219);\n  background-color: rgb(243, 138, 58);\n  display: grid;\n  grid-template-columns: 100px 1fr;\n  grid-template-rows: 15px 1fr;\n  grid-template-areas:\n    \"info info\"\n    \"imagen texto\";\n  align-items: center;\n  justify-items: center;\n  cursor: pointer;\n  overflow: hidden;\n}\n.notificacion:hover {\n  background-color: rgb(231, 168, 119);\n}\n#info {\n  grid-area: info;\n  font-size: 11px;\n  color: white;\n}\n#caritaCausante {\n  grid-area: imagen;\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n}\n#texto {\n  grid-area: texto;\n}\n.textoTarget {\n  color: white;\n}\n.recogerseArriba-leave-to {\n  height: 0px;\n}\n.recogerseArriba-leave-active {\n  transition: height 0.3s;\n}\n</style>"]}]}