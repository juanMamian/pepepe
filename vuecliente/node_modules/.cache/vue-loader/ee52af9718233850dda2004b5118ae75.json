{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue?vue&type=style&index=0&id=0f2a460c&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue","mtime":1676034838357},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3RhTm9kb3MgewogIGRpc3BsYXk6IGZsZXg7CiAgcGFkZGluZzogMjBweCAyMHB4OwogIHBhZGRpbmctYm90dG9tOiA5MHB4OwogIGdhcDogNjBweDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCiNiYXJyYVByb2dyZXNvIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5OwogIGhlaWdodDogMTJweDsKICB3aWR0aDogMTAwJTsKfQojYmFycmFQcm9ncmVzb1ZlcmRlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsKICBoZWlnaHQ6IDEwMCU7Cn0KCiNudW1lcm9Qcm9ncmVzbyB7CiAgd2lkdGg6IDEwMCU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgojYmFycmFTdXBlcmlvciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQo="},{"version":3,"sources":["ColeccionNodosConocimiento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ColeccionNodosConocimiento.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div class=\"coleccionNodosConocimiento\">\n    <div\n      id=\"zonaBarraProgreso\"\n      v-show=\"!$apollo.queries.progresoColeccion.loading\"\n    >\n      <div id=\"barraProgreso\">\n        <div\n          id=\"barraProgresoVerde\"\n          :style=\"[{ width: progresoColeccion + '%' }]\"\n        ></div>\n      </div>\n\n      <div id=\"numeroProgreso\">{{ progresoColeccion }}%</div>\n    </div>\n\n    <loading v-show=\"$apollo.queries.progresoColeccion.loading\" />\n\n    <div class=\"barraSeccion\" id=\"barraSuperior\">\n      <div\n        id=\"elTitulo\"\n        v-show=\"!editandoTitulo\"\n        @click.stop=\"iniciarEdicionTitulo\"\n      >\n        {{ estaColeccion.titulo }}\n      </div>\n\n      <input\n        :class=\"{ deshabilitado: guardandoNuevoTitulo }\"\n        type=\"text\"\n        id=\"inputNuevoTitulo\"\n        style=\"text-align: center\"\n        ref=\"inputNuevoTitulo\"\n        v-show=\"editandoTitulo\"\n        @keypress.enter=\"guardarNuevoTitulo\"\n      />\n    </div>\n\n    <div class=\"listaNodos\">\n      <icono-nodo-conocimiento\n        v-for=\"nodo of nodosConocimiento\"\n        :key=\"nodo.id\"\n        :esteNodo=\"nodo\"\n        :seleccionado=\"idNodoSeleccionado === nodo.id\"\n        :datosEsteNodo=\"yo.atlas.datosNodos.find(dn=>dn.idNodo===nodo.id)\"\n        @click.self.stop=\"\n          idNodoSeleccionado = idNodoSeleccionado === nodo.id ? null : nodo.id\n        \"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport IconoNodoConocimiento from \"./IconoNodoConocimiento.vue\";\nimport Loading from \"../utilidades/Loading.vue\";\nimport { charProhibidosNombreCosa } from \"../configs\";\n\nconst QUERY_NODOS_COLECCION = gql`\n  query ($idsNodos: [ID!]!) {\n    nodosConocimientoByIds(idsNodos: $idsNodos) {\n      id\n      nombre\n      descripcion\n      tipoNodo\n    }\n  }\n`;\n\nexport default {\n  name: \"ColeccionNodosConocimiento\",\n  components: { IconoNodoConocimiento, Loading },\n  apollo: {\n    nodosConocimiento: {\n      query: QUERY_NODOS_COLECCION,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.estaColeccion?.idsNodos.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoColeccion: {\n      query: gql`\n        query ($idColeccion: ID!, $idUsuario: ID!) {\n          coleccionNodosConocimiento(\n            idColeccion: $idColeccion\n            idUsuario: $idUsuario\n          ) {\n            id\n            progreso\n          }\n        }\n      `,\n      variables() {\n        return {\n          idColeccion: this.estaColeccion.id,\n          idUsuario: this.yo.id,\n        };\n      },\n      skip() {\n        return !this.yo?.id || !this.estaColeccion?.id;\n      },\n      update({ coleccionNodosConocimiento }) {\n        return coleccionNodosConocimiento.progreso;\n      },\n    },\n  },\n  props: {\n    estaColeccion: Object,\n    yo: Object,\n  },\n  data() {\n    return {\n      idNodoSeleccionado: null,\n      nodosConocimiento: [],\n      progresoColeccion: null,\n\n      editandoTitulo: false,\n      guardandoNuevoTitulo: false,\n\n\n    };\n  },\n  methods: {\n    iniciarEdicionTitulo() {\n      this.$refs.inputNuevoTitulo.value = this.estaColeccion.titulo;\n      this.editandoTitulo = true;\n    },\n    guardarNuevoTitulo() {\n      var nuevoNombre = this.$refs.inputNuevoTitulo.value;\n      console.log(\n        `seting nombre de coleccion con value: ${nuevoNombre}`\n      );\n      if (charProhibidosNombreCosa.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.guardandoNuevoTitulo = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion: this.estaColeccion.id,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.guardandoNuevoTitulo = false;\n          this.editandoTitulo = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.guardandoNuevoTitulo = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.listaNodos {\n  display: flex;\n  padding: 20px 20px;\n  padding-bottom: 90px;\n  gap: 60px;\n  flex-wrap: wrap;\n}\n\n#barraProgreso {\n  background-color: gray;\n  height: 12px;\n  width: 100%;\n}\n#barraProgresoVerde {\n  background-color: green;\n  height: 100%;\n}\n\n#numeroProgreso {\n  width: 100%;\n  text-align: center;\n}\n\n#barraSuperior {\n  display: flex;\n  justify-content: center;\n}\n</style>"]}]}