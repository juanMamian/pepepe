{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/VentanitaTrabajo.vue?vue&type=template&id=66de8f1d&scoped=true&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/proyecto/VentanitaTrabajo.vue","mtime":1643654906679},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidmVudGFuaXRhVHJhYmFqbyIgfSwgWwogICAgX2MoImltZyIsIHsKICAgICAgY2xhc3M6IHsKICAgICAgICBpY29ub0NvbXBsZXRhZG86IF92bS5lc3RlVHJhYmFqby5lc3RhZG9EZXNhcnJvbGxvID09PSAiY29tcGxldGFkbyIsCiAgICAgICAgZGVzaGFiaWxpdGFkbzogX3ZtLnRvZ2dsaW5nRXN0YWRvCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pY29ub3MvaWNvbm9UcmFiYWpvLnBuZyIpLAogICAgICAgIGFsdDogIiIsCiAgICAgICAgaWQ6ICJpbWFnZW5JY29ubyIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICBfdm0udXN1YXJpb1Jlc3BvbnNhYmxlUHJveWVjdG8gPyBfdm0udG9nZ2xlRXN0YWRvVHJhYmFqbygpIDogbnVsbAogICAgICAgIH0KICAgICAgfQogICAgfSksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsgY2xhc3M6IHsgYm9yZGVBYmFqbzogX3ZtLnNlbGVjY2lvbmFkbyB9LCBhdHRyczogeyBpZDogInpvbmFOb21icmUiIH0gfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAibm9tYnJlIiB9IH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgdmFsdWU6ICFfdm0uZWRpdGFuZG9Ob21icmUsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIhZWRpdGFuZG9Ob21icmUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyBpZDogImVsUHJvcGlvTm9tYnJlIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5lc3RlVHJhYmFqby5ub21icmUpICsgIiAiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5udWV2b05vbWJyZSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJudWV2b05vbWJyZSIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5lZGl0YW5kb05vbWJyZSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJlZGl0YW5kb05vbWJyZSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaW5wdXROdWV2b05vbWJyZSIsCiAgICAgICAgICAgIGNsYXNzOiB7IGxldHJhc1JvamFzOiBfdm0ubnVldm9Ob21icmVJbGVnYWwgfSwKICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubnVldm9Ob21icmUgfSwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBrZXlwcmVzczogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICEkZXZlbnQudHlwZS5pbmRleE9mKCJrZXkiKSAmJgogICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsICJlbnRlciIsIDEzLCAkZXZlbnQua2V5LCAiRW50ZXIiKQogICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmd1YXJkYXJOdWV2b05vbWJyZSgkZXZlbnQpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfdm0ubnVldm9Ob21icmUgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF92bS51c3VhcmlvUmVzcG9uc2FibGVQcm95ZWN0bwogICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udHJvbGVzTGF0ZXJhbGVzWm9uYSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJiRWRpdGFyIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ljb25vcy9lZGl0YXIucG5nIiksCiAgICAgICAgICAgICAgICAgICAgYWx0OiAiRWRpdGFyIiwKICAgICAgICAgICAgICAgICAgICBpZDogImJFZGl0YXJyTm9tYnJlIiwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogIkVkaXRhciBub21icmUgZGVsIHRyYWJham8iCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRvZ2dsZUVkaXRhbmRvTm9tYnJlKCRldmVudCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5lZGl0YW5kb05vbWJyZSA9PSB0cnVlICYmCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5udWV2b05vbWJyZUlsZWdhbCA9PSBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246CiAgICAgICAgICAgICAgICAgICAgICAgICJlZGl0YW5kb05vbWJyZSA9PSB0cnVlICYmIG51ZXZvTm9tYnJlSWxlZ2FsID09IGZhbHNlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJiR3VhcmRhciIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pY29ub3MvZ3VhcmRhci5wbmciKSwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJHdWFyZGFyIiwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogImd1YXJkYXIiLAogICAgICAgICAgICAgICAgICAgIGlkOiAiYkd1YXJkYXJOdWV2b05vbWJyZSIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ3VhcmRhck51ZXZvTm9tYnJlKCRldmVudCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgIF0pLAogICAgICAgIF9jKCJsb2FkaW5nIiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZW52aWFuZG9OdWV2b05vbWJyZSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZW52aWFuZG9OdWV2b05vbWJyZSIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7IHRleHRvOiAiRW52aWFuZG8uLi4iIH0KICAgICAgICB9KQogICAgICBdLAogICAgICAxCiAgICApLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAiem9uYVByaW1lck5pdmVsIiwgYXR0cnM6IHsgaWQ6ICJ6b25hRGVzY3JpcGNpb24iIH0gfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYmFycmFTdXBlcmlvclpvbmEiIH0sIFsKICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm5vbWJyZVpvbmEiIH0sIFtfdm0uX3YoIkRlc2NyaXBjaW9uIildKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS51c3VhcmlvUmVzcG9uc2FibGVQcm95ZWN0bywKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInVzdWFyaW9SZXNwb25zYWJsZVByb3llY3RvIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250cm9sZXNab25hIgogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnVzdWFyaW9SZXNwb25zYWJsZVByb3llY3RvLAogICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ1c3VhcmlvUmVzcG9uc2FibGVQcm95ZWN0byIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYkVkaXRhciIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ljb25vcy9lZGl0YXIucG5nIiksCiAgICAgICAgICAgICAgICAgIGFsdDogIkVkaXRhciIsCiAgICAgICAgICAgICAgICAgIGlkOiAiYkVkaXRhckRlc2NyaXBjaW9uIiwKICAgICAgICAgICAgICAgICAgdGl0bGU6ICJFZGl0YXIgZGVzY3JpcGNpb24gZGVsIHRyYWJham8iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udG9nZ2xlRWRpdGFuZG9EZXNjcmlwY2lvbigkZXZlbnQpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOgogICAgICAgICAgICAgICAgICAgICAgX3ZtLmVkaXRhbmRvRGVzY3JpcGNpb24gPT0gdHJ1ZSAmJgogICAgICAgICAgICAgICAgICAgICAgX3ZtLm51ZXZvRGVzY3JpcGNpb25JbGVnYWwgPT0gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjoKICAgICAgICAgICAgICAgICAgICAgICJcbiAgICAgICAgICAgIGVkaXRhbmRvRGVzY3JpcGNpb24gPT0gdHJ1ZSAmJiBudWV2b0Rlc2NyaXBjaW9uSWxlZ2FsID09IGZhbHNlXG4gICAgICAgICAgIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJiR3VhcmRhciIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ljb25vcy9ndWFyZGFyLnBuZyIpLAogICAgICAgICAgICAgICAgICBhbHQ6ICJHdWFyZGFyIiwKICAgICAgICAgICAgICAgICAgdGl0bGU6ICJndWFyZGFyIiwKICAgICAgICAgICAgICAgICAgaWQ6ICJiR3VhcmRhck51ZXZvRGVzY3JpcGNpb24iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ3VhcmRhck51ZXZvRGVzY3JpcGNpb24oJGV2ZW50KQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgIHZhbHVlOiAhX3ZtLmVkaXRhbmRvRGVzY3JpcGNpb24sCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWVkaXRhbmRvRGVzY3JpcGNpb24iCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICByZWY6ICJkZXNjcmlwY2lvbiIsCiAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiZGVzY3JpcGNpb24iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZXN0ZVRyYWJham8uZGVzY3JpcGNpb24pICsgIiAiKV0KICAgICAgICApLAogICAgICAgIF9jKCJ0ZXh0YXJlYSIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0ubnVldm9EZXNjcmlwY2lvbiwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAibnVldm9EZXNjcmlwY2lvbiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmVkaXRhbmRvRGVzY3JpcGNpb24sCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImVkaXRhbmRvRGVzY3JpcGNpb24iCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICByZWY6ICJpbnB1dE51ZXZvRGVzY3JpcGNpb24iLAogICAgICAgICAgY2xhc3M6IHsgbGV0cmFzUm9qYXM6IF92bS5udWV2b0Rlc2NyaXBjaW9uSWxlZ2FsIH0sCiAgICAgICAgICBhdHRyczogeyBpZDogImlucHV0TnVldm9EZXNjcmlwY2lvbiIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubnVldm9EZXNjcmlwY2lvbiB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5udWV2b0Rlc2NyaXBjaW9uID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxvYWRpbmciLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5lbnZpYW5kb051ZXZvRGVzY3JpcGNpb24sCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImVudmlhbmRvTnVldm9EZXNjcmlwY2lvbiIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7IHRleHRvOiAiRW52aWFuZG8uLi4iIH0KICAgICAgICB9KQogICAgICBdLAogICAgICAxCiAgICApLAogICAgZmFsc2UKICAgICAgPyBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogInpvbmFQcmltZXJOaXZlbCIsIGF0dHJzOiB7IGlkOiAiem9uYVJlc3BvbnNhYmxlcyIgfSB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm5vbWJyZVpvbmEiIH0sIFtfdm0uX3YoIlJlc3BvbnNhYmxlcyIpXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udHJvbGVzWm9uYSIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImNvbnRyb2xlc1Jlc3BvbnNhYmxlcyIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX3ZtLnVzdWFyaW9Mb2dlYWRvID09IHRydWUgJiYKICAgICAgICAgICAgICAgIF92bS51c3VhcmlvUmVzcG9uc2FibGVUcmFiYWpvID09IGZhbHNlCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbnRyb2xlc1Jlc3BvbnNhYmxlcyBob3ZlckdyaXMgYm90b25lc0NvbnRyb2xlcyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiYm90b25QYXJ0aWNpcGFyIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmFzdW1pckNvbW9SZXNwb25zYWJsZSB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIFBhcnRpY2lwYXIgIildCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgX3ZtLnVzdWFyaW9SZXNwb25zYWJsZVRyYWJham8gPT0gdHJ1ZQogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgICAgICJjb250cm9sZXNSZXNwb25zYWJsZXMgaG92ZXJHcmlzIGJvdG9uZXNDb250cm9sZXMiLAogICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmFiYW5kb25hckxpc3RhUmVzcG9uc2FibGVzIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQWJhbmRvbmFyICIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogImxpc3RhUmVzcG9uc2FibGVzIiB9IH0sCiAgICAgICAgICAgICAgX3ZtLl9sKF92bS5lc3RlVHJhYmFqby5yZXNwb25zYWJsZXMsIGZ1bmN0aW9uKGlkUGVyc29uYSkgewogICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJpY29uby1wZXJzb25hLWF1dG9ub21vIiwgewogICAgICAgICAgICAgICAgICBrZXk6IGlkUGVyc29uYSwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWRQZXJzb25hOiBpZFBlcnNvbmEsIGFjZXB0YWRvOiB0cnVlIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdCiAgICAgICAgKQogICAgICA6IF92bS5fZSgpLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7CiAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgeyBuYW1lOiAic2hvdyIsIHJhd05hbWU6ICJ2LXNob3ciLCB2YWx1ZTogZmFsc2UsIGV4cHJlc3Npb246ICJmYWxzZSIgfQogICAgICAgIF0sCiAgICAgICAgc3RhdGljQ2xhc3M6ICJ6b25hUHJpbWVyTml2ZWwiLAogICAgICAgIGF0dHJzOiB7IGlkOiAiem9uYU5vZG9zQ29ub2NpbWllbnRvIiB9CiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm5vbWJyZVpvbmEiIH0sIFsKICAgICAgICAgIF92bS5fdigiTm9kb3MgZGUgY29ub2NpbWllbnRvIGludm9sdWNyYWRvcyIpCiAgICAgICAgXSksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250cm9sZXNab25hIiwKICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJjb250cm9sZXNOb2Rvc0Nvbm9jaW1pZW50byIgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLnVzdWFyaW9SZXNwb25zYWJsZVByb3llY3RvID09IHRydWUKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgImNvbnRyb2xlc05vZG9zQ29ub2NpbWllbnRvIGhvdmVyR3JpcyBib3RvbmVzQ29udHJvbGVzIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQcOxYWRpciAiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICBfdm0udXN1YXJpb1Jlc3BvbnNhYmxlUHJveWVjdG8gPT0gdHJ1ZSAmJgogICAgICAgICAgICBfdm0uaWROb2RvU2VsZWNjaW9uYWRvICE9IG51bGwgJiYKICAgICAgICAgICAgX3ZtLmVzdGVUcmFiYWpvLm5vZG9zQ29ub2NpbWllbnRvLnNvbWUoZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBuLmlkID09IF92bS5pZE5vZG9TZWxlY2Npb25hZG8KICAgICAgICAgICAgfSkKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgImNvbnRyb2xlc05vZG9zQ29ub2NpbWllbnRvIGhvdmVyR3JpcyBib3RvbmVzQ29udHJvbGVzIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgUmVtb3ZlciAiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgewogICAgICAgICAgICBhdHRyczogeyBpZDogImxpc3RhTm9kb3NDb25vY2ltaWVudG8iIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQgIT09ICRldmVudC5jdXJyZW50VGFyZ2V0KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfdm0uaWROb2RvU2VsZWNjaW9uYWRvID0gbnVsbAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLl9sKF92bS5lc3RlVHJhYmFqby5ub2Rvc0Nvbm9jaW1pZW50bywgZnVuY3Rpb24obm9kbykgewogICAgICAgICAgICAgIHJldHVybiBfYygiaWNvbm8tbm9kby1jb25vY2ltaWVudG8iLCB7CiAgICAgICAgICAgICAgICBrZXk6IG5vZG8uaWQsCiAgICAgICAgICAgICAgICBhdHRyczogeyBlc3RlTm9kbzogbm9kbyB9LAogICAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIF92bS5pZE5vZG9TZWxlY2Npb25hZG8gPSBub2RvLmlkCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImJ1c2NhZG9yLW5vZG9zLWNvbm9jaW1pZW50byIpCiAgICAgICAgICBdLAogICAgICAgICAgMgogICAgICAgICkKICAgICAgXQogICAgKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}