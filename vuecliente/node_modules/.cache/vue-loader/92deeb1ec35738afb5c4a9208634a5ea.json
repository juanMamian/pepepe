{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/EnlacesNodoConocimiento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/EnlacesNodoConocimiento.vue","mtime":1675431779461},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRW5sYWNlc05vZG9Db25vY2ltaWVudG8iLAogIHByb3BzOiB7CiAgICB5bzogT2JqZWN0LAogICAgaWROb2RvU2VsZWNjaW9uYWRvOiBTdHJpbmcsCiAgICBpZHNOb2Rvc1ByZXZpb3NTZWxlY2Npb25hZG86IEFycmF5LAogICAgaWRzTm9kb3NDb250aW51YWNpb25TZWxlY2Npb25hZG86IEFycmF5LAogICAgY29uZWN0YWRvU2VsZWNjaW9uYWRvOiBCb29sZWFuLAogICAgZXN0ZU5vZG86IE9iamVjdCwKICAgIHRvZG9zTm9kb3M6IEFycmF5LAogICAgZmFjdG9yWm9vbTogTnVtYmVyLAogICAgY2FsbGluZ1Bvc2ljaW9uZXM6IEJvb2xlYW4sCiAgICBub2RvU2VsZWNjaW9uYWRvOiBPYmplY3QsCiAgICBjaGlsZFNlbGVjY2lvbmFkbzogQm9vbGVhbiwKICAgIGlkc1RvZG9zTm9kb3NSZW5kZXI6IEFycmF5LAogICAgZXNxdWluYXNEaWFncmFtYTogT2JqZWN0LAogICAgdHJhbnNpY2lvbmFyUG9zaWNpb25Ob2RvczogQm9vbGVhbiwKICAgIGlkc05vZG9zUHJlc2VudGVzQ2FiZXphOiBBcnJheSwKICAgIHJlZGlidWphckVubGFjZXM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlc3F1aW5hc1NlbGVjY2lvbmFkbzogewogICAgICAgIHgxOiAwLAogICAgICAgIHgyOiAwLAogICAgICAgIHkxOiAwLAogICAgICAgIHkyOiAwLAogICAgICB9LAogICAgICBwb3NpY2lvblNlbGVjY2lvbmFkbzogewogICAgICAgIHg6IDAsCiAgICAgICAgeTogMCwKICAgICAgfSwKICAgICAgZmFjdG9yRnVlcnphOiAxNSwKCiAgICAgIHZpbmN1bG9zR3Jpc2VzOiBbXSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXRWaW5jdWxvc0dyaXNlcygpIHsKICAgICAgY29uc29sZS5sb2coIkNhbGN1bGFuZG8gZmxlY2hhcyBkZSB2w61uY3Vsb3MiKTsKICAgICAgdmFyIHZHcmlzZXMgPSBKU09OLnBhcnNlKAogICAgICAgIEpTT04uc3RyaW5naWZ5KAogICAgICAgICAgdGhpcy5lc3RlTm9kby52aW5jdWxvcy5maWx0ZXIoCiAgICAgICAgICAgICh2KSA9PgogICAgICAgICAgICAgIHYucm9sID09PSAidGFyZ2V0IiAmJiB0aGlzLmlkc1RvZG9zTm9kb3NSZW5kZXIuaW5jbHVkZXModi5pZFJlZikKICAgICAgICAgICkKICAgICAgICApCiAgICAgICk7CgogICAgICB2R3Jpc2VzLmZvckVhY2goKHYpID0+IHsKICAgICAgICBjb25zdCBjb29yZHNGcm9tID0gdGhpcy50b2Rvc05vZG9zLmZpbmQoKG4pID0+IG4uaWQgPT09IHYuaWRSZWYpLmNvb3JkczsKICAgICAgICBjb25zdCBwYXJhbGVsYXMgPSB7CiAgICAgICAgICB4OiBjb29yZHNGcm9tLnggLSB0aGlzLnBvc05vZG8ueCwKICAgICAgICAgIHk6IGNvb3Jkc0Zyb20ueSAtIHRoaXMucG9zTm9kby55LAogICAgICAgIH07CiAgICAgICAgY29uc3QgYW5ndWxvID0gTWF0aC5QSSArIE1hdGguYXRhbjIocGFyYWxlbGFzLnksIHBhcmFsZWxhcy54KTsKICAgICAgICBjb25zdCBtb2R1bG8gPSBNYXRoLmh5cG90KHBhcmFsZWxhcy54LCBwYXJhbGVsYXMueSk7CgogICAgICAgIGNvbnN0IGVzRW5sYWNlU3VwZXJhZG8gPQogICAgICAgICAgKHYucm9sID09PSAidGFyZ2V0IiAmJgogICAgICAgICAgICB0aGlzLmlkc05vZG9zUHJlc2VudGVzQ2FiZXphLmluY2x1ZGVzKHRoaXMuZXN0ZU5vZG8uaWQpKSB8fAogICAgICAgICAgKHYucm9sID09PSAic291cmNlIiAmJgogICAgICAgICAgICB0aGlzLmlkc05vZG9zUHJlc2VudGVzQ2FiZXphLmluY2x1ZGVzKHYuaWRSZWYpKTsKCiAgICAgICAgY29uc3QgZXNFbmxhY2VQb3JTdXBlcmFyID0KICAgICAgICAgICh2LnJvbCA9PT0gInNvdXJjZSIgJiYKICAgICAgICAgICAgIXRoaXMuaWRzTm9kb3NQcmVzZW50ZXNDYWJlemEuaW5jbHVkZXModGhpcy5lc3RlTm9kby5pZCkpIHx8CiAgICAgICAgICAodi5yb2wgPT09ICJ0YXJnZXQiICYmCiAgICAgICAgICAgIHRoaXMuaWRzTm9kb3NQcmVzZW50ZXNDYWJlemEuaW5jbHVkZXModi5pZFJlZikpOwoKICAgICAgICBjb25zdCBlc0VubGFjZUluYWNjZXNpYmxlID0gIWVzRW5sYWNlU3VwZXJhZG8gJiYgIWVzRW5sYWNlUG9yU3VwZXJhcjsKCiAgICAgICAgbGV0IGJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CgogICAgICAgIGlmIChlc0VubGFjZVBvclN1cGVyYXIpIHsKICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9ICJ2YXIoLS1hdGxhc0Nvbm9jaW1pZW50b0F2YWlsYWJsZSkiOwogICAgICAgIH0KICAgICAgICBpZiAoZXNFbmxhY2VJbmFjY2VzaWJsZSkgewogICAgICAgICAgYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKICAgICAgICB9CiAgICAgICAgaWYgKGVzRW5sYWNlU3VwZXJhZG8pIHsKICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9ICJ2YXIoLS1hdGxhc0Nvbm9jaW1pZW50b0NoZWNrKSI7CiAgICAgICAgfQoKICAgICAgICB2LmluYWNjZXNpYmxlID0gZXNFbmxhY2VJbmFjY2VzaWJsZTsKCiAgICAgICAgdi5lc3RpbG8gPSB7CiAgICAgICAgICB0cmFuc2Zvcm06ICJyb3RhdGUoIiArIGFuZ3VsbyArICJyYWQpIiwKICAgICAgICAgIHRvcDogTWF0aC5yb3VuZCgocGFyYWxlbGFzLnkgLSAxKSAqIHRoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgICAgbGVmdDogTWF0aC5yb3VuZChwYXJhbGVsYXMueCAqIHRoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgICAgd2lkdGg6IE1hdGgucm91bmQobW9kdWxvICogdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgICBib3JkZXJMZWZ0Q29sb3I6IGJhY2tncm91bmRDb2xvciwKICAgICAgICB9OwogICAgICB9KTsKCiAgICAgIHRoaXMudmluY3Vsb3NHcmlzZXMgPSB2R3Jpc2VzOwogICAgfSwKICB9LAoKICBjb21wdXRlZDogewogICAgY29udGludWFjaW9uRGVTZWxlY2Npb25hZG8oKSB7CiAgICAgIGlmICghdGhpcy5ub2RvU2VsZWNjaW9uYWRvKSByZXR1cm4gZmFsc2U7CiAgICAgIGlmICgKICAgICAgICB0aGlzLm5vZG9TZWxlY2Npb25hZG8udmluY3Vsb3Muc29tZSgodikgPT4gdi5pZFJlZiA9PT0gdGhpcy5lc3RlTm9kby5pZCkKICAgICAgKQogICAgICAgIHJldHVybiB0cnVlOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgZXN0aWxvUG9zaWNpb24oKSB7CiAgICAgIGNvbnN0IHBvc1hBanVzdGFkYSA9CiAgICAgICAgdGhpcy5lc3RlTm9kby5hdXRvQ29vcmRzLnggLSB0aGlzLmVzcXVpbmFzRGlhZ3JhbWEueDE7CiAgICAgIGNvbnN0IHBvc1lBanVzdGFkYSA9CiAgICAgICAgdGhpcy5lc3RlTm9kby5hdXRvQ29vcmRzLnkgLSB0aGlzLmVzcXVpbmFzRGlhZ3JhbWEueTE7CiAgICAgIHJldHVybiB7CiAgICAgICAgbGVmdDogcG9zWEFqdXN0YWRhICogdGhpcy5mYWN0b3Jab29tICsgInB4IiwKICAgICAgICB0b3A6IHBvc1lBanVzdGFkYSAqIHRoaXMuZmFjdG9yWm9vbSArICJweCIsCiAgICAgIH07CiAgICB9LAoKICAgIGVzdGlsb0Z1ZXJ6YUNvbGlzaW9uKCkgewogICAgICAvLyB2YXIgcGFyYWxlbGFzPXsKICAgICAgLy8gICB4OiB0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNvbGlzaW9uLmZ1ZXJ6YSpNYXRoLmNvcyh0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNvbGlzaW9uLmRpcmVjY2lvbiksCiAgICAgIC8vICAgeTogdGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5mdWVyemEqTWF0aC5zaW4odGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5kaXJlY2Npb24pLAogICAgICAvLyB9CiAgICAgIHJldHVybiB7CiAgICAgICAgdHJhbnNmb3JtOiAicm90YXRlKCIgKyB0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNvbGlzaW9uLmRpcmVjY2lvbiArICJyYWQpIiwKICAgICAgICAvLyB0b3A6IE1hdGgucm91bmQoKHBhcmFsZWxhcy55IC0gMSkgKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IiwKICAgICAgICAvLyBsZWZ0OiBNYXRoLnJvdW5kKHBhcmFsZWxhcy54ICogdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgdG9wOiAiMHB4IiwKICAgICAgICBsZWZ0OiAiMHB4IiwKICAgICAgICB3aWR0aDoKICAgICAgICAgIE1hdGguY2VpbCgKICAgICAgICAgICAgdGhpcy5lc3RlTm9kby5mdWVyemFDb2xpc2lvbi5mdWVyemEgKgogICAgICAgICAgICAgIHRoaXMuZmFjdG9yRnVlcnphICoKICAgICAgICAgICAgICB0aGlzLmZhY3Rvclpvb20KICAgICAgICAgICkgKyAicHgiLAogICAgICB9OwogICAgfSwKICAgIGVzdGlsb0Z1ZXJ6YUNlbnRyb01hc2EoKSB7CiAgICAgIC8vIHZhciBwYXJhbGVsYXM9ewogICAgICAvLyAgIHg6IHRoaXMuZXN0ZU5vZG8uZnVlcnphQ2VudHJvTWFzYS5mdWVyemEqTWF0aC5jb3ModGhpcy5lc3RlTm9kby5mdWVyemFDZW50cm9NYXNhLmRpcmVjY2lvbiksCiAgICAgIC8vICAgeTogdGhpcy5lc3RlTm9kby5mdWVyemFDZW50cm9NYXNhLmZ1ZXJ6YSpNYXRoLnNpbih0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNlbnRyb01hc2EuZGlyZWNjaW9uKSwKICAgICAgLy8gfQogICAgICByZXR1cm4gewogICAgICAgIHRyYW5zZm9ybToKICAgICAgICAgICJyb3RhdGUoIiArIHRoaXMuZXN0ZU5vZG8uZnVlcnphQ2VudHJvTWFzYS5kaXJlY2Npb24gKyAicmFkKSIsCiAgICAgICAgLy8gdG9wOiBNYXRoLnJvdW5kKChwYXJhbGVsYXMueSAtIDEpICogdGhpcy5mYWN0b3Jab29tKSArICJweCIsCiAgICAgICAgLy8gbGVmdDogTWF0aC5yb3VuZChwYXJhbGVsYXMueCAqIHRoaXMuZmFjdG9yWm9vbSkgKyAicHgiLAogICAgICAgIHRvcDogIjBweCIsCiAgICAgICAgbGVmdDogIjBweCIsCiAgICAgICAgd2lkdGg6CiAgICAgICAgICBNYXRoLnJvdW5kKAogICAgICAgICAgICB0aGlzLmVzdGVOb2RvLmZ1ZXJ6YUNlbnRyb01hc2EuZnVlcnphICoKICAgICAgICAgICAgICB0aGlzLmZhY3RvckZ1ZXJ6YSAqCiAgICAgICAgICAgICAgdGhpcy5mYWN0b3Jab29tCiAgICAgICAgICApICsgInB4IiwKICAgICAgfTsKICAgIH0sCgogICAgYWx0b1ZpbmN1bG9zKCkgewogICAgICByZXR1cm4gewogICAgICAgIGhlaWdodDogTWF0aC5jZWlsKDEgKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IiwKICAgICAgfTsKICAgIH0sCiAgICBzaXplRmxlY2hhKCkgewogICAgICByZXR1cm4gewogICAgICAgIGJvcmRlcldpZHRoOiBNYXRoLnJvdW5kKDcgKiB0aGlzLmZhY3Rvclpvb20pICsgInB4IiwKICAgICAgfTsKICAgIH0sCgogICAgcG9zTm9kbygpIHsKICAgICAgcmV0dXJuIHRoaXMuZXN0ZU5vZG8uY29vcmRzOwogICAgfSwKCiAgICBzZWxlY2Npb25hZG8oKSB7CiAgICAgIGlmICghdGhpcy5ub2RvU2VsZWNjaW9uYWRvKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLm5vZG9TZWxlY2Npb25hZG8uaWQgPT09IHRoaXMuZXN0ZU5vZG8uaWQ7CiAgICB9LAogICAgbm9kb1JlbmRlcigpIHsKICAgICAgaWYgKHRoaXMudXN1YXJpbyAmJiB0aGlzLmVzdGVOb2RvLmlkID09PSB0aGlzLnVzdWFyaW8uaWQpIHJldHVybiB0cnVlOwogICAgICByZXR1cm4gdGhpcy5pZHNUb2Rvc05vZG9zUmVuZGVyLmluY2x1ZGVzKHRoaXMuZXN0ZU5vZG8uaWQpOwogICAgfSwKCiAgICBlbkFtYml0b05vZG9TZWxlY2Npb25hZG8oKSB7CiAgICAgIHJldHVybiAoCiAgICAgICAgdGhpcy5pZE5vZG9TZWxlY2Npb25hZG8gJiYKICAgICAgICAodGhpcy5pZHNOb2Rvc1ByZXZpb3NTZWxlY2Npb25hZG8uaW5jbHVkZXModGhpcy5lc3RlTm9kby5pZCkgfHwKICAgICAgICAgIHRoaXMuaWRzTm9kb3NDb250aW51YWNpb25TZWxlY2Npb25hZG8uaW5jbHVkZXModGhpcy5lc3RlTm9kby5pZCkpCiAgICAgICk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["EnlacesNodoConocimiento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EnlacesNodoConocimiento.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div\n    class=\"enlacesNodoConocimiento\"\n    v-show=\"nodoRender\"\n    :style=\"[estiloPosicion]\"\n  >\n    <transition-group tag=\"div\">\n      <div\n        class=\"vinculo vinculoGris\"\n        v-for=\"vinculo of vinculosGrises\"\n        :key=\"vinculo.id\"\n        :style=\"[vinculo.estilo, altoVinculos]\"\n        :class=\"{\n          irrelevante:\n            idNodoSeleccionado &&\n            esteNodo.id != idNodoSeleccionado &&\n            (!enAmbitoNodoSeleccionado ||\n              (!idsNodosPreviosSeleccionado.includes(vinculo.idRef) &&\n                !idsNodosContinuacionSeleccionado.includes(vinculo.idRef) &&\n                vinculo.idRef != idNodoSeleccionado)),\n          inaccesible: vinculo.inaccesible,\n        }\"\n      >\n        <div class=\"flechaVinculo\" :style=\"[sizeFlecha]\"></div>\n      </div>\n    </transition-group>\n    <div\n      class=\"fuerza\"\n      v-show=\"callingPosiciones\"\n      :style=\"[estiloFuerzaColision, { opacity: nodoSeleccionado ? 1 : 0.3 }]\"\n      id=\"fuerzaColision\"\n    ></div>\n    <div\n      class=\"fuerza\"\n      v-show=\"callingPosiciones\"\n      :style=\"[estiloFuerzaCentroMasa, { opacity: nodoSeleccionado ? 1 : 0.3 }]\"\n      id=\"fuerzaCentroMasa\"\n    ></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"EnlacesNodoConocimiento\",\n  props: {\n    yo: Object,\n    idNodoSeleccionado: String,\n    idsNodosPreviosSeleccionado: Array,\n    idsNodosContinuacionSeleccionado: Array,\n    conectadoSeleccionado: Boolean,\n    esteNodo: Object,\n    todosNodos: Array,\n    factorZoom: Number,\n    callingPosiciones: Boolean,\n    nodoSeleccionado: Object,\n    childSeleccionado: Boolean,\n    idsTodosNodosRender: Array,\n    esquinasDiagrama: Object,\n    transicionarPosicionNodos: Boolean,\n    idsNodosPresentesCabeza: Array,\n    redibujarEnlaces: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      esquinasSeleccionado: {\n        x1: 0,\n        x2: 0,\n        y1: 0,\n        y2: 0,\n      },\n      posicionSeleccionado: {\n        x: 0,\n        y: 0,\n      },\n      factorFuerza: 15,\n\n      vinculosGrises: [],\n    };\n  },\n  methods: {\n    setVinculosGrises() {\n      console.log(\"Calculando flechas de vínculos\");\n      var vGrises = JSON.parse(\n        JSON.stringify(\n          this.esteNodo.vinculos.filter(\n            (v) =>\n              v.rol === \"target\" && this.idsTodosNodosRender.includes(v.idRef)\n          )\n        )\n      );\n\n      vGrises.forEach((v) => {\n        const coordsFrom = this.todosNodos.find((n) => n.id === v.idRef).coords;\n        const paralelas = {\n          x: coordsFrom.x - this.posNodo.x,\n          y: coordsFrom.y - this.posNodo.y,\n        };\n        const angulo = Math.PI + Math.atan2(paralelas.y, paralelas.x);\n        const modulo = Math.hypot(paralelas.x, paralelas.y);\n\n        const esEnlaceSuperado =\n          (v.rol === \"target\" &&\n            this.idsNodosPresentesCabeza.includes(this.esteNodo.id)) ||\n          (v.rol === \"source\" &&\n            this.idsNodosPresentesCabeza.includes(v.idRef));\n\n        const esEnlacePorSuperar =\n          (v.rol === \"source\" &&\n            !this.idsNodosPresentesCabeza.includes(this.esteNodo.id)) ||\n          (v.rol === \"target\" &&\n            this.idsNodosPresentesCabeza.includes(v.idRef));\n\n        const esEnlaceInaccesible = !esEnlaceSuperado && !esEnlacePorSuperar;\n\n        let backgroundColor = \"black\";\n\n        if (esEnlacePorSuperar) {\n          backgroundColor = \"var(--atlasConocimientoAvailable)\";\n        }\n        if (esEnlaceInaccesible) {\n          backgroundColor = \"black\";\n        }\n        if (esEnlaceSuperado) {\n          backgroundColor = \"var(--atlasConocimientoCheck)\";\n        }\n\n        v.inaccesible = esEnlaceInaccesible;\n\n        v.estilo = {\n          transform: \"rotate(\" + angulo + \"rad)\",\n          top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n          left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n          width: Math.round(modulo * this.factorZoom) + \"px\",\n          backgroundColor,\n          borderLeftColor: backgroundColor,\n        };\n      });\n\n      this.vinculosGrises = vGrises;\n    },\n  },\n\n  computed: {\n    continuacionDeSeleccionado() {\n      if (!this.nodoSeleccionado) return false;\n      if (\n        this.nodoSeleccionado.vinculos.some((v) => v.idRef === this.esteNodo.id)\n      )\n        return true;\n      return false;\n    },\n    estiloPosicion() {\n      const posXAjustada =\n        this.esteNodo.autoCoords.x - this.esquinasDiagrama.x1;\n      const posYAjustada =\n        this.esteNodo.autoCoords.y - this.esquinasDiagrama.y1;\n      return {\n        left: posXAjustada * this.factorZoom + \"px\",\n        top: posYAjustada * this.factorZoom + \"px\",\n      };\n    },\n\n    estiloFuerzaColision() {\n      // var paralelas={\n      //   x: this.esteNodo.fuerzaColision.fuerza*Math.cos(this.esteNodo.fuerzaColision.direccion),\n      //   y: this.esteNodo.fuerzaColision.fuerza*Math.sin(this.esteNodo.fuerzaColision.direccion),\n      // }\n      return {\n        transform: \"rotate(\" + this.esteNodo.fuerzaColision.direccion + \"rad)\",\n        // top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n        // left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n        top: \"0px\",\n        left: \"0px\",\n        width:\n          Math.ceil(\n            this.esteNodo.fuerzaColision.fuerza *\n              this.factorFuerza *\n              this.factorZoom\n          ) + \"px\",\n      };\n    },\n    estiloFuerzaCentroMasa() {\n      // var paralelas={\n      //   x: this.esteNodo.fuerzaCentroMasa.fuerza*Math.cos(this.esteNodo.fuerzaCentroMasa.direccion),\n      //   y: this.esteNodo.fuerzaCentroMasa.fuerza*Math.sin(this.esteNodo.fuerzaCentroMasa.direccion),\n      // }\n      return {\n        transform:\n          \"rotate(\" + this.esteNodo.fuerzaCentroMasa.direccion + \"rad)\",\n        // top: Math.round((paralelas.y - 1) * this.factorZoom) + \"px\",\n        // left: Math.round(paralelas.x * this.factorZoom) + \"px\",\n        top: \"0px\",\n        left: \"0px\",\n        width:\n          Math.round(\n            this.esteNodo.fuerzaCentroMasa.fuerza *\n              this.factorFuerza *\n              this.factorZoom\n          ) + \"px\",\n      };\n    },\n\n    altoVinculos() {\n      return {\n        height: Math.ceil(1 * this.factorZoom) + \"px\",\n      };\n    },\n    sizeFlecha() {\n      return {\n        borderWidth: Math.round(7 * this.factorZoom) + \"px\",\n      };\n    },\n\n    posNodo() {\n      return this.esteNodo.coords;\n    },\n\n    seleccionado() {\n      if (!this.nodoSeleccionado) {\n        return false;\n      }\n      return this.nodoSeleccionado.id === this.esteNodo.id;\n    },\n    nodoRender() {\n      if (this.usuario && this.esteNodo.id === this.usuario.id) return true;\n      return this.idsTodosNodosRender.includes(this.esteNodo.id);\n    },\n\n    enAmbitoNodoSeleccionado() {\n      return (\n        this.idNodoSeleccionado &&\n        (this.idsNodosPreviosSeleccionado.includes(this.esteNodo.id) ||\n          this.idsNodosContinuacionSeleccionado.includes(this.esteNodo.id))\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.enlacesNodoConocimiento {\n  position: relative;\n  width: 1px;\n  overflow: visible;\n}\n\n.enlaces {\n  position: absolute;\n  pointer-events: none;\n}\n.vinculo {\n  position: absolute;\n  transform-origin: 0% 0%;\n  /* transition: left 3s, top 3s; */\n}\n\n.vinculoGris.inaccesible {\n  opacity: 0.2;\n}\n\n.vinculoGris.irrelevante {\n  opacity: 0.02;\n}\n.fuerza {\n  position: absolute;\n  transform-origin: 0% 0%;\n  height: 3px;\n}\n#fuerzaColision {\n  background-color: red;\n}\n#fuerzaCentroMasa {\n  background-color: yellow;\n}\n.flechaVinculo {\n  width: 1px;\n  height: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-left-color: inherit;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.vinculoGris {\n  background-color: black;\n}\n.fade-enter-active {\n  animation: fade 0.5s;\n}\n.fade-leave-active {\n  animation: fade 0.5s reverse;\n}\n\n@keyframes fade {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n</style>"]}]}