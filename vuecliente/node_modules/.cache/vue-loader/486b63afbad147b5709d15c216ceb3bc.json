{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/calendario/DiaOrganizadorHorario.vue?vue&type=style&index=0&id=eaf196ca&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/calendario/DiaOrganizadorHorario.vue","mtime":1674568326919},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kaWFPcmdhbml6YWRvckhvcmFyaW8gewogIHdpZHRoOiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtaW4taGVpZ2h0OiAxMDBweDsKICBtYXJnaW46IDMwcHggMHB4Owp9CiNub21icmVEaWEgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDEwMCU7CiAgZm9udC1zaXplOiAxOHB4OwogIGJhY2tncm91bmQtY29sb3I6IGdyYXk7CiAgY29sb3I6IHdoaXRlOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDVweCAxMHB4Owp9CiN6b25hQmxvcXVlcyB7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTgsIDIxOCwgMjE4KTsKICBtaW4taGVpZ2h0OiAxMDBweDsKICB6LWluZGV4OiAxOwp9CiNiYXJyYUhvcmFzIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxMDAlOwogIHotaW5kZXg6IDA7Cn0KCi5tYXJjYVRpZW1wbyB7CiAgcG9zaXRpb246IGFic29sdXRlOwp9Cg=="},{"version":3,"sources":["DiaOrganizadorHorario.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"DiaOrganizadorHorario.vue","sourceRoot":"src/components/calendario","sourcesContent":["<template>\n  <div class=\"diaOrganizadorHorario\" >\n    <div id=\"nombreDia\">\n      {{ nombreDia }}\n    </div>\n\n    \n\n    <div\n      id=\"zonaBloques\"\n      ref=\"zonaBloques\"\n      :style=\"[\n        {\n          width: Math.round(anchoDiaMinutos * factorZoom) + 'px',\n          height: maxFila * (heightBloques + 6 * gapFilas) + 'px',\n        },\n      ]\"\n      @dblclick.self=\"iniciarCreacionBloqueHorario\"\n      @click.self=\"bloqueCreacionHorario=null\"\n    >\n    <bloque-creacion-horario\n    v-if=\"bloqueCreacionHorario\"\n    style=\"z-index: 100000\"\n      :style=\"[\n        {\n          left: (bloqueCreacionHorario.millisInicio / 60000 - offset) * factorZoom + 'px',\n          top:\n            ((1 * gapFilas) - 5) +\n            'px',          \n        },\n      ]\"\n      :esteBloque=\"bloqueCreacionHorario\"\n      @espacioSeleccionado=\"crearBloqueHorario\"\n    />\n      <bloque-horario\n        v-for=\"bloque of bloquesHorarioEnriquecidos\"\n        :key=\"bloque.id\"\n        :esteBloque=\"bloque\"\n        :factorZoom=\"factorZoom\"\n        :style=\"[\n          {\n            left: (bloque.millisInicio / 60000 - offset) * factorZoom + 'px',\n            top:\n              1 * gapFilas +\n              (bloque.fila - 1) * (heightBloques + gapFilas) +\n              'px',\n            zIndex:\n              bloque.id === idBloqueMenuContextual\n                ? 10000\n                : bloque.id === idBloqueSeleccionado\n                ? 1000\n                : 100 - bloque.fila,\n          },\n        ]\"\n        :idBloqueMenuContextual=\"idBloqueMenuContextual\"\n        :idBloqueSeleccionado=\"idBloqueSeleccionado\"\n        :mostrarCantidadAsistentes=\"mostrarCantidadAsistentes\"\n        @meElimine=\"$emit('bloqueEliminado', bloque.id)\"\n        @menuContextual=\"$emit('menuContextualBloque', $event)\"\n        @seleccionado=\"$emit('bloqueSeleccionado', bloque.id)\"\n        @expandirme=\"$emit('expandirBloque', bloque.id)\"\n      />\n    </div>\n    <div id=\"barraHoras\">\n      <div\n        class=\"marcaTiempo\"\n        v-for=\"minutos of minutosRelevantes\"\n        :key=\"'minuto' + minutos\"\n        :style=\"[{ left: Math.round((minutos - offset) * factorZoom) + 'px' }]\"\n      >\n        {{ toTiempoFormateado(minutos) }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport const fragmentoBloqueHorario = gql`\n  fragment fragBloqueHorario on IteracionSemanalEspacio {\n    id\n    millisInicio\n    millisFinal\n    idsParticipantesConstantes\n    diaSemana\n    nombreEspacio\n    idAdministradorEspacio\n    idEspacio\n    paraChiquis\n  }\n`;\n\nimport gql from \"graphql-tag\";\nimport BloqueHorario from \"./BloqueHorario.vue\";\nimport BloqueCreacionHorario from \"./BloqueCreacionHorario.vue\";\nexport default {\n  components: { BloqueHorario, BloqueCreacionHorario },\n  name: \"DiaOrganizadorHorario\",\n  props: {\n    mostrarCantidadAsistentes:Boolean,\n    nombreDia: String,\n    numeroDia: Number,\n    idEspacioCrear: String,\n    idBloqueSeleccionado: String,\n    bloquesHorario: Array,\n    idBloqueMenuContextual: String,\n    factorZoom: {\n      type: Number,\n      default() {\n        return 1;\n      },\n    },\n    offset: Number,\n  },\n\n  data() {\n    return {\n      minutosRelevantesBase: [480, 540, 600, 630, 750, 810, 870, 930],\n      creandoBloqueHorario: false,\n      anchoDiaMinutos: 490,\n\n      heightBloques: 100,\n      gapFilas: 10,\n\n      bloqueCreacionHorario: null,\n    };\n  },\n  computed: {\n    minutosRelevantes() {\n      return this.minutosRelevantesBase;\n    },\n    bloquesHorarioPriorizados() {\n      var listaFinal = [...this.bloquesHorario].sort((a, b) => {\n        var res = 0;\n\n        if (a.idAdministradorEspacio === this.usuario.id) {\n          res++;\n        }\n\n        if (b.idAdministradorEspacio === this.usuario.id) {\n          res--;\n        }\n\n        return -res;\n      });\n\n      return listaFinal;\n    },\n    bloquesHorarioEnriquecidos() {\n      var listaFinal = [\n        ...this.bloquesHorarioPriorizados.map((bloque) => {\n          return {\n            ...bloque,\n            fila: 0,\n          };\n        }),\n      ];\n      for (var i = 0; i < listaFinal.length; i++) {\n        //Check anteriores para saber si hay choque\n        let esteBloque = listaFinal[i];\n        for (var j = i; j >= 0; j--) {\n          let bloqueAnterior = listaFinal[j];\n          let colision =\n            (bloqueAnterior.millisInicio >= esteBloque.millisInicio &&\n              bloqueAnterior.millisInicio < esteBloque.millisFinal) ||\n            (bloqueAnterior.millisFinal > esteBloque.millisInicio &&\n              bloqueAnterior.millisFinal <= esteBloque.millisFinal) ||\n            (bloqueAnterior.millisInicio <= esteBloque.millisInicio &&\n              bloqueAnterior.millisFinal >= esteBloque.millisFinal);\n          if (colision && bloqueAnterior.fila >= esteBloque.fila) {\n            let nuevaFila = bloqueAnterior.fila + 1;\n            esteBloque.fila = nuevaFila;\n          }\n        }\n      }\n\n      return listaFinal;\n    },\n\n    maxFila() {\n      var maxFila = this.bloquesHorarioEnriquecidos.reduce((acc, bloque) => {\n        if (bloque.fila > acc) {\n          return bloque.fila;\n        }\n\n        return acc;\n      }, 0);\n\n      return maxFila;\n    },\n  },\n  methods: {\n    toTiempoFormateado(minutos) {\n      var horas = Math.floor(minutos / 60);\n      if (String(horas).length < 2) {\n        horas = \"0\" + horas;\n      }\n\n      var minutosSolos = String(Math.round(minutos - horas * 60));\n\n      if (minutosSolos.length < 2) {\n        minutosSolos = \"0\" + minutosSolos;\n      }\n\n      return horas + \":\" + minutosSolos;\n    },\n\n    mostrarCalculoMinutos() {},\n\n    iniciarCreacionBloqueHorario(e) {\n      const posDia = this.$refs.zonaBloques.getBoundingClientRect();\n      const xMouse = e.clientX;\n\n      const xRes = xMouse - posDia.left;\n\n      const minutosInicio =\n        (this.anchoDiaMinutos / posDia.width) * xRes + this.offset;\n\n      console.log(\n        \"Creando bloque de horario en \" + this.toTiempoFormateado(minutosInicio)\n      );\n\n      var minutosInicioCorregido = minutosInicio;\n      var minutosFinalCorregido = minutosInicioCorregido + 60;\n\n      if (minutosInicio >= 480 && minutosInicio < 540) {\n        //Estamos en el primer bloque\n        minutosInicioCorregido = 480;\n        minutosFinalCorregido = 540;\n      } else if (minutosInicio >= 540 && minutosInicio < 600) {\n        //Segundo bloque pero antes de refrigerio.\n        minutosInicioCorregido = 540;\n        minutosFinalCorregido = 600;\n      } else if (minutosInicio >= 630 && minutosInicio < 750) {\n        //Bloque intermedio.\n        minutosInicioCorregido = 630;\n        minutosFinalCorregido = 750;\n      } else if (minutosInicio >= 810 && minutosInicio < 870) {\n        //Segundo bloque pero antes de refrigerio.\n        minutosInicioCorregido = 810;\n        minutosFinalCorregido = 870;\n      } else if (minutosInicio >= 870 && minutosInicio < 930) {\n        //Segundo bloque pero antes de refrigerio.\n        minutosInicioCorregido = 870;\n        minutosFinalCorregido = 930;\n      } else {\n        console.log(\"En zona no considerada\");\n        return;\n      }\n\n      console.log(\n        `Corregido a ${this.toTiempoFormateado(minutosInicioCorregido)}`\n      );\n\n      var millisInicio = minutosInicioCorregido * 60000;\n      var millisFinal = minutosFinalCorregido * 60000;\n\n      this.bloqueCreacionHorario = {\n        millisInicio,\n        millisFinal,\n      };\n    },\n\n    crearBloqueHorario(idEspacioCrear) {\n      if (!this.idEspacioCrear || !this.bloqueCreacionHorario) {\n        return;\n      }\n\n      this.creandoBloqueHorario = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation (\n              $idEspacio: ID!\n              $millisInicio: Int!\n              $diaSemana: Int!\n              $millisFinal: Int!\n            ) {\n              crearBloqueHorario(\n                idEspacio: $idEspacio\n                millisInicio: $millisInicio\n                diaSemana: $diaSemana\n                millisFinal: $millisFinal\n              ) {\n                ...fragBloqueHorario\n              }\n            }\n            ${fragmentoBloqueHorario}\n          `,\n          variables: {\n            idEspacio: idEspacioCrear,\n            millisInicio: this.bloqueCreacionHorario.millisInicio,\n            millisFinal: this.bloqueCreacionHorario.millisFinal,\n            diaSemana: this.numeroDia,\n          },\n        })\n        .then(({ data: { crearBloqueHorario } }) => {\n          this.creandoBloqueHorario = false;\n          this.$emit(\"bloqueHorarioCreado\", crearBloqueHorario);\n          this.bloqueCreacionHorario=null;\n        })\n        .catch((error) => {\n          console.log(\"Error: \" + error);\n          this.creandoBloqueHorario = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.diaOrganizadorHorario {\n  width: 100%;\n  position: relative;\n  min-height: 100px;\n  margin: 30px 0px;\n}\n#nombreDia {\n  position: absolute;\n  bottom: 100%;\n  font-size: 18px;\n  background-color: gray;\n  color: white;\n  width: 100%;\n  padding: 5px 10px;\n}\n#zonaBloques {\n  height: 100%;\n  background-color: rgb(218, 218, 218);\n  min-height: 100px;\n  z-index: 1;\n}\n#barraHoras {\n  position: absolute;\n  top: 100%;\n  z-index: 0;\n}\n\n.marcaTiempo {\n  position: absolute;\n}\n</style>"]}]}