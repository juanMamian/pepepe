{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/NodoConocimiento.vue?vue&type=style&index=0&id=78105349&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/NodoConocimiento.vue","mtime":1643654906499},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaWNvbm9Ob2RvIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwcHg7CiAgbGVmdDogMHB4OwogIHBvaW50ZXItZXZlbnRzOiBub25lOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICB6LWluZGV4OiAxOwogIHBvaW50ZXItZXZlbnRzOiBub25lOwogIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDJweCBncmV5OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoubm9kb0Nvbm9jaW1pZW50byB7CiAgd2lkdGg6IDYwcHg7CiAgaGVpZ2h0OiA2MHB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHBvaW50ZXItZXZlbnRzOiBhbGw7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjM0OSk7Cn0KI3pvbmFBcnJhc3RyZSB7CiAgd2lkdGg6IDUwMHB4OwogIGhlaWdodDogNTAwcHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9Ci5zZWxlY2Npb25hZG8gewogIHotaW5kZXg6IDEwOwp9Ci5mYW50YXNtZWFkbyB7CiAgb3BhY2l0eTogMC4yOwp9Ci5mYW50YXNtZWFkby5pbWdTZWxlY2Npb25hZG8gewogIG9wYWNpdHk6IDAuNTsKfQouZXNjb25kaWRvIHsKICB2aXNpYmlsaXR5OiBoaWRkZW47Cn0KI25vbWJyZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMTA1JTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGVmdDogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsKICBib3JkZXItd2lkdGg6IDFweDsKICBib3JkZXItc3R5bGU6IHNvbGlkOwp9Cgoubm9tYnJlTm9kb091dHJlYWNoIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTI3LCAxOTAsIDE5Mik7CiAgYm9yZGVyLWNvbG9yOiByZ2IoNTMsIDExMCwgMTEyKTsKICBvcGFjaXR5OiAwLjQ7Cn0KLm5vbWJyZU5vZG9PdXRyZWFjaDpob3ZlciB7CiAgb3BhY2l0eTogMC42Owp9Ci5ub21icmVOb2RvT3V0cmVhY2guZGVOb2RvU2VsZWNjaW9uYWRvIHsKICBvcGFjaXR5OiAwLjg7Cn0KCi5ub21icmVOb2RvQXByZW5kaWJsZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMSwgMjM2LCA5MSk7CiAgYm9yZGVyLWNvbG9yOiByZ2IoMTg5LCAxMjAsIDE2KTsKfQoKLm5vbWJyZU5vZG9BcHJlbmRpZG8gewogIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzUsIDE5OSwgMTM1KTsKICBib3JkZXItY29sb3I6IHJnYigyNCwgOTIsIDI0KTsKfQoKI25vbWJyZS5ub2RvU3R1Y2sgewogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDYsIDk0LCA5NCk7Cn0KLm5vbWJyZU5vZG9FeHBlcnRvIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUwLCAxMDEsIDE1MCk7Cn0KI21lbnVDb250ZXh0dWFsIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxMTAlOwogIGxlZnQ6IDExMCU7CiAgbWluLXdpZHRoOiAxNDBweDsKICBwYWRkaW5nOiA1cHggMHB4OwogIHotaW5kZXg6IDEwOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzcsIDE3NywgMTU5KTsKICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksCiAgICAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpOwp9Ci5ib3Rvbk1lbnVDeCB7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtc2l6ZTogMTRweDsKICBwYWRkaW5nOiAzcHggNnB4Owp9Ci5zZWNjaW9uTWVudUN4IHsKICBmb250LXNpemU6IDE1cHg7CiAgY29sb3I6IHJnYig3MSwgNzEsIDcxKTsKfQouYm90b25NZW51Q3g6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IGdyYXk7Cn0KLnNlbGVjdG9yU3Vic2VjY2lvbk1lbnVDeHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5zdWJzZWNjaW9uTWVudUN4ewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAxMDAlOwogIHRvcDogMCU7CiAgZGlzcGxheTogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc3LCAxNzcsIDE1OSk7Cn0KLnNlbGVjdG9yU3Vic2VjY2lvbk1lbnVDeDpob3Zlcj4uc3Vic2VjY2lvbk1lbnVDeHsKICBkaXNwbGF5OiBibG9jazsKfQouZW5Db2xlY2Npb257CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExNywgMTgyLCAxMTcpOwp9Ci5lbkNvbGVjY2lvbjpob3ZlcnsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzYsIDE2OCwgMTM2KTsKCn0KLmN1YWRyaXRvRGVzY3JpcGNpb25Ob2RvIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA1MCU7CiAgbGVmdDogMTA0JTsKICB3aWR0aDogMTcwcHg7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogIGJhY2tncm91bmQtY29sb3I6ICNmZmRiYWY7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDAsIDAsIDQ0KTsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9CgouZGVzY3JpcGNpb25Ob2RvIHsKICBmb250LXNpemU6IDE1cHg7CiAgcGFkZGluZzogMTBweDsKICBtaW4taGVpZ2h0OiAzMHB4OwogIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKfQouYm90b25BYnJpck5vZG8gewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAyNHB4OwogIGhlaWdodDogMjRweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgbWFyZ2luOiAxMHB4IGF1dG87CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHBhZGRpbmc6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxNCwgMTc2LCAxMzApOwp9Ci5ib3RvbkFicmlyTm9kbzpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5MCwgMTQ1LCA4OCk7Cn0KCi5pbWFnZW5UYXJnZXQgewogIHdpZHRoOiAxODAlOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IC00MCU7CiAgbGVmdDogLTQwJTsKICB6LWluZGV4OiAxMDsKICBvcGFjaXR5OiAwLjg2Owp9Ci5pbWFnZW5UYXJnZXQ6aG92ZXIgewogIG9wYWNpdHk6IDAuMTY7Cn0KLmltYWdlbkFwcmVuZGlkbyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigzMywgMTY4LCAzMyk7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9CiNib3RvbkNlcnJhckRlc2NyaXBjaW9uIHsKICBsZWZ0OiAxMDElOwogIGJvdHRvbTogMTAxJTsKICB3aWR0aDogMTVweDsKICBoZWlnaHQ6IDE1cHg7Cn0KLmZ1ZXJ6YU1vdmltaWVudG97ICAKICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA1MCU7CiAgbGVmdDogNTAlOwogIHRyYW5zZm9ybS1vcmlnaW46IDAlIDAlOwogIHotaW5kZXg6IDIwMDsKfQojZnVlcnphQ2VudHJvTWFzYXsKICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOwp9CiNmdWVyemFDb2xpc2lvbnsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cn0KLmZsZWNoaXRhRnVlcnphewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICBsZWZ0OiAxMDAlOwogIHdpZHRoOiAxcHg7CiAgaGVpZ2h0OiAxcHg7CiAgYm9yZGVyOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLWxlZnQtY29sb3I6IGJsYWNrOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9Cg=="},{"version":3,"sources":["NodoConocimiento.vue"],"names":[],"mappingswhfile":"NodoConocimiento.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div\n    class=\"nodoConocimiento\"\n    :style=\"[estiloPosicion, estiloSize, estiloZeta]\"\n    :class=\"{ escondido }\"\n    @mousedown.ctrl.stop=\"arrastrandoNodo = true\"\n    @click.ctrl.capture=\"stopProp\"\n    @mouseup.left=\"guardarPosicion\"\n    @mousemove=\"arrastrarNodo\"\n    @mouseleave=\"arrastrandoNodo = false\"\n    @dblclick=\"abrirPaginaNodo\"\n  >\n    <div id=\"zonaArrastre\" v-show=\"arrastrandoNodo\"></div>\n\n    <div v-if=\"usuarioSuperadministrador\" v-show=\"configuracionAtlas.posicionando\" id=\"fuerzaCentroMasa\" class=\"fuerzaMovimiento\" :style=\"[estiloFuerzaCentroMasa]\"><div class=\"flechitaFuerza\"></div></div>\n    <div v-if=\"usuarioSuperadministrador\" v-show=\"configuracionAtlas.posicionando\" id=\"fuerzaColision\" class=\"fuerzaMovimiento\" :style=\"[estiloFuerzaColision]\"><div class=\"flechitaFuerza\"></div></div>\n\n    <img\n      src=\"@/assets/iconos/nodoConocimientoDefault.png\"\n      :class=\"{\n        fantasmeado:\n          usuarioLogeado &&\n          !aprendible &&\n          yo.atlas.configuracion.modo === 'estudiante' &&\n          !callingPosiciones,\n        deNodoSeleccionado: seleccionado,\n      }\"\n      alt=\"\"\n      class=\"iconoNodo\"\n      ref=\"iconoNodo\"\n    />\n    <img\n      src=\"@/assets/iconos/success.png\"\n      alt=\"Completado\"\n      title=\"Aprendizaje de este tema completado\"\n      v-show=\"nodoAprendido && yo.atlas.configuracion.modo === 'estudiante'\"\n      :style=\"[\n        {\n          width: parseInt(20 * factorZoom) + 'px',\n          left: parseInt(-10 * factorZoom) + 'px',\n          top: parseInt(-10 * factorZoom) + 'px',\n        },\n      ]\"\n      class=\"imagenAprendido\"\n    />\n    <img\n      src=\"@/assets/iconos/target.png\"\n      alt=\"Objetivo\"\n      v-show=\"esTarget\"\n      class=\"imagenTarget\"\n    />\n\n    <div\n      id=\"menuContextual\"\n      v-show=\"menuCx\"\n      @mousedown.stop=\"\"\n      @mouseup.stop=\"\"\n    >\n      <div class=\"seccionMenuCx\" @click=\"abrirPaginaNodo\">\n        {{ esteNodo.nombre }}\n      </div>\n      <div\n        class=\"botonMenuCx\"\n        v-if=\"\n          usuarioSuperadministrador == true || usuarioAdministradorAtlas == true\n        \"\n        @click.stop=\"eliminarEsteNodo\"\n      >\n        Eliminar\n      </div>\n      <div\n        class=\"botonMenuCx\"\n        v-if=\"usuarioSuperadministrador\"\n        @click.stop=\"copiarId\"\n      >\n        {{ esteNodo.id }}\n      </div>\n      <div class=\"botonMenuCx selectorSubseccionMenuCx\" v-show=\"yo.atlas && yo.atlas.colecciones && yo.atlas.colecciones.length>0\">\n        Colecciones\n        <div class=\"subseccionMenuCx\">\n          <div class=\"botonMenuCx\" v-for=\"coleccion of yo.atlas.colecciones\" :key=\"coleccion.id\" @click.stop=\"toggleNodoEnColeccion(coleccion.id)\" :class=\"{enColeccion:coleccion.idsNodos.includes(esteNodo.id)}\">\n            {{coleccion.nombre}}\n          </div>\n        </div>\n      </div>\n      <!-- <div\n        class=\"botonMenuCx\"\n        v-if=\"usuarioLogeado && !esNodoObjetivo\"\n        @click.stop=\"setNodoObjetivo(true)\"\n      >\n        Añadir a objetivos\n      </div>\n      <div\n        class=\"botonMenuCx\"\n        v-if=\"usuarioLogeado && esNodoObjetivo\"\n        @click.stop=\"setNodoObjetivo(false)\"\n      >\n        Retirar de objetivos\n      </div> -->\n      <div\n        class=\"botonMenuCx\"\n        v-if=\"usuarioLogeado\"\n        @click.stop=\"toggleAprendido\"\n        v-show=\"aprendible\"\n      >\n        {{ nodoAprendido ? \"Desm\" : \"M\" }}arcar como aprendido\n      </div>\n      <template\n        v-if=\"\n          nodoSeleccionado.id != -1 &&\n          nodoSeleccionado.id != esteNodo.id &&\n          (usuarioSuperadministrador == true ||\n            usuarioAdministradorAtlas == true)\n        \"\n      >\n        <div class=\"seccionMenuCx\">{{ nodoSeleccionado.nombre }}</div>\n        <div\n          class=\"botonMenuCx\"\n          @click.stop=\"crearVinculo('continuacion', nodoSeleccionado, esteNodo)\"\n        >\n          Continua aquí\n        </div>\n        <div\n          class=\"botonMenuCx\"\n          @click.stop=\"crearVinculo('continuacion', esteNodo, nodoSeleccionado)\"\n        >\n          Continua desde aquí\n        </div>\n        <div\n          class=\"botonMenuCx\"\n          v-show=\"esteNodo.vinculos.some((v) => v.idRef == nodoSeleccionado.id)\"\n          @click.stop=\"eliminarVinculo(esteNodo, nodoSeleccionado)\"\n        >\n          Desconectar\n        </div>\n      </template>\n    </div>\n    <div\n      id=\"nombre\"\n      :style=\"[estiloCartelNombre]\"\n      ref=\"nombre\"\n      :class=\"{\n        nombreSeleccionado: seleccionado,\n        nombreNodoAprendido:\n          nodoAprendido && yo.atlas.configuracion.modo === 'estudiante',\n        nombreNodoOutreach:\n          !aprendible &&\n          !callingPosiciones &&\n          yo.atlas.configuracion.modo === 'estudiante',\n        nombreNodoAprendible:\n          aprendible &&\n          !nodoAprendido &&\n          yo.atlas.configuracion.modo === 'estudiante',\n        nombreNodoExperto:\n          usuarioExpertoNodo && yo.atlas.configuracion.modo === 'experto',\n        nodoStuck: esteNodo.stuck && callingPosiciones,\n        deNodoSeleccionado: seleccionado,\n      }\"\n    >\n      {{ callingPosiciones ? esteNodo.puntaje : esteNodo.nombre }}\n    </div>\n\n    <div\n      class=\"cuadritoDescripcionNodo\"\n      v-if=\"esteNodo && esteNodo.descripcion\"\n      v-show=\"seleccionado && !callingPosiciones && mostrarDescripcion\"\n    >\n      <div class=\"descripcionNodo\">{{ esteNodo.descripcion }}</div>\n      <img\n        @click.stop=\"abrirPaginaNodo\"\n        src=\"@/assets/iconos/ir.png\"\n        alt=\"Ir\"\n        title=\"Abrir este nodo\"\n        class=\"botonAbrirNodo\"\n      />\n      <div\n        class=\"botonEquis\"\n        @click.stop=\"mostrarDescripcion = false\"\n        @mousedown.stop=\"\"\n        @mouseup.stop=\"\"\n        id=\"botonCerrarDescripcion\"\n      >\n        <div class=\"linea1\"></div>\n        <div class=\"linea2\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\n\nexport default {\n  name: \"NodoConocimiento\",\n  data() {\n    return {\n      arrastrandoNodo: false,\n      nombreEditable: false,\n      nombreEditandose: false,\n\n      baseSize: {\n        x: 50,\n        y: 50,\n      },\n\n      posicion: {\n        x: 0,\n        y: 0,\n      },\n\n      estiloNombreBase: {\n        minWidth: 20,\n        fontSize: 12,\n        minHeight: 10,\n        padding: 5,\n        borderRadius: 4,\n      },\n      mostrarDescripcion: true,\n    };\n  },\n  props: {\n    esteNodo: {\n      type: Object,\n      required: true,\n    },\n    esNodoObjetivo: Boolean,\n    esTarget: Boolean,\n    yo: Object,\n    escondido: Boolean,\n    centroVista: Object,\n    idNodoMenuCx: String,\n    idsNodosAprendidos: Array,\n    nodoSeleccionado: {\n      type: Object,\n      default() {\n        return {\n          id: \"-1\",\n          nombre: \"ninguno\",\n        };\n      },\n    },\n    usuarioAdministradorAtlas: {\n      type: Boolean,\n      default: false,\n    },\n\n    callingPosiciones: Boolean,\n    factorZoom: Number,\n    configuracionAtlas:Object,\n  },\n  computed: {\n    menuCx() {\n      return this.idNodoMenuCx == this.esteNodo.id ? true : false;\n    },\n    size() {\n      let fSize = Object.assign({}, this.baseSize);\n      if (this.seleccionado) {\n        let baseX = this.baseSize.x;\n        let baseY = this.baseSize.y;\n        fSize.x = Math.round(baseX * 1.1);\n        fSize.y = Math.round(baseY * 1.1);\n      }\n      return { ...fSize };\n    },\n    seleccionado() {\n      let sel = false;\n      if (this.nodoSeleccionado.id == this.esteNodo.id) {\n        sel = true;\n      }\n      return sel;\n    },\n    estiloPosicion() {\n      //Posicion absoluta\n      let posY = Math.round(\n        (this.posicion.y - this.size.y / 2) * this.factorZoom\n      );\n      let posX = Math.round(\n        (this.posicion.x - this.size.x / 2) * this.factorZoom\n      );\n\n      //Ajustar respecto del centro de la vista\n      // posY -= this.centroVista.y;\n      // posX -= this.centroVista.x;\n      return {\n        top: posY + \"px\",\n        left: posX + \"px\",\n      };\n    },\n    estiloZeta() {\n      let valorZ = 0;\n      if (this.arrastrandoNodo || this.seleccionado) {\n        valorZ = 10;\n      }\n      if (this.menuCx) {\n        valorZ = 11;\n      }\n      return {\n        zIndex: valorZ,\n      };\n    },\n    estiloSize() {\n      return {\n        width: this.size.x * this.factorZoom + \"px\",\n        height: this.size.y * this.factorZoom + \"px\",\n      };\n    },\n    permisosUsuario: function () {\n      return this.$store.state.usuario.permisos;\n    },\n    aprendible() {\n      var idsNecesarios = this.esteNodo.vinculos\n        .filter((v) => v.rol == \"target\")\n        .map((v) => v.idRef);\n      return (\n        idsNecesarios.every((id) => this.idsNodosAprendidos.includes(id)) ||\n        this.idsNodosAprendidos.includes(this.esteNodo.id) ||\n        !this.esteNodo.vinculos.some((v) => v.rol == \"target\")\n      );\n    },\n    fantasmeado() {\n      if (\n        this.esteNodo.vinculos\n          .filter((v) => v.rol == \"target\")\n          .some((v) => this.idsNodosAprendidos.includes(v.idRef)) ||\n        this.esteNodoAprendido ||\n        !this.esteNodo.vinculos.some((v) => v.rol == \"target\")\n      ) {\n        return false;\n      }\n      return true;\n    },\n    nodoAprendido() {\n      return this.idsNodosAprendidos.includes(this.esteNodo.id);\n    },\n    estiloCartelNombre() {\n      return {\n        minWidth:\n          parseInt(this.estiloNombreBase.minWidth * this.factorZoom) + \"px\",\n        fontSize:\n          parseInt(this.estiloNombreBase.fontSize * this.factorZoom) + \"px\",\n        minHeight:\n          parseInt(this.estiloNombreBase.minHeight * this.factorZoom) + \"px\",\n        padding:\n          parseInt(this.estiloNombreBase.padding * this.factorZoom) + \"px\",\n        borderRadius:\n          parseInt(this.estiloNombreBase.borderRadius * this.factorZoom) + \"px\",\n      };\n    },\n    usuarioExpertoNodo() {\n      if (!this.usuario || !this.usuario.id) return false;\n      return this.esteNodo.expertos.includes(this.usuario.id);\n    },\n    estiloFuerzaCentroMasa(){\n      return {\n        width: Math.round(this.esteNodo.fuerzaCentroMasa.fuerza*this.factorZoom)+'px',\n        height: Math.round(3*this.factorZoom)+\"px\",\n        transform: \"rotate(\"+this.esteNodo.fuerzaCentroMasa.direccion+\"rad)\"\n        }\n    },\n    estiloFuerzaColision(){\n      return {\n        width: Math.round(this.factorZoom*this.esteNodo.fuerzaColision.fuerza)+'px',\n        height: Math.round(3*this.factorZoom)+\"px\",\n        transform: \"rotate(\"+this.esteNodo.fuerzaColision.direccion+\"rad)\"\n        }\n    }\n  },\n  methods: {\n    toggleAprendido() {\n      var nuevoEstadoAprendido = this.nodoAprendido ? false : true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!, $nuevoEstadoAprendido: Boolean!) {\n              setNodoAtlasAprendidoUsuario(\n                idNodo: $idNodo\n                nuevoEstadoAprendido: $nuevoEstadoAprendido\n              )\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n            nuevoEstadoAprendido,\n          },\n        })\n        .then(({ data: { setNodoAtlasAprendidoUsuario } }) => {\n          if (setNodoAtlasAprendidoUsuario) {\n            this.$emit(\"tengoNuevoValorAprendido\", nuevoEstadoAprendido);\n          }\n        });\n    },\n    // setNodoObjetivo(nuevoEstadoObjetivo) {\n    //   this.$apollo\n    //     .mutate({\n    //       mutation: gql`\n    //         mutation ($idNodo: ID!, $nuevoEstadoObjetivo: Boolean!) {\n    //           setNodoObjetivo(\n    //             idNodo: $idNodo\n    //             nuevoEstadoObjetivo: $nuevoEstadoObjetivo\n    //           )\n    //         }\n    //       `,\n    //       variables: {\n    //         idNodo: this.esteNodo.id,\n    //         nuevoEstadoObjetivo,\n    //       },\n    //     })\n    //     .then(({ data: { setNodoObjetivo } }) => {\n    //       if (setNodoObjetivo) {\n    //         this.$emit(\"cambieEstadoObjetivo\", nuevoEstadoObjetivo);\n    //       }\n    //     });\n    // },\n    abrirPaginaNodo() {\n      if (\n        !this.aprendible &&\n        !this.usuarioSuperadministrador &&\n        this.yo.atlas.configuracion.modo === \"estudiante\"\n      )\n        return alert(\"¡Aún no puedes estudiar este nodo!\");\n      this.$router.push(\"/nodoConocimiento/\" + this.esteNodo.id);\n    },\n    copiarId(e) {\n      let str = e.target.innerText.trim();\n      const el = document.createElement(\"textarea\");\n      el.value = str;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(el);\n    },\n    eliminarEsteNodo() {\n      if (!this.usuarioSuperadministrador && !this.usuarioAdministradorAtlas) {\n        console.log(`No autorizado`);\n        return;\n      }\n      this.$emit(\"eliminar\", this.esteNodo.id);\n    },\n    arrastrarNodo(e) {\n      if (!this.arrastrandoNodo) {\n        return;\n      }\n      //console.log(`mouse move en ${e.pageX}, ${e.pageY}`);\n      let posContenedor = document\n        .getElementById(\"contenedorNodos\")\n        .getBoundingClientRect();\n      let nuevoTop = Math.round(\n        (e.clientY - posContenedor.top) / this.factorZoom\n      );\n      let nuevoLeft = Math.round(\n        (e.clientX - posContenedor.left) / this.factorZoom\n      );\n      this.posicion.y = nuevoTop;\n      this.posicion.x = nuevoLeft;\n    },\n    guardarPosicion() {\n      if (!this.arrastrandoNodo) return;\n      this.$emit(\"cambioDePosicionManual\", this.esteNodo.id, {\n        x: this.posicion.x,\n        y: this.posicion.y,\n      });\n\n      this.arrastrandoNodo = false;\n    },\n    crearVinculo(tipo, nodoFrom, nodoTo) {\n      console.log(`Creando vinculo entre ${nodoFrom} y ${nodoTo}`);\n      if (!this.usuarioSuperadministrador && !this.usuarioAdministradorAtlas) {\n        console.log(`No autorizado`);\n        return;\n      }\n      console.log(\n        `creando un vinculo tipo ${tipo} entre ${nodoFrom.nombre} y ${nodoTo.nombre} `\n      );\n      this.$emit(\"creacionVinculo\", {\n        tipo,\n        idNodoFrom: nodoFrom.id,\n        idNodoTo: nodoTo.id,\n      });\n    },\n    eliminarVinculo(nodoFrom, nodoTo) {\n      console.log(`Desconectando`);\n      if (!this.usuarioSuperadministrador && !this.usuarioAdministradorAtlas) {\n        console.log(`No autorizado`);\n        return;\n      }\n      this.$emit(\"eliminacionVinculo\", {\n        idNodoFrom: nodoFrom.id,\n        idNodoTo: nodoTo.id,\n      });\n    },\n    stopProp(e) {\n      console.log(`Stopping`);\n      e.stopPropagation();\n    },\n    toggleNodoEnColeccion(idColeccion){\n      if(!this.usuario || !this.usuario.id){\n        return ;\n      }\n      this.$apollo.mutate({\n        mutation:gql`\n          mutation($idNodo:ID!, $idColeccion:ID!, $idUsuario:ID!){\n            toggleNodoColeccionNodosAtlasConocimientoUsuario(idNodo: $idNodo, idColeccion:$idColeccion, idUsuario: $idUsuario){\n              id\n              idsNodos\n              nodos{\n                id\n                nombre\n              }\n            }\n          }\n        `,\n        variables:{\n          idNodo: this.esteNodo.id,\n          idColeccion,\n          idUsuario: this.usuario.id,\n        }\n      })\n    }\n  },\n  watch: {\n    esteNodo() {\n      this.posicion = { ...this.esteNodo.coords };\n    },\n    seleccionado(estado) {\n      if (estado) {\n        this.mostrarDescripcion = true;\n      }\n    },\n  },\n  mounted() {\n    this.posicion = { ...this.esteNodo.autoCoords };\n  },\n};\n</script>\n\n<style scoped>\n.iconoNodo {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  pointer-events: none;\n  box-shadow: 2px 2px 2px 2px grey;\n  border-radius: 50%;\n}\n.nodoConocimiento {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-size: 100% 100%;\n  cursor: pointer;\n  position: absolute;\n  pointer-events: all;\n  background-color: rgba(128, 128, 128, 0.349);\n}\n#zonaArrastre {\n  width: 500px;\n  height: 500px;\n  position: absolute;\n  transform: translate(-50%, -50%);\n}\n.seleccionado {\n  z-index: 10;\n}\n.fantasmeado {\n  opacity: 0.2;\n}\n.fantasmeado.imgSeleccionado {\n  opacity: 0.5;\n}\n.escondido {\n  visibility: hidden;\n}\n#nombre {\n  position: absolute;\n  top: 105%;\n  text-align: center;\n  left: 50%;\n  transform: translateX(-50%);\n  border-width: 1px;\n  border-style: solid;\n}\n\n.nombreNodoOutreach {\n  background-color: rgb(127, 190, 192);\n  border-color: rgb(53, 110, 112);\n  opacity: 0.4;\n}\n.nombreNodoOutreach:hover {\n  opacity: 0.6;\n}\n.nombreNodoOutreach.deNodoSeleccionado {\n  opacity: 0.8;\n}\n\n.nombreNodoAprendible {\n  background-color: rgb(221, 236, 91);\n  border-color: rgb(189, 120, 16);\n}\n\n.nombreNodoAprendido {\n  background-color: rgb(135, 199, 135);\n  border-color: rgb(24, 92, 24);\n}\n\n#nombre.nodoStuck {\n  background-color: rgb(206, 94, 94);\n}\n.nombreNodoExperto {\n  background-color: rgb(150, 101, 150);\n}\n#menuContextual {\n  position: absolute;\n  top: 110%;\n  left: 110%;\n  min-width: 140px;\n  padding: 5px 0px;\n  z-index: 10;\n  background-color: rgb(177, 177, 159);\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.botonMenuCx {\n  cursor: pointer;\n  font-size: 14px;\n  padding: 3px 6px;\n}\n.seccionMenuCx {\n  font-size: 15px;\n  color: rgb(71, 71, 71);\n}\n.botonMenuCx:hover {\n  background-color: gray;\n}\n.selectorSubseccionMenuCx{\n  position: relative;\n}\n\n.subseccionMenuCx{\n  position: absolute;\n  left: 100%;\n  top: 0%;\n  display: none;\n  background-color: rgb(177, 177, 159);\n}\n.selectorSubseccionMenuCx:hover>.subseccionMenuCx{\n  display: block;\n}\n.enColeccion{\n  background-color: rgb(117, 182, 117);\n}\n.enColeccion:hover{\n    background-color: rgb(136, 168, 136);\n\n}\n.cuadritoDescripcionNodo {\n  position: absolute;\n  top: 50%;\n  left: 104%;\n  width: 170px;\n  transform: translateY(-50%);\n  background-color: #ffdbaf;\n  border: 1px solid rgb(0, 0, 44);\n  border-radius: 10px;\n}\n\n.descripcionNodo {\n  font-size: 15px;\n  padding: 10px;\n  min-height: 30px;\n  white-space: pre-wrap;\n}\n.botonAbrirNodo {\n  display: block;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  margin: 10px auto;\n  border-radius: 50%;\n  padding: 10px;\n  background-color: rgb(214, 176, 130);\n}\n.botonAbrirNodo:hover {\n  background-color: rgb(190, 145, 88);\n}\n\n.imagenTarget {\n  width: 180%;\n  position: absolute;\n  top: -40%;\n  left: -40%;\n  z-index: 10;\n  opacity: 0.86;\n}\n.imagenTarget:hover {\n  opacity: 0.16;\n}\n.imagenAprendido {\n  position: absolute;\n  background-color: rgb(33, 168, 33);\n  border-radius: 50%;\n}\n#botonCerrarDescripcion {\n  left: 101%;\n  bottom: 101%;\n  width: 15px;\n  height: 15px;\n}\n.fuerzaMovimiento{  \n  background-color: black;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform-origin: 0% 0%;\n  z-index: 200;\n}\n#fuerzaCentroMasa{\n  background-color: blue;\n}\n#fuerzaColision{\n  background-color: red;\n}\n.flechitaFuerza{\n  position: absolute;\n  top: 50%;\n  left: 100%;\n  width: 1px;\n  height: 1px;\n  border: 5px solid transparent;\n  border-left-color: black;\n  transform: translate(-50%, -50%);\n}\n</style>"]}]}