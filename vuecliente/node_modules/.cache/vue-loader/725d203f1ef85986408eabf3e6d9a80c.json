{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue","mtime":1674568326919},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PanelConjuntosNodos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"PanelConjuntosNodos.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div\n    id=\"panelConjuntosNodos\"\n    @mouseup.left.stop=\"\"\n    @mousedown.left.stop=\"\"\n    @touchmove.stop=\"\"\n    v-show=\"abierto\"\n  >   \n    <div id=\"barraConjuntos\">\n      <div\n        class=\"selectorConjunto\"      \n        :class=\"{ seleccionado: conjunto.id === idConjuntoSeleccionado }\"\n        @click=\"seleccionarColeccion($event, conjunto.id)\"\n        v-for=\"conjunto of conjuntos\"\n        :key=\"'selectorConjunto' + conjunto.id\"\n      >\n        <div\n          class=\"nombreColeccion\"\n          v-show=\"\n            !editandoNombreColeccion ||\n            !conjunto.editable ||\n            conjunto.id != idConjuntoSeleccionado\n          \"\n        >\n          {{ conjunto.titulo }}\n        </div>\n        <input\n          type=\"text\"\n          name=\"nuevoNombreColeccion\"\n          :id=\"'inputNombreColeccion'+conjunto.id\"\n          v-show=\"\n            conjunto.editable &&\n            conjunto.id === idConjuntoSeleccionado &&\n            editandoNombreColeccion\n          \"\n          :class=\"{deshabilitado: enviandoQueryColecciones}\"\n          @keypress.enter=\"guardarNuevoNombreColeccion($event, conjunto.id)\"\n          @blur=\"editandoNombreColeccion = false\"\n        />\n        <img\n          src=\"@/assets/iconos/delete.png\"\n          alt=\"Eliminar\"\n          width=\"20px\"\n          title=\"Eliminar colección\"\n          v-show=\"\n            !editandoNombreColeccion &&\n            conjunto.editable &&\n            conjunto.id === idConjuntoSeleccionado\n          \"\n          class=\"botonEliminarColeccion\"\n          @click.stop=\"eliminarColeccion(conjunto.id)\"\n        />\n      </div>\n      <div\n        id=\"controlesConjuntos\"\n        :class=\"{ deshabilitado: enviandoQueryColecciones }\"        \n      >\n        <div @click=\"crearNuevaColeccion\" class=\"botonControlesConjuntos\">Nueva colección</div>\n      </div>\n    </div>\n    \n    <coleccion-nodos-conocimiento :yo=\"yo\" v-if=\"idConjuntoSeleccionado\" :estaColeccion=\"conjuntoSeleccionado\"/>\n    <!-- <div\n      id=\"listaNodosConjunto\"\n      v-if=\"conjuntoSeleccionado\"\n      v-show=\"abierto && conjuntoSeleccionado\"\n      :key=\"'listaNodos' + idConjuntoSeleccionado\"\n      @click.self.stop=\"idNodoSeleccionado = null\"\n    >\n      <icono-nodo-conocimiento\n        :esteNodo=\"nodo\"\n        v-for=\"nodo of conjuntoSeleccionado.nodos\"\n        v-show=\"conjuntoSeleccionado\"\n        :key=\"nodo.id\"\n        :seleccionado=\"nodo.id === idNodoSeleccionado\"\n        @click.native.stop=\"idNodoSeleccionado = nodo.id\"\n        @dblclick.native.stop=\"$emit('centrarEnNodo', nodo.id)\"\n      /> -->\n    <!-- </div> -->\n    \n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport ColeccionNodosConocimiento from './ColeccionNodosConocimiento.vue';\n\nconst charProhibidosNombreColeccion = /[^ a-zA-ZÀ-ž0-9_():.,-]/;\n\nexport default {\n  components: { ColeccionNodosConocimiento },\n  name: \"PanelConjuntosNodos\",\n  props: {\n    yo: Object,\n    modoAtlas:String,\n  },\n  data() {\n    return {\n      abierto: false,\n      idConjuntoSeleccionado: 0,\n      editandoNombreColeccion: false,\n\n      idNodoSeleccionado: null,\n\n      enviandoQueryColecciones: false,\n      enviandoQueryNodosSeccion: false,\n    };\n  },\n  methods: {    \n    abrirPaginaNodo(idNodo) {\n      if (!idNodo) return;\n      this.$router.push(\"/nodoConocimiento/\" + idNodo);\n    },\n    crearNuevaColeccion() {\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation {\n              crearColeccionNodosAtlasConocimientoUsuario {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    seleccionarColeccion(e, idColeccion) {\n      if (this.idConjuntoSeleccionado === idColeccion) {\n        const nombreColeccion=this.conjuntos.find(c=>c.id===idColeccion).nombre;\n        console.log(`Seting value del input a ${nombreColeccion}`);\n        this.editandoNombreColeccion = true;\n        document.getElementById('inputNombreColeccion'+idColeccion).value=nombreColeccion;\n\n      } else {\n        this.editandoNombreColeccion = false;\n      }\n      this.idConjuntoSeleccionado = idColeccion;\n      this.idNodoSeleccionado = null;\n    },\n    guardarNuevoNombreColeccion(e, idColeccion) {\n      var nuevoNombre = e.target.value;\n      console.log(\n        `seting nombre de coleccion ${idColeccion} con value: ${nuevoNombre}`\n      );\n      if (charProhibidosNombreColeccion.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n          this.editandoNombreColeccion = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    eliminarColeccion(idColeccion) {\n      if (\n        !confirm(\n          \"Confirmar eliminación de colección? (Esta acción no se puede deshacer)\"\n        )\n      )\n        return;\n      this.idConjuntoSeleccionado = null;\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!) {\n              eliminarColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    eliminarNodoSeleccionadoSeccionSeleccionada() {\n\n      if(!this.idConjuntoSeleccionado || !this.idNodoSeleccionado)return\n\n      this.enviandoQueryNodosSeccion = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $idNodo: ID!) {\n              removeNodoColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                idNodo: $idNodo\n              ) {\n                id\n                idsNodos\n                nodos {\n                  id\n                  nombre\n                }\n              }\n            }\n          `,\n          variables:{\n            idColeccion:this.idConjuntoSeleccionado,\n            idNodo:this.idNodoSeleccionado\n          }\n        })\n        .then(() => {\n          this.enviandoQueryNodosSeccion = false;\n          this.idNodoSeleccionado=null;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryNodosSeccion = false;\n        });\n    },    \n  },\n  computed: {    \n    idsNodosObjetivos() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.datosNodos) {\n        return [];\n      }\n      return this.yo.atlas.datosNodos\n        .filter((n) => n.objetivo == true)\n        .map((n) => n.idNodo);\n    },\n    nodosObjetivo() {\n      if (!this.yo) return [];\n\n      return this.todosNodos.filter((n) =>\n        this.idsNodosObjetivos.includes(n.id)\n      );\n    },        \n    conjuntos() {\n      \n      return this.conjuntosUsuario\n    },     \n    conjuntosUsuario() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.colecciones) {\n        return [];\n      }\n\n      var nuevoColecciones=JSON.parse(JSON.stringify(this.yo.atlas.colecciones));\n\n      nuevoColecciones.forEach((c) => {\n        c.titulo = c.nombre;\n        c.modo = \"estudiante\";\n        c.editable = true;\n        c.editandoNombre = false;\n      });\n\n      return nuevoColecciones;\n    },\n    conjuntoSeleccionado(){\n      return this.conjuntos.find(c=>c.id===this.idConjuntoSeleccionado);\n    }\n  },\n  watch: {\n    abierto() {\n      this.idNodoSeleccionado = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#panelConjuntosNodos {\n  position: absolute;\n  top: 50px;\n  box-shadow: 2px 2px 2px 2px rgb(190, 190, 190);\n  min-width: 100px;\n  min-height: 100px;\n  max-height: 80%;\n  background-color: whitesmoke;\n  width: min(90%, 650px);\n  right:0px;\n}\n#grabber {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: absolute;\n  top: 0%;\n  right: 100%;\n}\n#barraConjuntos {\n  display: flex;\n  width: 100%;\n  overflow-x: scroll;\n}\n.selectorConjunto {\n  cursor: pointer;\n  background-color: rgba(95, 158, 160, 0.637);\n  padding: 3px 5px;\n  font-style: italic;\n  display: flex;\n}\n.selectorConjunto.seleccionado {\n  background-color: cadetblue;\n}\n.botonEliminarColeccion {\n  cursor: pointer;\n  border-radius: 50%;\n  margin-left: 10px;\n  width:20px;\n  height:20px;\n}\n.botonEliminarColeccion:hover {\n  background-color: rgb(219, 63, 63);\n}\n#controlesConjuntos {\n  margin-left: auto;\n}\n.botonControlesConjuntos {\n  font-size: 14px;\n  color: gray;\n  cursor: pointer;\n}\n.botonControlesConjuntos:hover {\n  background-color: rgba(128, 128, 128, 0.527);\n}\n\n#botonRastrearNodo {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  border-radius: 50%;\n}\n#botonRastrearNodo:hover {\n  background-color: rgba(95, 158, 160, 0.658);\n}\n\n.botonEliminarNodoColeccion {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  align-self: center;\n  border-radius: 50%;\n  margin-left: 10px;\n}\n.botonEliminarNodoColeccion:hover {\n  background-color: rgb(236, 68, 68);\n}\n\n#listaNodosConjunto {\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n  max-height: 55vh;\n  padding-top: 10px;\n}\n.iconoNodoConocimiento {\n  margin: 0px 40px;\n  margin-bottom: 90px;\n}\n#listaClasesNodo {\n  width: 100%;\n}\n.infoClase {\n  display: flex;\n  min-height: 40px;\n  padding: 2px 5px;\n}\n.infoClase:hover {\n  background-color: rgba(95, 158, 160, 0.452);\n}\n.iconoAbrirNodo {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n.infoInteresados {\n  margin-left: auto;\n  position: relative;\n}\n.cantidadInteresados {\n  position: absolute;\n  top: 25%;\n  left: 65%;\n  transform: translate(-50%, -50%);\n  font-size: 10px;\n}\n.iconoInteresados {\n  width: 27px;\n  height: 27px;\n  cursor: pointer;\n  padding: 2px;\n  border-radius: 50%;\n  border: 1px solid chocolate;\n  background-color: rgba(210, 105, 30, 0.438);\n}\n</style>"]}]}