{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/usuario/RutaGrado.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/usuario/RutaGrado.vue","mtime":1676563818640},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBncWwgZnJvbSAiZ3JhcGhxbC10YWciOwppbXBvcnQgTm9kb0dyYWRvIGZyb20gIi4vTm9kb0dyYWRvLnZ1ZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBOb2RvR3JhZG8gfSwKICBuYW1lOiAiUnV0YUdyYWRvIiwKICBwcm9wczogewogICAgaWRVc3VhcmlvOiBTdHJpbmcsCiAgfSwKICBhcG9sbG86IHsKICAgIHN1YnJ1dGFzOiB7CiAgICAgIHF1ZXJ5OiBncWxgCiAgICAgICAgcXVlcnkgewogICAgICAgICAgc3VicnV0YXNHcmFkb01hZXN0cmFWaWRhIHsKICAgICAgICAgICAgaWQKICAgICAgICAgICAgbm9tYnJlCiAgICAgICAgICAgIGNvbG9yCiAgICAgICAgICAgIG5vZG9zIHsKICAgICAgICAgICAgICBpZAogICAgICAgICAgICAgIG5vbWJyZQogICAgICAgICAgICAgIGRlc2NyaXBjaW9uCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIGAsCiAgICAgIHVwZGF0ZSh7IHN1YnJ1dGFzR3JhZG9NYWVzdHJhVmlkYSB9KSB7CiAgICAgICAgcmV0dXJuIHN1YnJ1dGFzR3JhZG9NYWVzdHJhVmlkYTsKICAgICAgfSwKICAgIH0sCiAgICBub2Rvc0NvbXBsZXRhZG9zOiB7CiAgICAgIHF1ZXJ5OiBncWxgCiAgICAgICAgcXVlcnkgKCRpZFVzdWFyaW86IElEISkgewogICAgICAgICAgVXN1YXJpbyhpZFVzdWFyaW86ICRpZFVzdWFyaW8pIHsKICAgICAgICAgICAgaWQKICAgICAgICAgICAgbm9kb3NDb21wbGV0YWRvc1J1dGFHcmFkbwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgYCwKICAgICAgdXBkYXRlKHsgVXN1YXJpbyB9KSB7CiAgICAgICAgcmV0dXJuIFVzdWFyaW8ubm9kb3NDb21wbGV0YWRvc1J1dGFHcmFkbzsKICAgICAgfSwKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZFVzdWFyaW86IHRoaXMuaWRVc3VhcmlvLAogICAgICAgIH07CiAgICAgIH0sCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1YnJ1dGFzOiBbXSwKICAgICAgbm9kb3NDb21wbGV0YWRvczogW10sCiAgICAgIGlkTm9kb1NlbGVjY2lvbmFkbzogbnVsbCwKCiAgICAgIHNldHRpbmdDb2xvclN1YnJ1dGE6ZmFsc2UsCiAgICB9OwogIH0sCiAgbWV0aG9kczp7CiAgICBzZXRDb2xvclN1YnJ1dGEoaWRTdWJydXRhKXsKICAgICAgbGV0IG51ZXZvQ29sb3I9cHJvbXB0KCJJbnRyb2R1Y2UgZWwgY8OzZGlnbyBkZWwgbnVldm8gY29sb3IiKTsKCiAgICAgIHRoaXMuc2V0dGluZ0NvbG9yU3VicnV0YT10cnVlOwogICAgICB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICBtdXRhdGlvbjogZ3FsYAogICAgICAgICAgbXV0YXRpb24oJGlkU3VicnV0YTogSUQhLCAkbnVldm9Db2xvcjogU3RyaW5nISl7CiAgICAgICAgICAgIHNldENvbG9yU3VicnV0YUdyYWRvKGlkU3VicnV0YTogJGlkU3VicnV0YSwgbnVldm9Db2xvcjogJG51ZXZvQ29sb3IpewogICAgICAgICAgICAgICBpZAogICAgICAgICAgICAgICBjb2xvcgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBgLAogICAgICAgICAgdmFyaWFibGVzOnsKICAgICAgICAgICAgaWRTdWJydXRhLAogICAgICAgICAgICBudWV2b0NvbG9yCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbigoKT0+ewogICAgICAgICAgdGhpcy5zZXR0aW5nQ29sb3JTdWJydXRhPWZhbHNlOwogICAgICAgICAgICAKICAgICAgICB9KS5jYXRjaCgoZXJyb3IpPT57CiAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3I6ICcrIGVycm9yKTsKICAgICAgICAgIHRoaXMuc2V0dGluZ0NvbG9yU3VicnV0YT1mYWxzZTsKICAgICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["RutaGrado.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RutaGrado.vue","sourceRoot":"src/components/usuario","sourcesContent":["<template>\n  <div class=\"rutaGrado\" @click=\"idNodoSeleccionado = null\">\n    <div id=\"titulo\" class=\"tituloComponente\">Ruta de grado</div>\n\n    <div id=\"laRutaGrado\">\n      <div class=\"subruta\" v-for=\"ruta of subrutas\" :key=\"ruta.id\">\n        <div class=\"lineaRuta\"></div>\n        <nodo-grado\n          v-for=\"nodo of ruta.nodos\"\n          :key=\"nodo.id\"\n          :esteNodo=\"nodo\"\n          :completado=\"nodosCompletados.includes(nodo.id)\"\n          :colorSubruta=\"ruta.color\"\n          :seleccionado=\"idNodoSeleccionado === nodo.id\"\n          :idUsuario=\"idUsuario\"\n          @setColorSubruta=\"setColorSubruta(ruta.id)\"\n          @click.native.stop=\"\n            idNodoSeleccionado = idNodoSeleccionado === nodo.id ? null : nodo.id\n          \"\n          @seleccioname=\"idNodoSeleccionado = nodo.id\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport NodoGrado from \"./NodoGrado.vue\";\n\nexport default {\n  components: { NodoGrado },\n  name: \"RutaGrado\",\n  props: {\n    idUsuario: String,\n  },\n  apollo: {\n    subrutas: {\n      query: gql`\n        query {\n          subrutasGradoMaestraVida {\n            id\n            nombre\n            color\n            nodos {\n              id\n              nombre\n              descripcion\n            }\n          }\n        }\n      `,\n      update({ subrutasGradoMaestraVida }) {\n        return subrutasGradoMaestraVida;\n      },\n    },\n    nodosCompletados: {\n      query: gql`\n        query ($idUsuario: ID!) {\n          Usuario(idUsuario: $idUsuario) {\n            id\n            nodosCompletadosRutaGrado\n          }\n        }\n      `,\n      update({ Usuario }) {\n        return Usuario.nodosCompletadosRutaGrado;\n      },\n      variables() {\n        return {\n          idUsuario: this.idUsuario,\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      subrutas: [],\n      nodosCompletados: [],\n      idNodoSeleccionado: null,\n\n      settingColorSubruta:false,\n    };\n  },\n  methods:{\n    setColorSubruta(idSubruta){\n      let nuevoColor=prompt(\"Introduce el cÃ³digo del nuevo color\");\n\n      this.settingColorSubruta=true;\n      this.$apollo.mutate({\n        mutation: gql`\n          mutation($idSubruta: ID!, $nuevoColor: String!){\n            setColorSubrutaGrado(idSubruta: $idSubruta, nuevoColor: $nuevoColor){\n               id\n               color\n            }\n          }\n          `,\n          variables:{\n            idSubruta,\n            nuevoColor\n          }\n        }).then(()=>{\n          this.settingColorSubruta=false;\n            \n        }).catch((error)=>{\n          console.log('Error: '+ error);\n          this.settingColorSubruta=false;\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n#laRutaGrado {\n  display: flex;\n  justify-content: center;\n  gap: 0px;\n  padding: 20px 0px;\n  max-height: 100vh;\n  overflow-y: scroll;\n}\n\n.subruta {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 0px 20px;\n  align-items: center;\n  position: relative;\n  flex-shrink: 0;\n  min-width: 300px;\n}\n\n.subruta .lineaRuta {\n  position: absolute;\n  top: 0px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--gris);\n  width: 2px;\n  height: 100%;\n}\n</style>"]}]}