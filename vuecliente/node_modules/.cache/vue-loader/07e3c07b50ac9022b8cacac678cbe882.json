{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/Espacios.vue?vue&type=style&index=0&id=77c947ce&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/Espacios.vue","mtime":1674484905018},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYmFycmFDb250cm9sZXMgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlOwogIHBhZGRpbmc6IDEwcHggMjBweDsKfQoKLmJvdG9uQ29udHJvbCB7CiAgd2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4Owp9CiNsaXN0YUVzcGFjaW9zIHsKICBtYXJnaW46IDIwcHg7CiAgd2lkdGg6IG1pbig2MDBweCwgOTV2dyk7CiAgbWFyZ2luLWJvdHRvbTogMTAwcHg7Cn0KLmVzcGFjaW8gewogIG1hcmdpbjogMTBweCAwcHg7Cn0KLmVzcGFjaW86aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyaXNIb3Zlcik7Cn0K"},{"version":3,"sources":["Espacios.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6QA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Espacios.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"espacios\">\n    <router-view\n      id=\"visorVentanaEventoPublico\"\n      @meRepetiPeriodicamente=\"manejarCreacionEventos\"\n      @eventoCambioFecha=\"manejarCreacionEventos([$event])\"\n    >\n    </router-view>\n    \n\n    <div class=\"barraSeccion\" @click=\"mostrandoEspacios = !mostrandoEspacios\">\n      <img\n        src=\"@/assets/iconos/angleDown.svg\"\n        style=\"height: 20px\"\n        alt=\"Abrir\"\n        :style=\"[{ transform: mostrandoEspacios ? 'none' : 'rotate(-90deg)' }]\"\n      />\n      Espacios\n\n      <div class=\"contenedorControles\" v-show=\"mostrandoEspacios\" @click.stop=\"\" style=\"margin-left: auto\">\n        <div\n          class=\"boton\"\n          @click=\"mostrandoConfiguracion = !mostrandoConfiguracion\"\n        >\n          <img src=\"@/assets/iconos/cog.svg\" alt=\"Config\" style=\"\" />\n        </div>\n        <div\n          class=\"boton\"\n          @click.stop=\"crearNuevoEspacio\"\n          v-show=\"mostrandoEspacios && !creandoEspacio\"\n        >\n          <img src=\"@/assets/iconos/plusCircle.svg\" alt=\"Crear\" style=\"\" />\n        </div>\n        <loading texto=\"\" v-show=\"creandoEspacio\" />\n      </div>\n    </div>\n\n    <div class=\"zonaConfiguracion\" v-show=\"mostrandoConfiguracion && mostrandoEspacios\">\n      <div class=\"barraSeccion\">\n        Configuración\n      </div>\n      <div class=\"contenedorBloquesConfiguracion\">\n        <div class=\"bloqueConfiguracion\">\n          <div class=\"campoConfiguracion\">\n            Mostrar: \n            <label for=\"checkMostrarTodosEspacios\"\n              >Mis espacios</label\n            >\n            <input\n              type=\"radio\"\n              name=\"checkMostrarTodosEspacios\"\n              id=\"checkMostrarTodosEspacios\"\n              ref=\"checkMostrarTodosEspacios\"\n              value=\"mios\"\n              v-model=\"tipoMostrarEspacios\"\n            />\n\n            <label for=\"checkMostrarTodosEspacios\"\n              >Todos los espacios</label\n            >\n            <input\n              type=\"radio\"\n              name=\"checkMostrarTodosEspacios\"\n              id=\"checkMostrarTodosEspacios\"\n              ref=\"checkMostrarTodosEspacios\"\n              value=\"todos\"\n              v-model=\"tipoMostrarEspacios\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"listaEspacios\" v-show=\"mostrandoEspacios\">\n      <div\n        class=\"anuncioZonaVacia\"\n        v-if=\"!espaciosVisibles || espaciosVisibles.length < 1\"\n      >\n        Aún no hay espacios\n      </div>\n      <espacio\n        v-for=\"espacio of espaciosVisibles\"\n        ref=\"espacios\"\n        :key=\"espacio.id\"\n        :esteEspacio=\"espacio\"\n        @meElimine=\"eliminarEspacioCache(espacio.id)\"\n      />\n    </div>\n\n    <div\n      class=\"barraSeccion\"\n      @click=\"mostrandoOrganizadorSemanal = !mostrandoOrganizadorSemanal\"\n    >\n      <img\n        src=\"@/assets/iconos/angleDown.svg\"\n        style=\"height: 20px\"\n        alt=\"Abrir\"\n        :style=\"[\n          {\n            transform: mostrandoOrganizadorSemanal ? 'none' : 'rotate(-90deg)',\n          },\n        ]\"\n      />\n      Calendario semanal\n    </div>\n\n    <organizador-horario-semanal\n      v-show=\"mostrandoOrganizadorSemanal\"\n      ref=\"organizadorSemanal\"\n      :yo=\"yo\"\n    />\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport Espacio from \"./Espacio.vue\";\nimport Loading from \"./utilidades/Loading.vue\";\nimport OrganizadorHorarioSemanal from \"./calendario/OrganizadorHorarioSemanal.vue\";\nimport { fragmentoEspacio } from \"./frags\";\n\nconst QUERY_ESPACIOS = gql`\n  query {\n    todosEspacios {\n      ...fragEspacio\n    }\n  }\n  ${fragmentoEspacio}\n`;\n\nexport default {\n  components: { Espacio, Loading, OrganizadorHorarioSemanal },\n  props: {\n    yo: Object,\n  },\n  apollo: {\n    todosEspacios: {\n      query: QUERY_ESPACIOS,\n    },\n  },\n  name: \"Espacios\",\n  data() {\n    return {\n      todosEspacios: [],\n\n      verTodos: false,\n      creandoEspacio: false,\n\n      mostrandoEspacios: false,\n      mostrandoOrganizadorSemanal: false,\n\n      mostrandoConfiguracion: false,\n      tipoMostrarEspacios: \"mios\",\n    };\n  },\n  methods: {\n    crearNuevoEspacio() {\n      this.creandoEspacio = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($info: InputCrearEspacio) {\n              crearEspacio(info: $info) {\n                ...fragEspacio\n              }\n            }\n            ${fragmentoEspacio}\n          `,\n          variables: {\n            info: {\n              idAdministrador: this.usuario.id,\n            },\n          },\n        })\n        .then(({ data: { crearEspacio } }) => {\n          const store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_ESPACIOS,\n          });\n          const nuevoCache = JSON.parse(JSON.stringify(cache));\n\n          const indexE = nuevoCache.todosEspacios.findIndex(\n            (e) => e.id === crearEspacio.id\n          );\n          if (indexE === -1) {\n            nuevoCache.todosEspacios.push(crearEspacio);\n            store.writeQuery({\n              query: QUERY_ESPACIOS,\n              data: nuevoCache,\n            });\n          } else {\n            console.log(`El espacio ya estaba en caché`);\n          }\n          this.creandoEspacio = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.creandoEspacio = false;\n        });\n    },\n    eliminarEspacioCache(idEspacio) {\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        query: QUERY_ESPACIOS,\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      const indexE = nuevoCache.todosEspacios.findIndex(\n        (e) => e.id === idEspacio\n      );\n      if (indexE > -1) {\n        nuevoCache.todosEspacios.splice(indexE, 1);\n        store.writeQuery({\n          query: QUERY_ESPACIOS,\n          data: nuevoCache,\n        });\n      }\n    },\n    manejarCreacionEventos(eventos) {\n      console.log(\n        `Manejando la repeticion de los eventos de un espacio con id ${eventos[0].idParent}`\n      );\n    },\n    handleCambioFechaEvento() {\n      console.log(`Handling`);\n    },\n  },\n  computed: {\n    usuarioProfe() {\n      if (!this.usuarioLogeado) return false;\n\n      return this.usuario.permisos.includes(\"maestraVida-profesor\");\n    },\n    espaciosVisibles() {\n      if (this.tipoMostrarEspacios==='todos')\n        return this.espaciosUsuario.concat(this.espaciosNoUsuario);\n      return this.espaciosUsuario;\n    },\n    espaciosUsuario() {\n      if (!this.usuarioLogeado) return [];\n      return this.todosEspacios.filter(\n        (e) => e.idAdministrador === this.usuario.id\n      );\n    },\n    espaciosNoUsuario() {\n      if (!this.usuarioLogeado) return this.todosEspacios;\n      return this.todosEspacios.filter(\n        (e) => e.idAdministrador != this.usuario.id\n      );\n    },\n  },\n  watch: {\n    mostrandoOrganizadorSemanal(mostrando) {\n      if (mostrando) {\n        this.$refs.organizadorSemanal.$apollo.queries.espacios.refetch();\n      }\n    },\n  },\n  beforeRouteLeave(to, from, next) {\n    if (this.$refs.organizadorSemanal.checkVentanaBloque()) {\n      console.log(\"Había bloque en ventana\");\n      return;\n    }\n\n    next();\n  },\n};\n</script>\n\n<style scoped>\n#barraControles {\n  display: flex;\n  flex-direction: row-reverse;\n  padding: 10px 20px;\n}\n\n.botonControl {\n  width: 20px;\n  height: 20px;\n}\n#listaEspacios {\n  margin: 20px;\n  width: min(600px, 95vw);\n  margin-bottom: 100px;\n}\n.espacio {\n  margin: 10px 0px;\n}\n.espacio:hover {\n  background-color: var(--grisHover);\n}\n</style>"]}]}