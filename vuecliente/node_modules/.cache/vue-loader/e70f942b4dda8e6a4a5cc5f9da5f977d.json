{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/visorNodoConocimiento/VisorNodoConocimiento.vue?vue&type=style&index=0&id=3ed8fce4&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/visorNodoConocimiento/VisorNodoConocimiento.vue","mtime":1644587546126},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnZpc29yTm9kb0Nvbm9jaW1pZW50byB7CiAgZm9udC1mYW1pbHk6IFNhbHNhLCBjdXJzaXZlOwp9CiN6b25hVGl0dWxvIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgcGFkZGluZzogMjVweCAwcHg7Cn0KCiNpY29ub05vZG8gewogIHdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKfQojaWNvbm9Ob2RvIGltZyB7CiAgaGVpZ2h0OiAxMDAlOwp9Cgojem9uYVNlbGVjdG9yZXNDb250ZW5pZG8gewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQojem9uYVNlbGVjdG9yZXNDb250ZW5pZG8gLmJvdG9uIHsKICBoZWlnaHQ6IDM1cHg7CiAgd2lkdGg6IDM1cHg7CiAgbWFyZ2luOiAwcHggMjBweDsKICBwYWRkaW5nOiA1cHg7Cn0KCiN6b25hVGl0dWxvU2VjY2lvbiB7CiAgcGFkZGluZzogMjVweCAwcHg7Cn0KI25vbWJyZVNlY2Npb25TZWxlY2Npb25hZGEgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tcGFsZXRhTWFpbik7CiAgd2lkdGg6IG1pbigzMDBweCwgNTB2dyk7CiAgbWFyZ2luOiAwcHggYXV0bzsKfQojY29udGVuZWRvclNlbGVjdG9yZXNTZWNjaW9uIHsKICB3aWR0aDogbWluKDQwMHB4LCA5MHZ3KTsKICBtYXJnaW46IDBweCBhdXRvOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBhbGV0YU1haW4pOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5zZWxlY3RvclNlY2Npb24gewogIHBhZGRpbmc6IDE1cHggMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDE4cHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGN1cnNvcjogcG9pbnRlcjsKfQoubm9tYnJlU2VjY2lvblNlbGVjdG9yIHsKICBtYXJnaW46IDBweCBhdXRvOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICB3aWR0aDogODAlOwogIG1hcmdpbi1sZWZ0OiAxMCU7Cn0KLnNlbGVjdG9yU2VjY2lvbiAuYm90b24gewogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogMTBweDsKfQoKI2Rlc2NyaXBjaW9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wYWxldGFNYWluKTsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIHBhZGRpbmc6IDIwcHg7CiAgd2lkdGg6IG1pbigzMDBweCwgOTB2dyk7CiAgbWFyZ2luOiAwcHggYXV0bzsKfQoKI3pvbmFFeHBlcnRvcyB7CiAgd2lkdGg6IG1pbig4MDBweCwgOTB2dyk7CiAgbWFyZ2luOiAwcHggYXV0bzsKfQojbGlzdGFFeHBlcnRvcyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGZsZXgtd3JhcDogd3JhcDsKICBtYXgtaGVpZ2h0OiA4MHZoOwogIG92ZXJmbG93LXk6IHNjcm9sbDsKfQo="},{"version":3,"sources":["VisorNodoConocimiento.vue"],"names":[],"mappingsnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VisorNodoConocimiento.vue","sourceRoot":"src/components/visorNodoConocimiento","sourcesContent":["<template>\n  <div class=\"visorNodoConocimiento\">\n    <loading texto=\"\" v-show=\"$apollo.queries.esteNodo.loading\" />\n    <div id=\"zonaTitulo\" v-show=\"!$apollo.queries.esteNodo.loading\">\n      <div id=\"iconoNodo\">\n        <img src=\"@/assets/iconos/lightbulb.svg\" alt=\"Idea\" />\n      </div>\n      <div id=\"zonaNombre\">\n        <div id=\"nombre\" v-show=\"!editandoNombre\" @click=\"iniciarEdicionNombre\">\n          {{ esteNodo.nombre }}\n        </div>\n        <input\n          @keypress.enter.prevent=\"guardarNuevoNombre\"\n          ref=\"inputNuevoNombre\"          \n          style=\"width: 250px\"\n          @blur=\"guardarNuevoNombre\"\n          v-show=\"editandoNombre\"\n          type=\"text\"\n          class=\"inputNombreCosa\"\n          id=\"inputNuevoNombre\"\n        />\n      </div>\n    </div>\n\n    <div\n      id=\"zonaSelectoresContenido\"\n      v-show=\"!$apollo.queries.esteNodo.loading\"\n    >\n      <div\n        class=\"boton selectorContenido selector\"\n        :class=\"{ activo: mostrandoContenido === 'estudiar' }\"\n        :title=\"mostrandoContenido != 'estudiar' ? 'Mostrar contenido' : ''\"\n        @click=\"mostrandoContenido = 'estudiar'\"\n      >\n        <img src=\"@/assets/iconos/readme.svg\" alt=\"Readme\" />\n      </div>\n      <div\n        class=\"boton selectorContenido selector\"\n        :class=\"{ activo: mostrandoContenido === 'expertos' }\"\n        :title=\"mostrandoContenido != 'expertos' ? 'Mostrar expertos' : ''\"\n        @click=\"mostrandoContenido = 'expertos'\"\n      >\n        <img src=\"@/assets/iconos/teacher.svg\" alt=\"Teacher\" />\n      </div>\n      <div\n        class=\"boton selectorContenido selector\"\n        :class=\"{ activo: mostrandoContenido === 'foros' }\"\n        :title=\"mostrandoContenido != 'foros' ? 'Mostrar foros' : ''\"\n        @click=\"mostrandoContenido = 'foros'\"\n      >\n        <img src=\"@/assets/iconos/comments.svg\" alt=\"Readme\" />\n      </div>\n    </div>\n\n    <div id=\"zonaContenidos\" v-show=\"!$apollo.queries.esteNodo.loading\">\n      <div id=\"zonaSecciones\" v-show=\"mostrandoContenido === 'estudiar'\">\n        <div id=\"zonaTituloSeccion\">\n          <div\n            id=\"nombreSeccionSeleccionada\"\n            @click=\"mostrandoMenuSecciones = true\"\n          >\n            {{\n              seccionSeleccionada ? seccionSeleccionada.nombre : \"Descripción\"\n            }}\n          </div>\n        </div>\n\n        <div\n          id=\"contenedorSelectoresSeccion\"\n          v-show=\"mostrandoMenuSecciones\"\n          @click=\"mostrandoMenuSecciones = false\"\n        >\n          <div class=\"contenedorControles\">\n            <div\n              class=\"boton\"\n              title=\"Crear nueva sección\"\n              v-if=\"usuarioExperto\"\n              v-show=\"!creandoNuevaSeccion\"\n              @click.stop=\"crearNuevaSeccion\"\n            >\n              <img src=\"@/assets/iconos/plusCircle.svg\" alt=\"Plus\" />\n            </div>\n            <loading text=\"\" v-show=\"creandoNuevaSeccion\" />\n          </div>\n          <div class=\"selectorSeccion\" @click=\"mostrandoSeccion = null\">\n            Descripcion\n          </div>\n          <div\n            class=\"selectorSeccion\"\n            @click=\"mostrandoSeccion = seccion.id\"\n            v-for=\"seccion of esteNodo.secciones\"\n            :key=\"seccion.id\"\n          >\n            <div class=\"nombreSeccionSelector\">\n              {{ seccion.nombre }}\n            </div>\n            <div\n              class=\"boton\"\n              title=\"Eliminar\"\n              v-show=\"usuarioExperto\"\n              @click.stop=\"eliminarSeccion(seccion.id)\"\n            >\n              <img src=\"@/assets/iconos/trash.svg\" alt=\"Eliminar\" />\n            </div>\n          </div>\n        </div>\n        <div\n          id=\"zonaDescripcion\"\n          v-show=\"!seccionSeleccionada && !mostrandoMenuSecciones\"\n        >\n          <div id=\"descripcion\">\n            {{ esteNodo.descripcion }}\n          </div>\n        </div>\n        <seccion-nodo-conocimiento\n          :key=\"seccionSeleccionada.id\"\n          v-show=\"seccionSeleccionada && !mostrandoMenuSecciones\"\n          v-if=\"esteNodo.id && seccionSeleccionada\"\n          :idNodo=\"esteNodo.id\"\n          :estaSeccion=\"seccionSeleccionada\"\n          :usuarioExperto=\"usuarioExperto\"\n          @subiArchivo=\"addArchivoSeccionCache($event, seccionSeleccionada.id)\"\n          @archivoEliminado=\"\n            deleteArchivoSeccionCache($event, seccionSeleccionada.id)\n          \"\n          @tengoNuevoPrimario=\"\n            setPrimarioSeccionCache($event, seccionSeleccionada.id)\n          \"\n        />\n      </div>\n\n      <div id=\"zonaExpertos\" v-show=\"mostrandoContenido === 'expertos'\">\n        <div class=\"contenedorControles\">\n          <div\n            class=\"boton\"\n            v-show=\"\n              !enviandoQueryExpertos &&\n              !idExpertoSeleccionado &&\n              !usuarioExperto\n            \"\n            :title=\"\n              esteNodo.expertos.length < 1\n                ? 'Asumir'\n                : 'Quiero aportar como experto en este tema'\n            \"\n            @click=\"intentarEntrarExpertos(usuario.id)\"\n          >\n            <img src=\"@/assets/iconos/mas.svg\" alt=\"Mas\" />\n          </div>\n          <div\n            class=\"boton\"\n            v-show=\"\n              !enviandoQueryExpertos &&\n              idExpertoSeleccionado &&\n              ((esteNodo.posiblesExpertos.includes(idExpertoSeleccionado) &&\n                usuarioExperto) ||\n                usuarioSuperadministrador ||\n                usuarioAdministradorAtlas)\n            \"\n            title=\"Aceptar como experto\"\n            @click=\"intentarEntrarExpertos(idExpertoSeleccionado)\"\n          >\n            <img src=\"@/assets/iconos/handshake.svg\" alt=\"Handshake\" />\n          </div>\n          <div\n            class=\"boton\"\n            v-show=\"\n              !enviandoQueryExpertos &&\n              !idExpertoSeleccionado &&\n              (usuarioExperto ||\n                esteNodo.posiblesExpertos.includes(idExpertoSeleccionado))\n            \"\n            title=\"abandonar\"\n            @click=\"abandonarListaExpertos(usuario.id)\"\n          >\n            <img src=\"@/assets/iconos/minus.svg\" alt=\"Menos\" />\n          </div>\n          <loading texto=\"\" v-show=\"enviandoQueryExpertos\" />\n        </div>\n        <div id=\"listaExpertos\" @click.self=\"idExpertoSeleccionado = null\">\n          <icono-persona-autonomo\n            texto=\"\"\n            v-for=\"idExperto of esteNodo.expertos.concat(\n              esteNodo.posiblesExpertos\n            )\"\n            :seleccionado=\"idExpertoSeleccionado === idExperto\"\n            :key=\"idExperto\"\n            factorEscala=\"0.8\"\n            :style=\"{\n              opacity: esteNodo.posiblesExpertos.includes(idExperto) ? 0.5 : 1,\n            }\"\n            :idPersona=\"idExperto\"\n            @click.native=\"idExpertoSeleccionado = idExperto\"\n          />\n        </div>\n      </div>\n\n      <div\n        id=\"zonaForos\"\n        ref=\"zonaForos\"\n        v-show=\"mostrandoContenido == 'foros'\"\n      >\n        <div class=\"nombreForo\" v-if=\"usuarioExperto\">Foro expertos</div>\n        <foro\n          :parent=\"infoAsParent\"\n          v-if=\"usuarioExperto\"\n          :idForo=\"esteNodo.idForoExpertos\"\n        />\n        <br v-if=\"usuarioExperto\" />\n        <div class=\"nombreForo\">Foro público</div>\n        <foro :parent=\"infoAsParent\" :idForo=\"esteNodo.idForoPublico\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport SeccionNodoConocimiento from \"./SeccionNodoConocimiento.vue\";\nimport Loading from \"../utilidades/Loading.vue\";\nimport IconoPersonaAutonomo from \"../usuario/IconoPersonaAutonomo.vue\";\nimport Foro from \"../Foro.vue\";\nimport { charProhibidosNombreCosa } from '../configs';\n\nconst QUERY_NODO = gql`\n  query ($idNodo: ID!) {\n    nodo(idNodo: $idNodo) {\n      nombre\n      id\n      descripcion\n      clases {\n        id\n        nombre\n        idExperto\n        descripcion\n        interesados\n      }\n      keywords\n      expertos\n      posiblesExpertos\n      clases {\n        id\n      }\n      idForoPublico\n      idForoExpertos\n      secciones {\n        id\n        nombre\n        modo\n        archivos {\n          nombre\n          primario\n        }\n        tipoPrimario\n      }\n      vinculos {\n        idRef\n        rol\n        tipo\n      }\n    }\n  }\n`;\n\nexport default {\n  components: { SeccionNodoConocimiento, Loading, IconoPersonaAutonomo, Foro },\n  name: \"VisorNodoConocimiento\",\n  apollo: {\n    esteNodo: {\n      query: QUERY_NODO,\n      variables() {\n        return {\n          idNodo: this.$route.params.idNodo,\n        };\n      },\n      update({ nodo }) {\n        return nodo;\n      },\n    },\n  },\n  data() {\n    return {\n      esteNodo: {\n        expertos: [],\n        posiblesExpertos: [],\n      },\n      mostrandoContenido: \"estudiar\",\n      mostrandoSeccion: null,\n      mostrandoMenuSecciones: false,\n      creandoNuevaSeccion: false,\n      idExpertoSeleccionado: null,\n      enviandoQueryExpertos: false,\n\n      editandoNombre:false,\n      enviandoNuevoNombre:false,\n    };\n  },\n  methods: {\n    deleteArchivoSeccionCache(nombreArchivo, idSeccion) {\n      const store = this.$apollo.provider.defaultClient;\n\n      const cache = store.readQuery({\n        query: QUERY_NODO,\n        variables: {\n          idNodo: this.esteNodo.id,\n        },\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n\n      var laSeccion = nuevoCache.nodo.secciones.find((s) => s.id == idSeccion);\n      if (!laSeccion) {\n        console.log(`Seccion no encontrada`);\n        return;\n      }\n\n      var indexA = laSeccion.archivos.findIndex(\n        (a) => a.nombre === nombreArchivo\n      );\n      if (indexA > -1) {\n        laSeccion.archivos.splice(indexA, 1);\n        store.writeQuery({\n          query: QUERY_NODO,\n          variables: {\n            idNodo: this.esteNodo.id,\n          },\n          data: nuevoCache,\n        });\n      } else {\n        console.log(`Archivo no encontrado`);\n      }\n    },\n    addArchivoSeccionCache(infoArchivo, idSeccion) {\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        query: QUERY_NODO,\n        variables: {\n          idNodo: this.esteNodo.id,\n        },\n      });\n\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      var laSeccion = nuevoCache.nodo.secciones.find((s) => s.id == idSeccion);\n      laSeccion.archivos.push(infoArchivo);\n      store.writeQuery({\n        query: QUERY_NODO,\n        variables: {\n          idNodo: this.esteNodo.id,\n        },\n        data: nuevoCache,\n      });\n    },\n    eliminarSeccion(idSeccion) {\n      if (!this.usuarioExperto) {\n        return;\n      }\n      if (\n        !confirm(\n          \"Eliminando esta sección con todos sus contenidos. ¿Continuar?\"\n        )\n      ) {\n        return;\n      }\n      console.log(`Enviando mutación de eliminar seccion ${idSeccion}`);\n      const dis = this;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!, $idSeccion: ID!) {\n              eliminarSeccionNodoConocimiento(\n                idNodo: $idNodo\n                idSeccion: $idSeccion\n              )\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n            idSeccion,\n          },\n        })\n        .then(({ data: { eliminarSeccionNodoConocimiento } }) => {\n          console.log(`resultado: ${eliminarSeccionNodoConocimiento}`);\n          if (eliminarSeccionNodoConocimiento) {\n            let store = dis.$apollo.provider.defaultClient;\n            const cache = store.readQuery({\n              query: QUERY_NODO,\n              variables: { idNodo: dis.esteNodo.id },\n            });\n            var nuevoCache = JSON.parse(JSON.stringify(cache));\n\n            const indexS = nuevoCache.nodo.secciones.findIndex(\n              (s) => s.id == idSeccion\n            );\n            if (indexS > -1) {\n              nuevoCache.nodo.secciones.splice(indexS, 1);\n              store.writeQuery({\n                query: QUERY_NODO,\n                variables: {\n                  idNodo: dis.esteNodo.id,\n                },\n                data: nuevoCache,\n              });\n            } else {\n              console.log(`Seccion no encontrada`);\n            }\n          }\n        })\n        .catch((error) => {\n          console.log(`Error: E: ${error}`);\n        });\n    },\n    crearNuevaSeccion() {\n      if (!this.usuarioExperto) {\n        return;\n      }\n      this.creandoNuevaSeccion = true;\n      const dis = this;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!) {\n              crearNuevaSeccionNodoConocimiento(idNodo: $idNodo) {\n                id\n                nombre\n                modo\n                archivos {\n                  nombre\n                  primario\n                }\n                tipoPrimario\n              }\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n          },\n        })\n        .then(({ data: { crearNuevaSeccionNodoConocimiento } }) => {\n          let store = dis.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_NODO,\n            variables: { idNodo: dis.esteNodo.id },\n          });\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n          nuevoCache.nodo.secciones.push(crearNuevaSeccionNodoConocimiento);\n\n          store.writeQuery({\n            query: QUERY_NODO,\n            variables: { idNodo: dis.esteNodo.id },\n            data: nuevoCache,\n          });\n\n          this.creandoNuevaSeccion = false;\n        })\n        .catch((error) => {\n          console.log(`Error. E: ${error}`);\n          this.creandoNuevaSeccion = false;\n        });\n    },\n    setPrimarioSeccionCache(nombreNuevoPrimario, idSeccion) {\n      const store = this.$apollo.provider.defaultClient;\n\n      const cache = store.readQuery({\n        query: QUERY_NODO,\n        variables: {\n          idNodo: this.esteNodo.id,\n        },\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n\n      var laSeccion = nuevoCache.nodo.secciones.find((s) => s.id == idSeccion);\n      if (!laSeccion) {\n        console.log(`Seccion no encontrada`);\n        return;\n      }\n\n      var indexA = laSeccion.archivos.findIndex(\n        (a) => a.nombre === nombreNuevoPrimario\n      );\n\n      laSeccion.archivos.forEach((a) => (a.primario = false));\n      laSeccion.archivos[indexA].primario = true;\n\n      store.writeQuery({\n        query: QUERY_NODO,\n        variables: {\n          idNodo: this.esteNodo.id,\n        },\n        data: nuevoCache,\n      });\n    },\n    intentarEntrarExpertos(idCandidato) {\n      console.log(\n        `enviando id ${this.$store.state.usuario.id} para entrar a expertos del nodo con id ${this.esteNodo.id}`\n      );\n      this.enviandoQueryExpertos = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!, $idUsuario: ID!) {\n              addExpertoNodo(idNodo: $idNodo, idUsuario: $idUsuario) {\n                id\n                expertos\n                posiblesExpertos\n              }\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n            idUsuario: idCandidato,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryExpertos = false;\n        })\n        .catch((error) => {\n          this.enviandoQueryExpertos = false;\n          console.log(\"error: \" + error);\n        });\n    },\n    abandonarListaExpertos(idCandidato) {\n      console.log(`Abandonando la responsabilidad en este nodo`);\n      if (\n        !this.usuarioExperto &&\n        !this.esteNodo.posiblesExpertos.includes(this.usuario.id)\n      ) {\n        return;\n      }\n      this.enviandoQueryExpertos = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!, $idUsuario: ID!) {\n              removeExpertoNodo(idNodo: $idNodo, idUsuario: $idUsuario) {\n                id\n                expertos\n                posiblesExpertos\n              }\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n            idUsuario: idCandidato,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryExpertos = false;\n        })\n        .catch((error) => {\n          this.enviandoQueryExpertos = false;\n          console.log(\"error: \" + error);\n        });\n    },\n    iniciarEdicionNombre() {\n      if(!this.usuarioExperto && !this.usuarioAdministradorAtlas && !this.usuarioSuperadministrador){\n        return;\n      }\n      this.$refs.inputNuevoNombre.value = this.esteNodo.nombre;\n      this.editandoNombre = true;\n    },\n    guardarNuevoNombre() {      \n      var nuevoNombre=this.$refs.inputNuevoNombre.value.trim();\n      if (nuevoNombre == this.esteNodo.nombre) {\n        this.editandoNombre = false;\n        return;\n      }\n\n      if (nuevoNombre.length < 1) {\n        return;\n      }\n      if (charProhibidosNombreCosa.test(nuevoNombre)) {\n        console.log(`Caracteres ilegales`);\n        return;\n      }\n      console.log(`guardando nuevo nombre`);\n      this.enviandoNuevoNombre = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idNodo: ID!, $nuevoNombre: String!) {\n              editarNombreNodo(idNodo: $idNodo, nuevoNombre: $nuevoNombre) {\n                modificados {\n                  id\n                  nombre\n                }\n              }\n            }\n          `,\n          variables: {\n            idNodo: this.esteNodo.id,\n            nuevoNombre: nuevoNombre,\n          },\n        })\n        .then((data) => {\n          console.log(`fin de la mutacion. Data: ${JSON.stringify(data)} `);\n          this.enviandoNuevoNombre = false;\n          this.editandoNombre = false;\n        })\n        .catch((error) => {\n          this.enviandoNuevoNombre = false;\n          console.log(`Error. E :${error}`);\n        });\n    },\n  },\n  computed: {\n    seccionSeleccionada() {\n      if (!this.mostrandoSeccion) return null;\n      return this.esteNodo.secciones.find(\n        (s) => s.id === this.mostrandoSeccion\n      );\n    },\n    usuarioExperto: function () {\n      if (!this.esteNodo.expertos || !this.usuarioLogeado) return false;\n\n      if (this.esteNodo.expertos.includes(this.usuario.id)) {\n        return true;\n      }\n      return false;\n    },\n    usuarioAdministradorAtlas: function () {\n      if (!this.$store.state.usuario.permisos) return false;\n      return this.$store.state.usuario.permisos.includes(\"atlasAdminstrador\")\n        ? true\n        : false;\n    },\n    infoAsParent() {\n      return {\n        id: this.esteNodo.id,\n        tipo: \"nodoConocimiento\",\n        nombre: this.esteNodo.nombre,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.visorNodoConocimiento {\n  font-family: Salsa, cursive;\n}\n#zonaTitulo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 25px 0px;\n}\n\n#iconoNodo {\n  width: 20px;\n  height: 20px;\n}\n#iconoNodo img {\n  height: 100%;\n}\n\n#zonaSelectoresContenido {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#zonaSelectoresContenido .boton {\n  height: 35px;\n  width: 35px;\n  margin: 0px 20px;\n  padding: 5px;\n}\n\n#zonaTituloSeccion {\n  padding: 25px 0px;\n}\n#nombreSeccionSeleccionada {\n  text-align: center;\n  border-bottom: 2px solid var(--paletaMain);\n  width: min(300px, 50vw);\n  margin: 0px auto;\n}\n#contenedorSelectoresSeccion {\n  width: min(400px, 90vw);\n  margin: 0px auto;\n  background-color: var(--paletaMain);\n  border-radius: 10px;\n  position: relative;\n}\n.selectorSeccion {\n  padding: 15px 0px;\n  text-align: center;\n  font-size: 18px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n}\n.nombreSeccionSelector {\n  margin: 0px auto;\n  text-align: center;\n  width: 80%;\n  margin-left: 10%;\n}\n.selectorSeccion .boton {\n  margin-left: auto;\n  margin-right: 10px;\n}\n\n#descripcion {\n  background-color: var(--paletaMain);\n  border-radius: 10px;\n  padding: 20px;\n  width: min(300px, 90vw);\n  margin: 0px auto;\n}\n\n#zonaExpertos {\n  width: min(800px, 90vw);\n  margin: 0px auto;\n}\n#listaExpertos {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-height: 80vh;\n  overflow-y: scroll;\n}\n</style>\n\n\n"]}]}