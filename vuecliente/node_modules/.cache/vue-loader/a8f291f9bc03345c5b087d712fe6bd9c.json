{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/ColeccionNodosConocimiento.vue","mtime":1676563818640},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBncWwgZnJvbSAiZ3JhcGhxbC10YWciOwppbXBvcnQgSWNvbm9Ob2RvQ29ub2NpbWllbnRvIGZyb20gIi4vSWNvbm9Ob2RvQ29ub2NpbWllbnRvLnZ1ZSI7CmltcG9ydCBMb2FkaW5nIGZyb20gIi4uL3V0aWxpZGFkZXMvTG9hZGluZy52dWUiOwppbXBvcnQgeyBjaGFyUHJvaGliaWRvc05vbWJyZUNvc2EgfSBmcm9tICIuLi9jb25maWdzIjsKCmNvbnN0IFFVRVJZX05PRE9TX0NPTEVDQ0lPTiA9IGdxbGAKICBxdWVyeSAoJGlkc05vZG9zOiBbSUQhXSEpIHsKICAgIG5vZG9zQ29ub2NpbWllbnRvQnlJZHMoaWRzTm9kb3M6ICRpZHNOb2RvcykgewogICAgICBpZAogICAgICBub21icmUKICAgICAgZGVzY3JpcGNpb24KICAgICAgdGlwb05vZG8KICAgIH0KICB9CmA7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNvbGVjY2lvbk5vZG9zQ29ub2NpbWllbnRvIiwKICBjb21wb25lbnRzOiB7IEljb25vTm9kb0Nvbm9jaW1pZW50bywgTG9hZGluZyB9LAogIGFwb2xsbzogewogICAgbm9kb3NDb25vY2ltaWVudG86IHsKICAgICAgcXVlcnk6IFFVRVJZX05PRE9TX0NPTEVDQ0lPTiwKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZHNOb2RvczogdGhpcy5lc3RhQ29sZWNjaW9uLmlkc05vZG9zLAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNraXAoKSB7CiAgICAgICAgcmV0dXJuICF0aGlzLmVzdGFDb2xlY2Npb24/Lmlkc05vZG9zLmxlbmd0aCA+IDA7CiAgICAgIH0sCiAgICAgIHVwZGF0ZSh7IG5vZG9zQ29ub2NpbWllbnRvQnlJZHMgfSkgewogICAgICAgIHJldHVybiBub2Rvc0Nvbm9jaW1pZW50b0J5SWRzOwogICAgICB9LAogICAgfSwKICAgIHByb2dyZXNvTm9kb3M6IHsKICAgICAgcXVlcnk6IGdxbGAKICAgICAgICBxdWVyeSAoJGlkc05vZG9zOiBbSUQhXSEpIHsKICAgICAgICAgIG5vZG9zQ29ub2NpbWllbnRvQnlJZHMoaWRzTm9kb3M6ICRpZHNOb2RvcykgewogICAgICAgICAgICBpZAogICAgICAgICAgICBwb3JjZW50YWplQ29tcGxldGFkbwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgYCwKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZHNOb2RvczogdGhpcy5lc3RhQ29sZWNjaW9uLmlkc05vZG9zLAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNraXAoKSB7CiAgICAgICAgcmV0dXJuICF0aGlzLm5vZG9zQ29ub2NpbWllbnRvPy5sZW5ndGggPiAwOwogICAgICB9LAogICAgICB1cGRhdGUoeyBub2Rvc0Nvbm9jaW1pZW50b0J5SWRzIH0pIHsKICAgICAgICByZXR1cm4gbm9kb3NDb25vY2ltaWVudG9CeUlkczsKICAgICAgfSwKICAgIH0sCiAgICBwcm9ncmVzb0NvbGVjY2lvbjogewogICAgICBxdWVyeTogZ3FsYAogICAgICAgIHF1ZXJ5ICgkaWRDb2xlY2Npb246IElEISwgJGlkVXN1YXJpbzogSUQhKSB7CiAgICAgICAgICBjb2xlY2Npb25Ob2Rvc0Nvbm9jaW1pZW50bygKICAgICAgICAgICAgaWRDb2xlY2Npb246ICRpZENvbGVjY2lvbgogICAgICAgICAgICBpZFVzdWFyaW86ICRpZFVzdWFyaW8KICAgICAgICAgICkgewogICAgICAgICAgICBpZAogICAgICAgICAgICBwcm9ncmVzbwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgYCwKICAgICAgdmFyaWFibGVzKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZENvbGVjY2lvbjogdGhpcy5lc3RhQ29sZWNjaW9uLmlkLAogICAgICAgICAgaWRVc3VhcmlvOiB0aGlzLnlvLmlkLAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNraXAoKSB7CiAgICAgICAgcmV0dXJuICF0aGlzLnlvPy5pZCB8fCAhdGhpcy5lc3RhQ29sZWNjaW9uPy5pZDsKICAgICAgfSwKICAgICAgdXBkYXRlKHsgY29sZWNjaW9uTm9kb3NDb25vY2ltaWVudG8gfSkgewogICAgICAgIHJldHVybiBjb2xlY2Npb25Ob2Rvc0Nvbm9jaW1pZW50by5wcm9ncmVzbzsKICAgICAgfSwKICAgIH0sCiAgfSwKICBwcm9wczogewogICAgZXN0YUNvbGVjY2lvbjogT2JqZWN0LAogICAgeW86IE9iamVjdCwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZE5vZG9TZWxlY2Npb25hZG86IG51bGwsCiAgICAgIGlkTm9kb01lbnVDeDogbnVsbCwKICAgICAgaWROb2RvU2llbmRvUmVtb3ZpZG86bnVsbCwKICAgICAgbm9kb3NDb25vY2ltaWVudG86IFtdLAogICAgICBwcm9ncmVzb05vZG9zOiBbXSwKICAgICAgcHJvZ3Jlc29Db2xlY2Npb246IG51bGwsCgogICAgICBlZGl0YW5kb1RpdHVsbzogZmFsc2UsCiAgICAgIGd1YXJkYW5kb051ZXZvVGl0dWxvOiBmYWxzZSwKCiAgICAgIG1vc3RyYXJQb3JjZW50YWplc05vZG9zOiBmYWxzZSwKCiAgICAgIG9wY2lvbmVzTWVudUN4Tm9kb3M6IFsKICAgICAgICB7CiAgICAgICAgICB0ZXh0bzogIlJlbW92ZXIiLAogICAgICAgICAgYWNjaW9uOiAicmVtb3Zlcm1lIiwKICAgICAgICB9LAogICAgICBdLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaWNpYXJFZGljaW9uVGl0dWxvKCkgewogICAgICB0aGlzLiRyZWZzLmlucHV0TnVldm9UaXR1bG8udmFsdWUgPSB0aGlzLmVzdGFDb2xlY2Npb24udGl0dWxvOwogICAgICB0aGlzLmVkaXRhbmRvVGl0dWxvID0gdHJ1ZTsKICAgIH0sCiAgICBndWFyZGFyTnVldm9UaXR1bG8oKSB7CiAgICAgIHZhciBudWV2b05vbWJyZSA9IHRoaXMuJHJlZnMuaW5wdXROdWV2b1RpdHVsby52YWx1ZTsKICAgICAgY29uc29sZS5sb2coYHNldGluZyBub21icmUgZGUgY29sZWNjaW9uIGNvbiB2YWx1ZTogJHtudWV2b05vbWJyZX1gKTsKICAgICAgaWYgKGNoYXJQcm9oaWJpZG9zTm9tYnJlQ29zYS50ZXN0KG51ZXZvTm9tYnJlKSkgewogICAgICAgIGFsZXJ0KCLCoUVsIG5vbWJyZSBjb250ZW7DrWEgY2FyYWN0ZXJlcyBpbGVnYWxlcyEiKTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICB0aGlzLmd1YXJkYW5kb051ZXZvVGl0dWxvID0gdHJ1ZTsKCiAgICAgIHRoaXMuJGFwb2xsbwogICAgICAgIC5tdXRhdGUoewogICAgICAgICAgbXV0YXRpb246IGdxbGAKICAgICAgICAgICAgbXV0YXRpb24gKCRpZENvbGVjY2lvbjogSUQhLCAkbnVldm9Ob21icmU6IFN0cmluZyEpIHsKICAgICAgICAgICAgICBzZXROb21icmVDb2xlY2Npb25Ob2Rvc0F0bGFzQ29ub2NpbWllbnRvVXN1YXJpbygKICAgICAgICAgICAgICAgIGlkQ29sZWNjaW9uOiAkaWRDb2xlY2Npb24KICAgICAgICAgICAgICAgIG51ZXZvTm9tYnJlOiAkbnVldm9Ob21icmUKICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgIGlkCiAgICAgICAgICAgICAgICBhdGxhcyB7CiAgICAgICAgICAgICAgICAgIGNvbGVjY2lvbmVzIHsKICAgICAgICAgICAgICAgICAgICBpZAogICAgICAgICAgICAgICAgICAgIG5vbWJyZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICBgLAogICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgIGlkQ29sZWNjaW9uOiB0aGlzLmVzdGFDb2xlY2Npb24uaWQsCiAgICAgICAgICAgIG51ZXZvTm9tYnJlLAogICAgICAgICAgfSwKICAgICAgICB9KQogICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuZ3VhcmRhbmRvTnVldm9UaXR1bG8gPSBmYWxzZTsKICAgICAgICAgIHRoaXMuZWRpdGFuZG9UaXR1bG8gPSBmYWxzZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJvcn1gKTsKICAgICAgICAgIHRoaXMuZ3VhcmRhbmRvTnVldm9UaXR1bG8gPSBmYWxzZTsKICAgICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVyTm9kbyhpZE5vZG8pIHsKICAgICAgdGhpcy5pZE5vZG9TaWVuZG9SZW1vdmlkbyA9IGlkTm9kbzsKICAgICAgdGhpcy4kYXBvbGxvCiAgICAgICAgLm11dGF0ZSh7CiAgICAgICAgICBtdXRhdGlvbjogZ3FsYAogICAgICAgICAgICBtdXRhdGlvbiAoJGlkQ29sZWNjaW9uOiBJRCEsICRpZE5vZG86IElEISkgewogICAgICAgICAgICAgIHJlbW92ZU5vZG9Db2xlY2Npb25Ob2Rvc0F0bGFzQ29ub2NpbWllbnRvVXN1YXJpbygKICAgICAgICAgICAgICAgIGlkQ29sZWNjaW9uOiAkaWRDb2xlY2Npb24KICAgICAgICAgICAgICAgIGlkTm9kbzogJGlkTm9kbwogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgYCwKICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICBpZENvbGVjY2lvbjogdGhpcy5lc3RhQ29sZWNjaW9uLmlkLAogICAgICAgICAgICBpZE5vZG8sCiAgICAgICAgICB9LAogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy5pZE5vZG9TaWVuZG9SZW1vdmlkbyA9IG51bGw7CiAgICAgICAgICB0aGlzLmlkTm9kb1NlbGVjY2lvbmFkbyA9IG51bGw7CgogICAgICAgICAgY29uc3Qgc3RvcmU9dGhpcy4kYXBvbGxvLnByb3ZpZGVyLmRlZmF1bHRDbGllbnQ7CiAgICAgICAgICBjb25zdCBjYWNoZT1zdG9yZS5yZWFkUXVlcnkoewogICAgICAgICAgICBxdWVyeTogUVVFUllfTk9ET1NfQ09MRUNDSU9OLAogICAgICAgICAgICB2YXJpYWJsZXM6ewogICAgICAgICAgICAgIGlkc05vZG9zOiB0aGlzLmVzdGFDb2xlY2Npb24uaWRzTm9kb3MsCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwoKICAgICAgICAgIGxldCBudWV2b0NhY2hlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoY2FjaGUpKTsKCiAgICAgICAgICBjb25zdCBpbmRleE49bnVldm9DYWNoZS5ub2Rvc0Nvbm9jaW1pZW50b0J5SWRzLmZpbmRJbmRleChuPT5uLmlkPT09aWROb2RvKTsKCiAgICAgICAgICBpZihpbmRleE4+LTEpewogICAgICAgICAgICBudWV2b0NhY2hlLm5vZG9zQ29ub2NpbWllbnRvQnlJZHMuc3BsaWNlKGluZGV4TiwgMSk7CgogICAgICAgICAgICBzdG9yZS53cml0ZVF1ZXJ5KHsKICAgICAgICAgICAgICBxdWVyeTogUVVFUllfTk9ET1NfQ09MRUNDSU9OLAogICAgICAgICAgICAgIHZhcmlhYmxlczp7CiAgICAgICAgICAgICAgICBpZHNOb2RvczogdGhpcy5lc3RhQ29sZWNjaW9uLmlkc05vZG9zLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZGF0YTogbnVldm9DYWNoZQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgICAgZWxzZXsKICAgICAgICAgICAgY29uc29sZS5sb2coYEVsIG5vZG8gbm8gZXN0YWJhIGVuIGxhIGNvbGVjY2nDs24uYCk7CiAgICAgICAgICB9CgoKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJvcn1gKTsKICAgICAgICAgIHRoaXMuaWROb2RvU2llbmRvUmVtb3ZpZG8gPSBudWxsOwogICAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ColeccionNodosConocimiento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"ColeccionNodosConocimiento.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div class=\"coleccionNodosConocimiento\" @click=\"idNodoMenuCx = null\">\n    <div\n      id=\"zonaBarraProgreso\"\n      v-show=\"!$apollo.queries.progresoColeccion.loading\"\n      @mouseenter=\"mostrarPorcentajesNodos = true\"\n      @mouseleave=\"mostrarPorcentajesNodos = false\"\n    >\n      <div id=\"barraProgreso\">\n        <div\n          id=\"barraProgresoVerde\"\n          :style=\"[{ width: progresoColeccion + '%' }]\"\n        ></div>\n      </div>\n\n      <div id=\"numeroProgreso\">{{ progresoColeccion }}%</div>\n    </div>\n\n    <loading v-show=\"$apollo.queries.progresoColeccion.loading\" />\n\n    <div class=\"barraSeccion\" id=\"barraSuperior\">\n      <div\n        id=\"elTitulo\"\n        v-show=\"!editandoTitulo\"\n        @click.stop=\"iniciarEdicionTitulo\"\n      >\n        {{ estaColeccion.titulo }}\n      </div>\n\n      <input\n        :class=\"{ deshabilitado: guardandoNuevoTitulo }\"\n        type=\"text\"\n        id=\"inputNuevoTitulo\"\n        style=\"text-align: center\"\n        ref=\"inputNuevoTitulo\"\n        v-show=\"editandoTitulo\"\n        @keypress.enter=\"guardarNuevoTitulo\"\n      />\n    </div>\n\n    <div class=\"listaNodos\">\n      <icono-nodo-conocimiento\n        v-for=\"nodo of nodosConocimiento\"\n        :key=\"nodo.id\"\n        :esteNodo=\"nodo\"\n        :seleccionado=\"idNodoSeleccionado === nodo.id\"\n        :datosEsteNodo=\"yo.atlas.datosNodos.find((dn) => dn.idNodo === nodo.id)\"\n        :mostrarPorcentajeCompletado=\"mostrarPorcentajesNodos\"\n        :siendoRemovido=\"idNodoSiendoRemovido===nodo.id\"\n        :porcentajeCompletado=\"\n          (progresoNodos.find((info) => info.id === nodo.id) || {})\n            .porcentajeCompletado\n        \"\n        :menuCx=\"idNodoMenuCx === nodo.id\"\n        :opcionesMenuCx=\"opcionesMenuCxNodos\"\n        @contextmenu.native.stop.prevent=\"idNodoMenuCx = nodo.id\"\n        @click.self.stop=\"\n          idNodoSeleccionado = idNodoSeleccionado === nodo.id ? null : nodo.id\n        \"\n        @removerme=\"removerNodo(nodo.id)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport IconoNodoConocimiento from \"./IconoNodoConocimiento.vue\";\nimport Loading from \"../utilidades/Loading.vue\";\nimport { charProhibidosNombreCosa } from \"../configs\";\n\nconst QUERY_NODOS_COLECCION = gql`\n  query ($idsNodos: [ID!]!) {\n    nodosConocimientoByIds(idsNodos: $idsNodos) {\n      id\n      nombre\n      descripcion\n      tipoNodo\n    }\n  }\n`;\n\nexport default {\n  name: \"ColeccionNodosConocimiento\",\n  components: { IconoNodoConocimiento, Loading },\n  apollo: {\n    nodosConocimiento: {\n      query: QUERY_NODOS_COLECCION,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.estaColeccion?.idsNodos.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoNodos: {\n      query: gql`\n        query ($idsNodos: [ID!]!) {\n          nodosConocimientoByIds(idsNodos: $idsNodos) {\n            id\n            porcentajeCompletado\n          }\n        }\n      `,\n      variables() {\n        return {\n          idsNodos: this.estaColeccion.idsNodos,\n        };\n      },\n      skip() {\n        return !this.nodosConocimiento?.length > 0;\n      },\n      update({ nodosConocimientoByIds }) {\n        return nodosConocimientoByIds;\n      },\n    },\n    progresoColeccion: {\n      query: gql`\n        query ($idColeccion: ID!, $idUsuario: ID!) {\n          coleccionNodosConocimiento(\n            idColeccion: $idColeccion\n            idUsuario: $idUsuario\n          ) {\n            id\n            progreso\n          }\n        }\n      `,\n      variables() {\n        return {\n          idColeccion: this.estaColeccion.id,\n          idUsuario: this.yo.id,\n        };\n      },\n      skip() {\n        return !this.yo?.id || !this.estaColeccion?.id;\n      },\n      update({ coleccionNodosConocimiento }) {\n        return coleccionNodosConocimiento.progreso;\n      },\n    },\n  },\n  props: {\n    estaColeccion: Object,\n    yo: Object,\n  },\n  data() {\n    return {\n      idNodoSeleccionado: null,\n      idNodoMenuCx: null,\n      idNodoSiendoRemovido:null,\n      nodosConocimiento: [],\n      progresoNodos: [],\n      progresoColeccion: null,\n\n      editandoTitulo: false,\n      guardandoNuevoTitulo: false,\n\n      mostrarPorcentajesNodos: false,\n\n      opcionesMenuCxNodos: [\n        {\n          texto: \"Remover\",\n          accion: \"removerme\",\n        },\n      ],\n    };\n  },\n  methods: {\n    iniciarEdicionTitulo() {\n      this.$refs.inputNuevoTitulo.value = this.estaColeccion.titulo;\n      this.editandoTitulo = true;\n    },\n    guardarNuevoTitulo() {\n      var nuevoNombre = this.$refs.inputNuevoTitulo.value;\n      console.log(`seting nombre de coleccion con value: ${nuevoNombre}`);\n      if (charProhibidosNombreCosa.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.guardandoNuevoTitulo = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion: this.estaColeccion.id,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.guardandoNuevoTitulo = false;\n          this.editandoTitulo = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.guardandoNuevoTitulo = false;\n        });\n    },\n    removerNodo(idNodo) {\n      this.idNodoSiendoRemovido = idNodo;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $idNodo: ID!) {\n              removeNodoColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                idNodo: $idNodo\n              )\n            }\n          `,\n          variables: {\n            idColeccion: this.estaColeccion.id,\n            idNodo,\n          },\n        })\n        .then(() => {\n          this.idNodoSiendoRemovido = null;\n          this.idNodoSeleccionado = null;\n\n          const store=this.$apollo.provider.defaultClient;\n          const cache=store.readQuery({\n            query: QUERY_NODOS_COLECCION,\n            variables:{\n              idsNodos: this.estaColeccion.idsNodos,\n            }\n          });\n\n          let nuevoCache=JSON.parse(JSON.stringify(cache));\n\n          const indexN=nuevoCache.nodosConocimientoByIds.findIndex(n=>n.id===idNodo);\n\n          if(indexN>-1){\n            nuevoCache.nodosConocimientoByIds.splice(indexN, 1);\n\n            store.writeQuery({\n              query: QUERY_NODOS_COLECCION,\n              variables:{\n                idsNodos: this.estaColeccion.idsNodos,\n              },\n              data: nuevoCache\n            })\n          }\n          else{\n            console.log(`El nodo no estaba en la colección.`);\n          }\n\n\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.idNodoSiendoRemovido = null;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.listaNodos {\n  display: flex;\n  padding: 20px 20px;\n  padding-bottom: 90px;\n  gap: 60px;\n  flex-wrap: wrap;\n}\n\n#barraProgreso {\n  background-color: gray;\n  height: 12px;\n  width: 100%;\n}\n#barraProgresoVerde {\n  background-color: green;\n  height: 100%;\n}\n\n#numeroProgreso {\n  width: 100%;\n  text-align: center;\n}\n\n#barraSuperior {\n  display: flex;\n  justify-content: center;\n}\n</style>"]}]}