{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/Foro.vue?vue&type=style&index=0&id=bfb90dd8&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/Foro.vue","mtime":1643654906480},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm8gewogIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzkgMTU4IDkzKTsKICBtYXJnaW46IDBweCBhdXRvOwp9CiNub21icmVGb3JvIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAyMnB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5iYXJyYVN1cGVyaW9yRm9ybyB7CiAgZGlzcGxheTogZ3JpZDsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxMDBweCAxZnI7Cn0KCiNiUmVncmVzYXJDb252ZXJzYWNpb25lcyB7CiAgcGFkZGluZzogMTVweCA1cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItcmFkaXVzOiA3cHg7CiAgZ3JpZC1jb2x1bW46IDIvMzsKICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjsKICBhbGlnbi1zZWxmOiBjZW50ZXI7CiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgbWFyZ2luOiAxMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmNWEyNWY7Cn0KI2JSZWdyZXNhckNvbnZlcnNhY2lvbmVzOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhjYmE2Owp9CiNjb250cm9sZXNGb3JvIHsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZmxvdzogcm93LXJldmVyc2U7CiAgZ3JpZC1jb2x1bW46IDMvNDsKfQouY29udHJvbGVzRm9ybyB7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmJvdG9uZXNDb250cm9sZXMgewogIHBhZGRpbmc6IDNweCA1cHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5ib3RvbmVzQ29udHJvbGVzOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhjYmE2Owp9Ci56b25hQ29udmVyc2FjaW9uZXMgewogIHBhZGRpbmctbGVmdDogMHB4Owp9Cgouem9uYVNlbGVjdG9yUGFnaW5hIHsKICBkaXNwbGF5OiBmbGV4OwogIHBhZGRpbmc6IDJweCAxMHB4Owp9Ci5zZWxlY3RvclBhZ2luYSB7CiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgcGFkZGluZzogM3B4IDVweDsKICBtYXJnaW46IDJweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNmN2I1N2Y7Cn0KCi5zZWxlY3RvclBhZ2luYTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZDBhYTsKfQouc2VsZWN0b3JTZWxlY2Npb25hZG8gewogIGJhY2tncm91bmQtY29sb3I6ICNmZmQwYWE7CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KI2FudW5jaW8gewogIHBhZGRpbmc6IDVweCA1cHg7Cn0KI3pvbmFDcmVhckNvbnZlcnNhY2lvbiB7CiAgYm9yZGVyOiAycHggc29saWQgY2FkZXRibHVlOwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgcGFkZGluZzogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDk1LCAxNTgsIDE2MCwgMC4zMjkpOwp9CiNpbnB1dFRpdHVsb051ZXZhQ29udmVyc2FjaW9uIHsKICBmb250LXNpemU6IDIwcHg7CiAgcGFkZGluZzogM3B4IDVweDsKICB3aWR0aDogbWluKDgwJSwgNTAwcHgpOwp9Cg=="},{"version":3,"sources":["Foro.vue"],"names":[],"mappingsfile":"Foro.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"foro\">\n    <div class=\"barraSuperiorForo\">\n      <div id=\"anuncio\" v-show=\"idConversacionSeleccionada === null\">\n        Conversaciones\n      </div>\n      <div\n        id=\"bRegresarConversaciones\"\n        v-show=\"idConversacionSeleccionada != null\"\n        @click=\"\n          idConversacionSeleccionada = null;\n          $apollo.queries.numPaginas.refetch();\n        \"\n      >\n        Volver a conversaciones\n      </div>\n      <div id=\"controlesForo\">\n        <div\n          class=\"controlesForo botonesControles\"\n          id=\"bCrearConversacion\"\n          v-if=\"\n            usuarioLogeado &&\n            (esteForo.acceso == 'publico' || usuarioMiembro == true) &&\n            esteForo.id\n          \"\n          v-show=\"!conversacionAbierta\"\n          @click=\"creandoConversacion = !creandoConversacion\"\n        >\n          {{ creandoConversacion ? \"Cancelar\" : \"Crear conversación\" }}\n        </div>\n      </div>\n    </div>\n    <div class=\"zonaConversaciones\">\n      <!-- <creador-conversacion\n        v-if=\"\n          usuarioLogeado &&\n          (esteForo.acceso == 'publico' || usuarioMiembro == true) &&\n          esteForo.id\n        \"\n        :idForo=\"esteForo.id\"\n        :parent=\"parent\"\n        v-show=\"creandoConversacion\"\n        @hiceConversacion=\"addConversacion($event)\"\n      /> -->\n      <div\n        id=\"zonaCrearConversacion\"\n        v-if=\"\n          usuarioLogeado &&\n          (esteForo.acceso == 'publico' || usuarioMiembro == true) &&\n          esteForo.id\n        \"\n        v-show=\"creandoConversacion\"\n      >\n        <center><h3>Creando conversación</h3></center>\n        <input\n          type=\"text\"\n          v-model=\"tituloNuevaConversacion\"\n          id=\"inputTituloNuevaConversacion\"\n          placeholder=\"Titulo de la nueva conversación\"\n          :class=\"{ letrasRojas: tituloNuevaConversacionIlegal }\"\n        />\n        <cuadro-responder\n          :idForo=\"esteForo.id\"\n          :parent=\"parent\"\n          :tituloNuevaConversacion=\"tituloNuevaConversacion\"\n          :class=\"{ deshabilitado: tituloNuevaConversacionIlegal }\"\n          @hiceConversacion=\"addConversacion($event)\"\n        />\n      </div>\n\n      <div class=\"zonaSelectorPagina\" v-if=\"numPaginas && !conversacionAbierta\">\n        <div\n          class=\"selectorPagina\"\n          v-for=\"index in numPaginas\"\n          :key=\"index\"\n          :class=\"{ selectorSeleccionado: index == numPaginaSeleccionada }\"\n          @click=\"numPaginaSeleccionada = index\"\n        >\n          {{ index }}\n        </div>\n      </div>\n      <div class=\"zonaPaginasConversaciones\" v-if=\"numPaginas\">\n        <div\n          class=\"paginaConversaciones\"\n          :key=\"index\"\n          v-for=\"index in numPaginas\"\n        ></div>\n        <conversacion\n          v-for=\"conversacion of conversacionesPorPagina[numPaginaSeleccionada]\"\n          :key=\"conversacion.id\"\n          :estaConversacion=\"conversacion\"\n          :seleccionado=\"idConversacionSeleccionada == conversacion.id\"\n          :usuarioMiembro=\"usuarioMiembro\"\n          :idForo=\"idForo\"\n          :parent=\"parent\"\n          v-show=\"\n            idConversacionSeleccionada == conversacion.id ||\n            !conversacionAbierta\n          \"\n          @click.native=\"idConversacionSeleccionada = conversacion.id\"\n          @meAbrieron=\"\n            setTodaConversacionLeida(conversacion.id)\n          \"\n          @meElimine=\"refreshPagina\"\n          @respuestaPublicada=\"\n            setTodaConversacionLeida(\n              conversacion.id,\n              conversacion.cantidadRespuestas\n            )\n          \"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\n// import CreadorConversacion from \"./foros/CreadorConversacion.vue\";\nimport { fragmentoConversacion } from \"./utilidades/recursosGql\";\nimport Conversacion from \"./foros/Conversacion.vue\";\nimport CuadroResponder from \"./foros/CuadroResponder.vue\";\n\nconst charProhibidosTituloNuevaConversacion = /[^ a-zA-ZÀ-ž0-9_():.,-¡!¿?]/;\n\nconst QUERY_FORO = gql`\n  query($idForo: ID!) {\n    foro(idForo: $idForo) {\n      id\n      acceso\n      miembros\n    }\n  }\n`;\n\nconst QUERY_CONVERSACIONES_PAGINA = gql`\n  query($idForo: ID!, $pagina: Int!) {\n    conversacionesPaginaForo(idForo: $idForo, pagina: $pagina) {\n      pagina\n      numPaginas\n      conversaciones {\n        ...fragConversacion\n      }\n    }\n  }\n  ${fragmentoConversacion}\n`;\n\nexport default {\n  components: { Conversacion, CuadroResponder },\n  name: \"Foro\",\n  apollo: {\n    esteForo: {\n      query: QUERY_FORO,\n      variables() {\n        return {\n          idForo: this.idForo,\n        };\n      },\n      fetchPolicy: \"cache-and-network\",\n      update: (data) => {\n        return data.foro;\n      },\n      skip() {\n        return !this.idForo;\n      },\n    },\n    numPaginas: {\n      query: QUERY_CONVERSACIONES_PAGINA,\n      variables() {\n        return {\n          idForo: this.idForo,\n          pagina: this.numPaginaSeleccionada,\n        };\n      },\n      fetchPolicy: \"no-cache\",\n      skip() {\n        return !this.idForo;\n      },\n      update({\n        conversacionesPaginaForo: { conversaciones, pagina, numPaginas },\n      }) {\n        if (this.numPaginaSeleccionada != pagina) {\n          this.numPaginaSeleccionada = pagina;\n        }\n        this.$set(this.conversacionesPorPagina, pagina, conversaciones);\n        return numPaginas;\n      },\n    },\n  },\n  props: {\n    idForo: String,\n    parent: Object,\n  },\n  data() {\n    return {\n      esteForo: {\n        miembros: [],\n        conversaciones: [],\n      },\n      idConversacionSeleccionada: null,\n      creandoConversacion: false,\n      numPaginaSeleccionada: 0,\n      conversacionesPorPagina: {},\n\n      tituloNuevaConversacion: null,\n    };\n  },\n  methods: {\n    addConversacion(nuevaConversacion) {\n      this.creandoConversacion = false;\n      // var targetPagina = this.numPaginas;\n      // console.log(`Target página: ${targetPagina}`);\n      // if (\n      //   this.conversacionesPorPagina[targetPagina].length >= 6 ||\n      //   targetPagina < 1\n      // ) {\n      //   targetPagina++;\n      //   if (!this.conversacionesPorPagina[targetPagina]) {\n      //     this.$set(this.conversacionesPorPagina, targetPagina, []);\n      //   }\n      // }\n      // console.log(`Pushing en targetPagina ${targetPagina}`);\n      // this.conversacionesPorPagina[targetPagina].push(nuevaConversacion);\n      this.setTodaConversacionLeida(nuevaConversacion.id);\n\n      // if (this.numPaginaSeleccionada != targetPagina) {\n      //   this.numPaginaSeleccionada = targetPagina;\n      // }\n      this.tituloNuevaConversacion = null;\n      this.numPaginaSeleccionada=1;\n      this.$apollo.queries.numPaginas.refetch();\n\n\n    },\n    refreshPagina() {\n      //let store = this.$apollo.provider.defaultClient;\n      this.idConversacionSeleccionada = null;\n      this.$apollo.queries.numPaginas.refresh();\n    },    \n    setTodaConversacionLeida(idConversacion) {\n      if (!this.usuario || !this.usuario.id) {\n        return;\n      } else {\n        console.log(`Setting toda conversación leida`);\n\n        this.$apollo\n          .mutate({\n            mutation: gql`\n              mutation($idUsuario: ID!, $idForo: ID!, $idConversacion: ID!) {\n                setTodasRespuestasConversacionLeidasPorUsuario(\n                  idUsuario: $idUsuario\n                  idForo: $idForo\n                  idConversacion: $idConversacion\n                )\n              }\n            `,\n            variables: {\n              idUsuario: this.usuario.id,\n              idForo: this.idForo,\n              idConversacion,\n            },\n          })\n          .then(\n            ({ data: { setTodasRespuestasConversacionLeidasPorUsuario } }) => {\n              console.log(\n                `Resultado: ${setTodasRespuestasConversacionLeidasPorUsuario}`\n              );\n\n              this.$store.commit(\"setRespuestasLeidasConversacionUsuario\", {\n                idForo: this.idForo,\n                idConversacion,\n                respuestasLeidas: setTodasRespuestasConversacionLeidasPorUsuario,\n              });\n            }\n          )\n          .catch((error) => {\n            console.log(`Error. E: ${error}`);\n          });\n      }\n    },\n    setConversacionLeida(idConversacion, cantidadRespuestasLeidas) {\n      if (!this.usuario || !this.usuario.id) {\n        return;\n      } else {\n        console.log(`Setting conversación leida`);\n\n        this.$apollo\n          .mutate({\n            mutation: gql`\n              mutation(\n                $idUsuario: ID!\n                $idForo: ID!\n                $idConversacion: ID!\n                $cantidadRespuestasLeidas: Int!\n              ) {\n                setCantidadRespuestasConversacionLeidasPorUsuario(\n                  idUsuario: $idUsuario\n                  idForo: $idForo\n                  idConversacion: $idConversacion\n                  cantidadRespuestasLeidas: $cantidadRespuestasLeidas\n                )\n              }\n            `,\n            variables: {\n              idUsuario: this.usuario.id,\n              idForo: this.idForo,\n              idConversacion,\n              cantidadRespuestasLeidas: parseInt(cantidadRespuestasLeidas),\n            },\n          })\n          .then(\n            ({\n              data: { setCantidadRespuestasConversacionLeidasPorUsuario },\n            }) => {\n              console.log(\n                `Resultado: ${setCantidadRespuestasConversacionLeidasPorUsuario}`\n              );\n              if (setCantidadRespuestasConversacionLeidasPorUsuario) {\n                this.$store.commit(\"setRespuestasLeidasConversacionUsuario\", {\n                  idForo: this.idForo,\n                  idConversacion,\n                  respuestasLeidas: cantidadRespuestasLeidas,\n                });\n              }\n            }\n          )\n          .catch((error) => {\n            console.log(`Error. E: ${error}`);\n          });\n      }\n    },\n  },\n  computed: {\n    usuarioMiembro() {\n      if (this.esteForo.acceso == \"publico\") {\n        return true;\n      } else if (this.esteForo.acceso == \"privado\") {\n        if (this.esteForo.miembros.includes(this.$store.state.usuario.id)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    conversacionAbierta() {\n      return this.idConversacionSeleccionada;\n    },\n    tituloNuevaConversacionIlegal() {\n      if (\n        !this.tituloNuevaConversacion ||\n        this.tituloNuevaConversacion.length < 1\n      ) {\n        return true;\n      }\n      if (\n        charProhibidosTituloNuevaConversacion.test(this.tituloNuevaConversacion)\n      ) {\n        return true;\n      }\n      return false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.foro {\n  border: 2px solid white;\n  background-color: rgb(239 158 93);\n  margin: 0px auto;\n}\n#nombreForo {\n  text-align: center;\n  font-size: 22px;\n  margin-bottom: 20px;\n}\n\n.barraSuperiorForo {\n  display: grid;\n  grid-template-columns: 1fr 100px 1fr;\n}\n\n#bRegresarConversaciones {\n  padding: 15px 5px;\n  text-align: center;\n  cursor: pointer;\n  border-radius: 7px;\n  grid-column: 2/3;\n  justify-self: center;\n  align-self: center;\n  border: 1px solid black;\n  margin: 10px;\n  background-color: #f5a25f;\n}\n#bRegresarConversaciones:hover {\n  background-color: #f8cba6;\n}\n#controlesForo {\n  margin-left: auto;\n  display: flex;\n  flex-flow: row-reverse;\n  grid-column: 3/4;\n}\n.controlesForo {\n  margin-left: 10px;\n}\n.botonesControles {\n  padding: 3px 5px;\n  cursor: pointer;\n}\n.botonesControles:hover {\n  background-color: #f8cba6;\n}\n.zonaConversaciones {\n  padding-left: 0px;\n}\n\n.zonaSelectorPagina {\n  display: flex;\n  padding: 2px 10px;\n}\n.selectorPagina {\n  border: 1px solid black;\n  padding: 3px 5px;\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #f7b57f;\n}\n\n.selectorPagina:hover {\n  background-color: #ffd0aa;\n}\n.selectorSeleccionado {\n  background-color: #ffd0aa;\n  pointer-events: none;\n  font-weight: bold;\n}\n#anuncio {\n  padding: 5px 5px;\n}\n#zonaCrearConversacion {\n  border: 2px solid cadetblue;\n  border-radius: 10px;\n  padding: 10px;\n  background-color: rgba(95, 158, 160, 0.329);\n}\n#inputTituloNuevaConversacion {\n  font-size: 20px;\n  padding: 3px 5px;\n  width: min(80%, 500px);\n}\n</style>"]}]}