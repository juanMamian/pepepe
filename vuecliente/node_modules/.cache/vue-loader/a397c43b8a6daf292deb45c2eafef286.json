{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue?vue&type=style&index=0&id=30816d49&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue","mtime":1676563818640},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNwYW5lbENvbmp1bnRvc05vZG9zIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA1MHB4OwogIGJveC1zaGFkb3c6IDJweCAycHggMnB4IDJweCByZ2IoMTkwLCAxOTAsIDE5MCk7CiAgbWluLXdpZHRoOiAxMDBweDsKICBtaW4taGVpZ2h0OiAxMDBweDsKICBtYXgtaGVpZ2h0OiA4MCU7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTsKICB3aWR0aDogbWluKDkwJSwgNjUwcHgpOwogIHJpZ2h0OiAwcHg7Cn0KI2dyYWJiZXIgewogIHdpZHRoOiAzMHB4OwogIGhlaWdodDogMzBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMCU7CiAgcmlnaHQ6IDEwMCU7Cn0KI2JhcnJhQ29uanVudG9zIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93LXg6IHNjcm9sbDsKfQoKI2xpc3RhQ29uanVudG9zIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBnYXA6IDEwcHg7CiAgcGFkZGluZzogMTBweCAxMHB4Owp9Ci5ib3RvbkVsaW1pbmFyQ29sZWNjaW9uIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIG1hcmdpbi1sZWZ0OiAxMHB4OwogIHdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKfQouYm90b25FbGltaW5hckNvbGVjY2lvbjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxOSwgNjMsIDYzKTsKfQojY29udHJvbGVzQ29uanVudG9zIHsKICBtYXJnaW4tbGVmdDogYXV0bzsKfQouYm90b25Db250cm9sZXNDb25qdW50b3MgewogIGZvbnQtc2l6ZTogMTRweDsKICBjb2xvcjogZ3JheTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLmJvdG9uQ29udHJvbGVzQ29uanVudG9zOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNTI3KTsKfQoKI2JvdG9uUmFzdHJlYXJOb2RvIHsKICB3aWR0aDogMjBweDsKICBtaW4td2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItcmFkaXVzOiA1MCU7Cn0KI2JvdG9uUmFzdHJlYXJOb2RvOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDk1LCAxNTgsIDE2MCwgMC42NTgpOwp9CgouYm90b25FbGltaW5hck5vZG9Db2xlY2Npb24gewogIHdpZHRoOiAyMHB4OwogIG1pbi13aWR0aDogMjBweDsKICBoZWlnaHQ6IDIwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGFsaWduLXNlbGY6IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmJvdG9uRWxpbWluYXJOb2RvQ29sZWNjaW9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM2LCA2OCwgNjgpOwp9CgojbGlzdGFOb2Rvc0Nvbmp1bnRvIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgbWF4LWhlaWdodDogNTV2aDsKICBwYWRkaW5nLXRvcDogMTBweDsKfQouaWNvbm9Ob2RvQ29ub2NpbWllbnRvIHsKICBtYXJnaW46IDBweCA0MHB4OwogIG1hcmdpbi1ib3R0b206IDkwcHg7Cn0KI2xpc3RhQ2xhc2VzTm9kbyB7CiAgd2lkdGg6IDEwMCU7Cn0KLmluZm9DbGFzZSB7CiAgZGlzcGxheTogZmxleDsKICBtaW4taGVpZ2h0OiA0MHB4OwogIHBhZGRpbmc6IDJweCA1cHg7Cn0KLmluZm9DbGFzZTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg5NSwgMTU4LCAxNjAsIDAuNDUyKTsKfQouaWNvbm9BYnJpck5vZG8gewogIHdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Ci5pbmZvSW50ZXJlc2Fkb3MgewogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouY2FudGlkYWRJbnRlcmVzYWRvcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMjUlOwogIGxlZnQ6IDY1JTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICBmb250LXNpemU6IDEwcHg7Cn0KLmljb25vSW50ZXJlc2Fkb3MgewogIHdpZHRoOiAyN3B4OwogIGhlaWdodDogMjdweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcGFkZGluZzogMnB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBib3JkZXI6IDFweCBzb2xpZCBjaG9jb2xhdGU7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTAsIDEwNSwgMzAsIDAuNDM4KTsKfQo="},{"version":3,"sources":["PanelConjuntosNodos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PanelConjuntosNodos.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div\n    id=\"panelConjuntosNodos\"\n    @mouseup.left.stop=\"\"\n    @mousedown.left.stop=\"\"\n    @touchmove.stop=\"\"\n    v-show=\"abierto\"\n  >\n    <div class=\"barraSeccion\">\n      <span @click=\"idColeccionAbierta = null\"> Colecciones</span\n      ><span v-if=\"coleccionAbierta\">{{\n        \" > \" + coleccionAbierta.titulo\n      }}</span>\n\n      <div style=\"margin-left: auto\">\n        <div\n          v-show=\"!creandoColeccion\"\n          @click=\"crearNuevaColeccion\"\n          class=\"boton\"\n        >\n          <img src=\"@/assets/iconos/plusCircle.svg\" alt=\"Nuevo\" style=\"\" />\n        </div>\n\n        <loading v-show=\"creandoColeccion\" />\n      </div>\n    </div>\n\n    <div\n      id=\"listaConjuntos\"\n      v-show=\"!coleccionAbierta\"\n      @click=\"idColeccionMenuCx = null\"\n      @click.self=\"idColeccionSeleccionada=null\"\n    >\n      <div class=\"anuncioZonaVacia\" v-if=\"conjuntos.length < 1\">\n        Aún no hay colecciones\n      </div>\n      <selector-conjunto\n        v-for=\"coleccion of conjuntos\"\n        :key=\"coleccion.id\"\n        :seleccionado=\"coleccion.id === idColeccionSeleccionada\"\n        :menuCx=\"idColeccionMenuCx === coleccion.id\"\n        :estaColeccion=\"coleccion\"\n        @contextmenu.native.exact.stop.prevent=\"\n          idColeccionMenuCx = coleccion.id\n        \"\n        @dblclick.native=\"idColeccionAbierta = coleccion.id\"\n        @click.native=\"\n          idColeccionSeleccionada =\n            idColeccionSeleccionada === coleccion.id ? null : coleccion.id\n        \"\n      />\n    </div>\n\n    <coleccion-nodos-conocimiento\n      :yo=\"yo\"\n      v-if=\"coleccionAbierta\"\n      :estaColeccion=\"coleccionAbierta\"\n    />\n    <!-- <div\n      id=\"listaNodosConjunto\"\n      v-if=\"coleccionSeleccionada\"\n      v-show=\"abierto && coleccionSeleccionada\"\n      :key=\"'listaNodos' + idColeccionSeleccionada\"\n      @click.self.stop=\"idNodoSeleccionado = null\"\n    >\n      <icono-nodo-conocimiento\n        :esteNodo=\"nodo\"\n        v-for=\"nodo of coleccionSeleccionada.nodos\"\n        v-show=\"coleccionSeleccionada\"\n        :key=\"nodo.id\"\n        :seleccionado=\"nodo.id === idNodoSeleccionado\"\n        @click.native.stop=\"idNodoSeleccionado = nodo.id\"\n        @dblclick.native.stop=\"$emit('centrarEnNodo', nodo.id)\"\n      /> -->\n    <!-- </div> -->\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport ColeccionNodosConocimiento from \"./ColeccionNodosConocimiento.vue\";\nimport SelectorConjunto from \"./SelectorConjunto.vue\";\nimport {\n  QUERY_DATOS_USUARIO_NODOS,\n  fragmentoColecciones,\n} from \"./AtlasConocimiento.vue\";\nimport Loading from \"../utilidades/Loading.vue\";\n\nconst charProhibidosNombreColeccion = /[^ a-zA-ZÀ-ž0-9_():.,-]/;\n\nexport default {\n  components: { ColeccionNodosConocimiento, SelectorConjunto, Loading },\n  name: \"PanelConjuntosNodos\",\n  props: {\n    yo: Object,\n    modoAtlas: String,\n  },\n  data() {\n    return {\n      abierto: false,\n      idColeccionSeleccionada: 0,\n      editandoNombreColeccion: false,\n\n      idNodoSeleccionado: null,\n\n      idColeccionAbierta: null,\n\n      idColeccionMenuCx: null,\n\n      enviandoQueryColecciones: false,\n      enviandoQueryNodosSeccion: false,\n      creandoColeccion: false,\n    };\n  },\n  methods: {\n    abrirPaginaNodo(idNodo) {\n      if (!idNodo) return;\n      this.$router.push(\"/nodoConocimiento/\" + idNodo);\n    },\n    crearNuevaColeccion() {\n      this.enviandoQueryColecciones = true;\n\n      this.creandoColeccion = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation {\n              crearColeccionNodosAtlasConocimientoUsuario {\n                ...fragColecciones\n              }\n            }\n            ${fragmentoColecciones}\n          `,\n        })\n        .then(({ data: { crearColeccionNodosAtlasConocimientoUsuario } }) => {\n          this.enviandoQueryColecciones = false;\n          const store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_DATOS_USUARIO_NODOS,\n          });\n\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n\n          var colecciones = nuevoCache.yo.atlas.colecciones;\n          const indexC = colecciones.findIndex(\n            (col) => col.id === crearColeccionNodosAtlasConocimientoUsuario.id\n          );\n\n          if (indexC === -1) {\n            colecciones.push(crearColeccionNodosAtlasConocimientoUsuario);\n            store.writeQuery({\n              query: QUERY_DATOS_USUARIO_NODOS,\n              data: nuevoCache,\n            });\n          } else {\n            console.log(`La colección ya estaba incluida`);\n          }\n          this.creandoColeccion = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.creandoColeccion = false;\n        });\n    },\n    seleccionarColeccion(e, idColeccion) {\n      if (this.idColeccionSeleccionada === idColeccion) {\n        const nombreColeccion = this.conjuntos.find(\n          (c) => c.id === idColeccion\n        ).nombre;\n        console.log(`Seting value del input a ${nombreColeccion}`);\n        this.editandoNombreColeccion = true;\n        document.getElementById(\"inputNombreColeccion\" + idColeccion).value =\n          nombreColeccion;\n      } else {\n        this.editandoNombreColeccion = false;\n      }\n      this.idColeccionSeleccionada = idColeccion;\n      this.idNodoSeleccionado = null;\n    },\n    guardarNuevoNombreColeccion(e, idColeccion) {\n      var nuevoNombre = e.target.value;\n      console.log(\n        `seting nombre de coleccion ${idColeccion} con value: ${nuevoNombre}`\n      );\n      if (charProhibidosNombreColeccion.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n          this.editandoNombreColeccion = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    \n  },\n  computed: {\n    idsNodosObjetivos() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.datosNodos) {\n        return [];\n      }\n      return this.yo.atlas.datosNodos\n        .filter((n) => n.objetivo == true)\n        .map((n) => n.idNodo);\n    },\n    nodosObjetivo() {\n      if (!this.yo) return [];\n\n      return this.todosNodos.filter((n) =>\n        this.idsNodosObjetivos.includes(n.id)\n      );\n    },\n    conjuntos() {\n      return this.conjuntosUsuario;\n    },\n    conjuntosUsuario() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.colecciones) {\n        return [];\n      }\n\n      var nuevoColecciones = JSON.parse(\n        JSON.stringify(this.yo.atlas.colecciones)\n      );\n\n      nuevoColecciones.forEach((c) => {\n        c.titulo = c.nombre;\n        c.modo = \"estudiante\";\n        c.editable = true;\n        c.editandoNombre = false;\n      });\n\n      return nuevoColecciones;\n    },\n    coleccionSeleccionada() {\n      return this.conjuntos.find((c) => c.id === this.idColeccionSeleccionada);\n    },\n    coleccionAbierta() {\n      if (!this.idColeccionAbierta) {\n        return null;\n      }\n\n      return this.conjuntos.find((c) => c.id === this.idColeccionAbierta);\n    },\n  },\n  watch: {\n    abierto() {\n      this.idNodoSeleccionado = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#panelConjuntosNodos {\n  position: absolute;\n  top: 50px;\n  box-shadow: 2px 2px 2px 2px rgb(190, 190, 190);\n  min-width: 100px;\n  min-height: 100px;\n  max-height: 80%;\n  background-color: whitesmoke;\n  width: min(90%, 650px);\n  right: 0px;\n}\n#grabber {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: absolute;\n  top: 0%;\n  right: 100%;\n}\n#barraConjuntos {\n  display: flex;\n  width: 100%;\n  overflow-x: scroll;\n}\n\n#listaConjuntos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 10px 10px;\n}\n.botonEliminarColeccion {\n  cursor: pointer;\n  border-radius: 50%;\n  margin-left: 10px;\n  width: 20px;\n  height: 20px;\n}\n.botonEliminarColeccion:hover {\n  background-color: rgb(219, 63, 63);\n}\n#controlesConjuntos {\n  margin-left: auto;\n}\n.botonControlesConjuntos {\n  font-size: 14px;\n  color: gray;\n  cursor: pointer;\n}\n.botonControlesConjuntos:hover {\n  background-color: rgba(128, 128, 128, 0.527);\n}\n\n#botonRastrearNodo {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  border-radius: 50%;\n}\n#botonRastrearNodo:hover {\n  background-color: rgba(95, 158, 160, 0.658);\n}\n\n.botonEliminarNodoColeccion {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  align-self: center;\n  border-radius: 50%;\n  margin-left: 10px;\n}\n.botonEliminarNodoColeccion:hover {\n  background-color: rgb(236, 68, 68);\n}\n\n#listaNodosConjunto {\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n  max-height: 55vh;\n  padding-top: 10px;\n}\n.iconoNodoConocimiento {\n  margin: 0px 40px;\n  margin-bottom: 90px;\n}\n#listaClasesNodo {\n  width: 100%;\n}\n.infoClase {\n  display: flex;\n  min-height: 40px;\n  padding: 2px 5px;\n}\n.infoClase:hover {\n  background-color: rgba(95, 158, 160, 0.452);\n}\n.iconoAbrirNodo {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n.infoInteresados {\n  margin-left: auto;\n  position: relative;\n}\n.cantidadInteresados {\n  position: absolute;\n  top: 25%;\n  left: 65%;\n  transform: translate(-50%, -50%);\n  font-size: 10px;\n}\n.iconoInteresados {\n  width: 27px;\n  height: 27px;\n  cursor: pointer;\n  padding: 2px;\n  border-radius: 50%;\n  border: 1px solid chocolate;\n  background-color: rgba(210, 105, 30, 0.438);\n}\n</style>"]}]}