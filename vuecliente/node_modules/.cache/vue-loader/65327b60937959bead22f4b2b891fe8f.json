{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue?vue&type=style&index=0&id=7df69e60&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/atlasConocimiento/PanelConjuntosNodos.vue","mtime":1674568326919},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojcGFuZWxDb25qdW50b3NOb2RvcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTBweDsKICBib3gtc2hhZG93OiAycHggMnB4IDJweCAycHggcmdiKDE5MCwgMTkwLCAxOTApOwogIG1pbi13aWR0aDogMTAwcHg7CiAgbWluLWhlaWdodDogMTAwcHg7CiAgbWF4LWhlaWdodDogODAlOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7CiAgd2lkdGg6IG1pbig5MCUsIDY1MHB4KTsKICByaWdodDowcHg7Cn0KI2dyYWJiZXIgewogIHdpZHRoOiAzMHB4OwogIGhlaWdodDogMzBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMCU7CiAgcmlnaHQ6IDEwMCU7Cn0KI2JhcnJhQ29uanVudG9zIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93LXg6IHNjcm9sbDsKfQouc2VsZWN0b3JDb25qdW50byB7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTUsIDE1OCwgMTYwLCAwLjYzNyk7CiAgcGFkZGluZzogM3B4IDVweDsKICBmb250LXN0eWxlOiBpdGFsaWM7CiAgZGlzcGxheTogZmxleDsKfQouc2VsZWN0b3JDb25qdW50by5zZWxlY2Npb25hZG8gewogIGJhY2tncm91bmQtY29sb3I6IGNhZGV0Ymx1ZTsKfQouYm90b25FbGltaW5hckNvbGVjY2lvbiB7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBtYXJnaW4tbGVmdDogMTBweDsKICB3aWR0aDoyMHB4OwogIGhlaWdodDoyMHB4Owp9Ci5ib3RvbkVsaW1pbmFyQ29sZWNjaW9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE5LCA2MywgNjMpOwp9CiNjb250cm9sZXNDb25qdW50b3MgewogIG1hcmdpbi1sZWZ0OiBhdXRvOwp9Ci5ib3RvbkNvbnRyb2xlc0Nvbmp1bnRvcyB7CiAgZm9udC1zaXplOiAxNHB4OwogIGNvbG9yOiBncmF5OwogIGN1cnNvcjogcG9pbnRlcjsKfQouYm90b25Db250cm9sZXNDb25qdW50b3M6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTI4LCAxMjgsIDEyOCwgMC41MjcpOwp9CgojYm90b25SYXN0cmVhck5vZG8gewogIHdpZHRoOiAyMHB4OwogIG1pbi13aWR0aDogMjBweDsKICBoZWlnaHQ6IDIwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQojYm90b25SYXN0cmVhck5vZG86aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoOTUsIDE1OCwgMTYwLCAwLjY1OCk7Cn0KCi5ib3RvbkVsaW1pbmFyTm9kb0NvbGVjY2lvbiB7CiAgd2lkdGg6IDIwcHg7CiAgbWluLXdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYWxpZ24tc2VsZjogY2VudGVyOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBtYXJnaW4tbGVmdDogMTBweDsKfQouYm90b25FbGltaW5hck5vZG9Db2xlY2Npb246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzYsIDY4LCA2OCk7Cn0KCiNsaXN0YU5vZG9zQ29uanVudG8gewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIG92ZXJmbG93LXk6IHNjcm9sbDsKICBtYXgtaGVpZ2h0OiA1NXZoOwogIHBhZGRpbmctdG9wOiAxMHB4Owp9Ci5pY29ub05vZG9Db25vY2ltaWVudG8gewogIG1hcmdpbjogMHB4IDQwcHg7CiAgbWFyZ2luLWJvdHRvbTogOTBweDsKfQojbGlzdGFDbGFzZXNOb2RvIHsKICB3aWR0aDogMTAwJTsKfQouaW5mb0NsYXNlIHsKICBkaXNwbGF5OiBmbGV4OwogIG1pbi1oZWlnaHQ6IDQwcHg7CiAgcGFkZGluZzogMnB4IDVweDsKfQouaW5mb0NsYXNlOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDk1LCAxNTgsIDE2MCwgMC40NTIpOwp9Ci5pY29ub0FicmlyTm9kbyB7CiAgd2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLmluZm9JbnRlcmVzYWRvcyB7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Ci5jYW50aWRhZEludGVyZXNhZG9zIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAyNSU7CiAgbGVmdDogNjUlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogIGZvbnQtc2l6ZTogMTBweDsKfQouaWNvbm9JbnRlcmVzYWRvcyB7CiAgd2lkdGg6IDI3cHg7CiAgaGVpZ2h0OiAyN3B4OwogIGN1cnNvcjogcG9pbnRlcjsKICBwYWRkaW5nOiAycHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIGJvcmRlcjogMXB4IHNvbGlkIGNob2NvbGF0ZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMCwgMTA1LCAzMCwgMC40MzgpOwp9Cg=="},{"version":3,"sources":["PanelConjuntosNodos.vue"],"names":[],"mappingsfile":"PanelConjuntosNodos.vue","sourceRoot":"src/components/atlasConocimiento","sourcesContent":["<template>\n  <div\n    id=\"panelConjuntosNodos\"\n    @mouseup.left.stop=\"\"\n    @mousedown.left.stop=\"\"\n    @touchmove.stop=\"\"\n    v-show=\"abierto\"\n  >   \n    <div id=\"barraConjuntos\">\n      <div\n        class=\"selectorConjunto\"      \n        :class=\"{ seleccionado: conjunto.id === idConjuntoSeleccionado }\"\n        @click=\"seleccionarColeccion($event, conjunto.id)\"\n        v-for=\"conjunto of conjuntos\"\n        :key=\"'selectorConjunto' + conjunto.id\"\n      >\n        <div\n          class=\"nombreColeccion\"\n          v-show=\"\n            !editandoNombreColeccion ||\n            !conjunto.editable ||\n            conjunto.id != idConjuntoSeleccionado\n          \"\n        >\n          {{ conjunto.titulo }}\n        </div>\n        <input\n          type=\"text\"\n          name=\"nuevoNombreColeccion\"\n          :id=\"'inputNombreColeccion'+conjunto.id\"\n          v-show=\"\n            conjunto.editable &&\n            conjunto.id === idConjuntoSeleccionado &&\n            editandoNombreColeccion\n          \"\n          :class=\"{deshabilitado: enviandoQueryColecciones}\"\n          @keypress.enter=\"guardarNuevoNombreColeccion($event, conjunto.id)\"\n          @blur=\"editandoNombreColeccion = false\"\n        />\n        <img\n          src=\"@/assets/iconos/delete.png\"\n          alt=\"Eliminar\"\n          width=\"20px\"\n          title=\"Eliminar colección\"\n          v-show=\"\n            !editandoNombreColeccion &&\n            conjunto.editable &&\n            conjunto.id === idConjuntoSeleccionado\n          \"\n          class=\"botonEliminarColeccion\"\n          @click.stop=\"eliminarColeccion(conjunto.id)\"\n        />\n      </div>\n      <div\n        id=\"controlesConjuntos\"\n        :class=\"{ deshabilitado: enviandoQueryColecciones }\"        \n      >\n        <div @click=\"crearNuevaColeccion\" class=\"botonControlesConjuntos\">Nueva colección</div>\n      </div>\n    </div>\n    \n    <coleccion-nodos-conocimiento :yo=\"yo\" v-if=\"idConjuntoSeleccionado\" :estaColeccion=\"conjuntoSeleccionado\"/>\n    <!-- <div\n      id=\"listaNodosConjunto\"\n      v-if=\"conjuntoSeleccionado\"\n      v-show=\"abierto && conjuntoSeleccionado\"\n      :key=\"'listaNodos' + idConjuntoSeleccionado\"\n      @click.self.stop=\"idNodoSeleccionado = null\"\n    >\n      <icono-nodo-conocimiento\n        :esteNodo=\"nodo\"\n        v-for=\"nodo of conjuntoSeleccionado.nodos\"\n        v-show=\"conjuntoSeleccionado\"\n        :key=\"nodo.id\"\n        :seleccionado=\"nodo.id === idNodoSeleccionado\"\n        @click.native.stop=\"idNodoSeleccionado = nodo.id\"\n        @dblclick.native.stop=\"$emit('centrarEnNodo', nodo.id)\"\n      /> -->\n    <!-- </div> -->\n    \n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport ColeccionNodosConocimiento from './ColeccionNodosConocimiento.vue';\n\nconst charProhibidosNombreColeccion = /[^ a-zA-ZÀ-ž0-9_():.,-]/;\n\nexport default {\n  components: { ColeccionNodosConocimiento },\n  name: \"PanelConjuntosNodos\",\n  props: {\n    yo: Object,\n    modoAtlas:String,\n  },\n  data() {\n    return {\n      abierto: false,\n      idConjuntoSeleccionado: 0,\n      editandoNombreColeccion: false,\n\n      idNodoSeleccionado: null,\n\n      enviandoQueryColecciones: false,\n      enviandoQueryNodosSeccion: false,\n    };\n  },\n  methods: {    \n    abrirPaginaNodo(idNodo) {\n      if (!idNodo) return;\n      this.$router.push(\"/nodoConocimiento/\" + idNodo);\n    },\n    crearNuevaColeccion() {\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation {\n              crearColeccionNodosAtlasConocimientoUsuario {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    seleccionarColeccion(e, idColeccion) {\n      if (this.idConjuntoSeleccionado === idColeccion) {\n        const nombreColeccion=this.conjuntos.find(c=>c.id===idColeccion).nombre;\n        console.log(`Seting value del input a ${nombreColeccion}`);\n        this.editandoNombreColeccion = true;\n        document.getElementById('inputNombreColeccion'+idColeccion).value=nombreColeccion;\n\n      } else {\n        this.editandoNombreColeccion = false;\n      }\n      this.idConjuntoSeleccionado = idColeccion;\n      this.idNodoSeleccionado = null;\n    },\n    guardarNuevoNombreColeccion(e, idColeccion) {\n      var nuevoNombre = e.target.value;\n      console.log(\n        `seting nombre de coleccion ${idColeccion} con value: ${nuevoNombre}`\n      );\n      if (charProhibidosNombreColeccion.test(nuevoNombre)) {\n        alert(\"¡El nombre contenía caracteres ilegales!\");\n        return true;\n      }\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $nuevoNombre: String!) {\n              setNombreColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                nuevoNombre: $nuevoNombre\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    nombre\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion,\n            nuevoNombre,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n          this.editandoNombreColeccion = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    eliminarColeccion(idColeccion) {\n      if (\n        !confirm(\n          \"Confirmar eliminación de colección? (Esta acción no se puede deshacer)\"\n        )\n      )\n        return;\n      this.idConjuntoSeleccionado = null;\n      this.enviandoQueryColecciones = true;\n\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!) {\n              eliminarColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n              ) {\n                id\n                atlas {\n                  colecciones {\n                    id\n                    idsNodos\n                    nodos {\n                      id\n                      nombre\n                    }\n                  }\n                }\n              }\n            }\n          `,\n          variables: {\n            idColeccion,\n          },\n        })\n        .then(() => {\n          this.enviandoQueryColecciones = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryColecciones = false;\n        });\n    },\n    eliminarNodoSeleccionadoSeccionSeleccionada() {\n\n      if(!this.idConjuntoSeleccionado || !this.idNodoSeleccionado)return\n\n      this.enviandoQueryNodosSeccion = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation ($idColeccion: ID!, $idNodo: ID!) {\n              removeNodoColeccionNodosAtlasConocimientoUsuario(\n                idColeccion: $idColeccion\n                idNodo: $idNodo\n              ) {\n                id\n                idsNodos\n                nodos {\n                  id\n                  nombre\n                }\n              }\n            }\n          `,\n          variables:{\n            idColeccion:this.idConjuntoSeleccionado,\n            idNodo:this.idNodoSeleccionado\n          }\n        })\n        .then(() => {\n          this.enviandoQueryNodosSeccion = false;\n          this.idNodoSeleccionado=null;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.enviandoQueryNodosSeccion = false;\n        });\n    },    \n  },\n  computed: {    \n    idsNodosObjetivos() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.datosNodos) {\n        return [];\n      }\n      return this.yo.atlas.datosNodos\n        .filter((n) => n.objetivo == true)\n        .map((n) => n.idNodo);\n    },\n    nodosObjetivo() {\n      if (!this.yo) return [];\n\n      return this.todosNodos.filter((n) =>\n        this.idsNodosObjetivos.includes(n.id)\n      );\n    },        \n    conjuntos() {\n      \n      return this.conjuntosUsuario\n    },     \n    conjuntosUsuario() {\n      if (!this.yo || !this.yo.atlas || !this.yo.atlas.colecciones) {\n        return [];\n      }\n\n      var nuevoColecciones=JSON.parse(JSON.stringify(this.yo.atlas.colecciones));\n\n      nuevoColecciones.forEach((c) => {\n        c.titulo = c.nombre;\n        c.modo = \"estudiante\";\n        c.editable = true;\n        c.editandoNombre = false;\n      });\n\n      return nuevoColecciones;\n    },\n    conjuntoSeleccionado(){\n      return this.conjuntos.find(c=>c.id===this.idConjuntoSeleccionado);\n    }\n  },\n  watch: {\n    abierto() {\n      this.idNodoSeleccionado = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#panelConjuntosNodos {\n  position: absolute;\n  top: 50px;\n  box-shadow: 2px 2px 2px 2px rgb(190, 190, 190);\n  min-width: 100px;\n  min-height: 100px;\n  max-height: 80%;\n  background-color: whitesmoke;\n  width: min(90%, 650px);\n  right:0px;\n}\n#grabber {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: absolute;\n  top: 0%;\n  right: 100%;\n}\n#barraConjuntos {\n  display: flex;\n  width: 100%;\n  overflow-x: scroll;\n}\n.selectorConjunto {\n  cursor: pointer;\n  background-color: rgba(95, 158, 160, 0.637);\n  padding: 3px 5px;\n  font-style: italic;\n  display: flex;\n}\n.selectorConjunto.seleccionado {\n  background-color: cadetblue;\n}\n.botonEliminarColeccion {\n  cursor: pointer;\n  border-radius: 50%;\n  margin-left: 10px;\n  width:20px;\n  height:20px;\n}\n.botonEliminarColeccion:hover {\n  background-color: rgb(219, 63, 63);\n}\n#controlesConjuntos {\n  margin-left: auto;\n}\n.botonControlesConjuntos {\n  font-size: 14px;\n  color: gray;\n  cursor: pointer;\n}\n.botonControlesConjuntos:hover {\n  background-color: rgba(128, 128, 128, 0.527);\n}\n\n#botonRastrearNodo {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  border-radius: 50%;\n}\n#botonRastrearNodo:hover {\n  background-color: rgba(95, 158, 160, 0.658);\n}\n\n.botonEliminarNodoColeccion {\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  cursor: pointer;\n  align-self: center;\n  border-radius: 50%;\n  margin-left: 10px;\n}\n.botonEliminarNodoColeccion:hover {\n  background-color: rgb(236, 68, 68);\n}\n\n#listaNodosConjunto {\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n  max-height: 55vh;\n  padding-top: 10px;\n}\n.iconoNodoConocimiento {\n  margin: 0px 40px;\n  margin-bottom: 90px;\n}\n#listaClasesNodo {\n  width: 100%;\n}\n.infoClase {\n  display: flex;\n  min-height: 40px;\n  padding: 2px 5px;\n}\n.infoClase:hover {\n  background-color: rgba(95, 158, 160, 0.452);\n}\n.iconoAbrirNodo {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n.infoInteresados {\n  margin-left: auto;\n  position: relative;\n}\n.cantidadInteresados {\n  position: absolute;\n  top: 25%;\n  left: 65%;\n  transform: translate(-50%, -50%);\n  font-size: 10px;\n}\n.iconoInteresados {\n  width: 27px;\n  height: 27px;\n  cursor: pointer;\n  padding: 2px;\n  border-radius: 50%;\n  border: 1px solid chocolate;\n  background-color: rgba(210, 105, 30, 0.438);\n}\n</style>"]}]}