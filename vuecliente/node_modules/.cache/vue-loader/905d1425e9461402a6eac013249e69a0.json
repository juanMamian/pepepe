{"remainingRequest":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vida1/webpj/pepepe/vuecliente/src/components/ListaEventosEspacio.vue?vue&type=style&index=0&id=4f9f724f&scoped=true&lang=css&","dependencies":[{"path":"/home/vida1/webpj/pepepe/vuecliente/src/components/ListaEventosEspacio.vue","mtime":1650227907307},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vida1/webpj/pepepe/vuecliente/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3RhRXZlbnRvc0VzcGFjaW8gewogIG92ZXJmbG93LXk6IHNjcm9sbDsKICBvdmVyZmxvdy14OiBoaWRkZW47Cn0KLmV2ZW50b0l0ZW1MaXN0YSB7CiAgbWFyZ2luOiAxNXB4IDBweDsKfQo="},{"version":3,"sources":["ListaEventosEspacio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListaEventosEspacio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"listaEventosEspacio\">\n    <loading texto=\"\" v-show=\"$apollo.queries.eventosPublicosEspacio.loading\" />\n    <evento-item-lista\n      :esteEvento=\"evento\"\n      v-for=\"evento of eventosPublicosEspacioOrdenados\"\n      :key=\"evento.id\"\n      :seleccionado=\"idEventoSeleccionado === evento.id\"\n      @meElimine=\"\n        deleteEventoCache(evento);        \n      \"\n    />\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport { fragmentoEventoPublico } from \"./utilidades/fragsCalendario\";\nimport EventoItemLista from \"./EventoItemLista.vue\";\nimport Loading from \"./utilidades/Loading.vue\";\n\nconst QUERY_EVENTOS_PUBLICOS_ESPACIO = gql`\n  query ($idEspacio: ID!) {\n    eventosPublicosEspacio(idEspacio: $idEspacio) {\n      ...fragEventoPublico\n    }\n  }\n  ${fragmentoEventoPublico}\n`;\n\nexport default {\n  components: { EventoItemLista, Loading },\n  props: {\n    idEspacio: String,\n  },\n  name: \"ListaEventosEspacio\",\n  apollo: {\n    eventosPublicosEspacio: {\n      query: QUERY_EVENTOS_PUBLICOS_ESPACIO,\n      variables() {\n        return {\n          idEspacio: this.idEspacio,\n        };\n      },\n      fetchPolicy: \"cache-and-network\",\n    },\n  },\n  data() {\n    return {\n      idEventoSeleccionado: null,\n      eventosPublicosEspacio: [],\n    };\n  },\n  methods: {\n    deleteEventoCache(evento) {\n      const tipoEvento =\n        evento.__typename.charAt(0).toLowerCase() + evento.__typename.slice(1);\n      var infoQuery = null;\n      if (tipoEvento === \"eventoPublico\") {\n        infoQuery = {\n          query: QUERY_EVENTOS_PUBLICOS_ESPACIO,\n          variables: {\n            idEspacio: this.idEspacio,\n          },\n        };\n      } else if (tipoEvento === \"eventoPersonal\") {\n        console.log(`add cache eventos personales not developed`);\n        return;\n      } else {\n        console.log(`Tipo evento ${tipoEvento} no reconocido`);\n        return;\n      }\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        ...infoQuery,\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      var listaEventosCache = null;\n      if (tipoEvento === \"eventoPublico\") {\n        listaEventosCache = nuevoCache.eventosPublicosEspacio;\n      } else if (tipoEvento === \"eventoPersonal\") {\n        listaEventosCache = nuevoCache.eventosPersonalesEspacio;\n      }\n      const indexE = listaEventosCache.findIndex((e) => e.id === evento.id);\n      if (indexE > -1) {\n        listaEventosCache.splice(indexE, 1);\n\n        store.writeQuery({\n          ...infoQuery,\n          data: nuevoCache,\n        });\n      }\n    },\n    addEventoCache(evento) {\n      const tipoEvento =\n        evento.__typename.charAt(0).toLowerCase() + evento.__typename.slice(1);\n      var infoQuery = null;\n      if (tipoEvento === \"eventoPublico\") {\n        infoQuery = {\n          query: QUERY_EVENTOS_PUBLICOS_ESPACIO,\n          variables: {\n            idEspacio: this.idEspacio,\n          },\n        };\n      } else if (tipoEvento === \"eventoPersonal\") {\n        console.log(`add cache eventos personales not developed`);\n        return;\n      } else {\n        console.log(`Tipo evento ${tipoEvento} no reconocido`);\n        return;\n      }\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        ...infoQuery,\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n      var listaEventosCache = null;\n      if (tipoEvento === \"eventoPublico\") {\n        listaEventosCache = nuevoCache.eventosPublicosEspacio;\n      } else if (tipoEvento === \"eventoPersonal\") {\n        listaEventosCache = nuevoCache.eventosPersonalesEspacio;\n      }\n      const indexE = listaEventosCache.findIndex((e) => e.id === evento.id);\n      if (indexE === -1) {\n        listaEventosCache.push(evento);\n\n        store.writeQuery({\n          ...infoQuery,\n          data: nuevoCache,\n        });\n      }\n    },\n  },\n  computed: {\n    eventosPublicosEspacioOrdenados() {\n      return [...this.eventosPublicosEspacio].sort((a, b) => {\n        return (\n          -new Date(a.horarioInicio).getTime() +\n          new Date(b.horarioInicio).getTime()\n        );\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.listaEventosEspacio {\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n.eventoItemLista {\n  margin: 15px 0px;\n}\n</style>"]}]}