{"remainingRequest":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/juan/webPj/pepepe/libro/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/webPj/pepepe/libro/src/components/foros/CuadroResponder.vue?vue&type=template&id=7d938b24&scoped=true&","dependencies":[{"path":"/home/juan/webPj/pepepe/libro/src/components/foros/CuadroResponder.vue","mtime":1621134760520},{"path":"/home/juan/webPj/pepepe/libro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}