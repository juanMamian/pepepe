{"remainingRequest":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/juan/webPj/pepepe/libro/src/components/Libro.vue?vue&type=style&index=0&id=3332e406&scoped=true&lang=css&","dependencies":[{"path":"/home/juan/webPj/pepepe/libro/src/components/Libro.vue","mtime":1619025719576},{"path":"/home/juan/webPj/pepepe/libro/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/juan/webPj/pepepe/libro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saWJybyB7CiAgbWFyZ2luLXRvcDogMTAwcHg7CiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7CiAgcGFkZGluZy1ib3R0b206IDgwdmg7Cn0KI3pvbmFUaXR1bG8gewogIHBhZGRpbmc6IDVweCAxMHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDIycHg7CiAgYm9yZGVyOiAxcHggc29saWQgcHVycGxlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzEgOTQgMTM0KTsKICBtYXJnaW46IDEwcHggYXV0bzsKfQojaW5wdXROdWV2b1RpdHVsb3sKICBmb250LXNpemU6IGluaGVyaXQ7Cn0KCi5iRWRpdGFyVGl0dWxvIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHdpZHRoOiAzNXB4OwogIGhlaWdodDogMzVweDsKfQouYkVkaXRhclRpdHVsbzpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDAsIDEyOCwgMC40NTkpOwp9CgojY29udGVuZWRvclBhZ2luYXMgewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyOwogIHJvdy1nYXA6IDIwcHg7Cn0KI2JDcmVhck51ZXZhUGFnaW5hIHsKICBwYWRkaW5nOiA1cHg7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDY1LCAwLCA2NSk7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODIsIDEwNSwgMTgyLCAwLjI2Nyk7CiAgY3Vyc29yOiBwb2ludGVyOwogIG1hcmdpbjogMTBweCBhdXRvOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBtYXgtd2lkdGg6IDIwMHB4Owp9CgojYkNyZWFyTnVldmFQYWdpbmE6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYigxODIsIDEwNSwgMTgyKTsKfQoKLnRpdHVsb0Zvcm97CiAgZm9udC1zaXplOiAxOXB4OwogIHBhZGRpbmc6IDVweCAxMHB4OwogIGJhY2tncm91bmQtY29sb3I6IGNhZGV0Ymx1ZTsKfQo="},{"version":3,"sources":["Libro.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAibA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Libro.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"libro\" @click=\"idPaginaSeleccionada = null\">\n    <div id=\"zonaTitulo\">\n      <div id=\"titulo\" v-show=\"!editandoTitulo\">\n        {{ libro.titulo }}\n      </div>\n      <input\n        type=\"text\"\n        id=\"inputNuevoTitulo\"\n        :class=\"{ letrasRojas: nuevoTituloIlegal }\"\n        v-model=\"nuevoTitulo\"\n        v-show=\"editandoTitulo\"\n        @keypress.enter=\"guardarNuevoTitulo\"\n      />\n      <div id=\"controlesTitulo\">\n        <img\n          src=\"@/assets/iconos/editar.png\"\n          alt=\"Editar\"\n          id=\"bEditarrTitulo\"\n          class=\"bEditarTitulo\"\n          title=\"Editar titulo del libro\"\n          @click.stop=\"toggleEditandoTitulo\"\n        />\n        <img\n          src=\"@/assets/iconos/guardar.png\"\n          alt=\"Guardar\"\n          title=\"guardar\"\n          class=\"bEditarTitulo\"\n          id=\"bGuardarNuevoTitulo\"\n          v-show=\"editandoTitulo == true && nuevoTituloIlegal == false\"\n          @click.stop=\"guardarNuevoTitulo\"\n        />\n      </div>\n    </div>\n\n    \n\n    <div id=\"contenedorPaginas\">\n      <pagina\n        v-for=\"(pagina, index) of paginasOrdenadas\"\n        :key=\"pagina.id\"\n        :paginaDerecha=\"index % 2 > 0 || index == 0\"\n        :estaPagina=\"pagina\"\n        :idLibro=\"idLibro\"\n        :seleccionada=\"idPaginaSeleccionada == pagina.id\"\n        :segundoPlano=\"\n          idPaginaSeleccionada != null && idPaginaSeleccionada != pagina.id\n        \"\n        @click.native.stop=\"idPaginaSeleccionada = pagina.id\"\n        @meElimine=\"removePaginaFromCache(pagina.id)\"\n        @tengoNuevoCuadroTexto=\"updateCacheConNuevoCuadroTexto($event, pagina.id)\"\n        @tengoNuevoCuadroImagen=\"updateCacheConNuevoCuadroImagen($event, pagina.id)\"\n        @elimineCuadroTexto=\"removeCuadroTextoFromCache($event, pagina.id)\"\n        @elimineCuadroImagen=\"removeCuadroImagenFromCache($event, pagina.id)\"\n      />\n    </div>\n\n    <div\n      id=\"bCrearNuevaPagina\"\n      @click.stop=\"crearNuevaPaginaLibro\"\n      :class=\"{ deshabilitado: creandoPagina }\"\n    >\n      Crear nueva página\n    </div>\n\n    <div id=\"zonaForos\">\n      <div class=\"tituloForo\">Foro de editores</div>\n      <foro v-if=\"libro.idForo\" :parent=\"infoAsParent\" :idForo=\"libro.idForo\"/>\n\n    </div>\n\n\n\n  </div>\n</template>\n\n<script>\nimport gql from \"graphql-tag\";\nimport Pagina from \"./Pagina.vue\";\nimport Foro from './Foro.vue';\nconst charProhibidosTitulo = /[^ a-zA-ZÀ-ž0-9_():.,-¿?¡!]/;\n\nexport const fragmentoCuadroTexto = gql`\n  fragment fragCuadroTexto on CuadroTextoCuento {\n    id\n    texto\n    posicionZeta\n    posicion {\n      x\n      y\n    }\n    size {\n      x\n      y\n    }\n    audio {\n      tipoReproduccion\n    }\n    formato {\n      fontSize\n      colorLetra\n      tipoLetra\n      alineacion\n    }\n  }\n`;\n\nexport const fragmentoCuadroImagen = gql`\n  fragment fragCuadroImagen on CuadroImagenCuento {\n    id\n    sinArchivo\n    tipoActivacionSecundario\n    posicionZeta\n    posicion {\n      x\n      y\n    }\n    size {\n      x\n      y\n    }\n    audio {\n      tipoReproduccion\n    }\n  }\n`;\n\nconst fragmentoPagina = gql`\n  fragment fragPagina on PaginaCuento {\n    id    \n    numPag\n    color\n    cuadrosTexto {\n      ...fragCuadroTexto\n    }\n    cuadrosImagen {\n      ...fragCuadroImagen\n    }\n  }\n  ${fragmentoCuadroTexto}\n  ${fragmentoCuadroImagen}\n`;\n\nconst QUERY_LIBRO = gql`\n  query($idLibro: ID!) {\n    libro(idLibro: $idLibro) {\n      id\n      idsEditores\n      titulo\n      paginas {\n        ...fragPagina\n      },\n      idForo\n    }\n  }\n  ${fragmentoPagina}\n`;\n\nexport default {\n  components: { Pagina, Foro },\n  name: \"Libro\",\n  apollo: {\n    libro: {\n      query: QUERY_LIBRO,\n      variables() {\n        return {\n          idLibro: this.idLibro,\n        };\n      },\n      skip() {\n        return this.idLibro == null;\n      },\n      fetchPolicy:\"cache-and-network\"\n    },\n  },\n  props: {\n    idLibro: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      libro: {\n        paginas: null,\n      },\n      idPaginaSeleccionada: null,\n\n      creandoPagina: false,\n\n      nuevoTitulo: null,\n      editandoTitulo: false,\n    };\n  },\n  computed: {\n    paginasOrdenadas() {\n      if (this.libro.paginas) {\n        var aPags = this.libro.paginas;\n        return aPags.sort((a, b) => {\n          return parseInt(a.numPag) - parseInt(b.numPag);\n        });\n      }\n      return [];\n    },\n    nuevoTituloIlegal() {\n      if (!this.nuevoTitulo || this.nuevoTitulo.length < 1) {\n        return true;\n      }\n      if (charProhibidosTitulo.test(this.nuevoTitulo)) {\n        return true;\n      }\n      return false;\n    },\n    infoAsParent() {\n      return {\n        id: this.idLibro,\n        tipo: \"libro\",\n        nombre: this.libro.titulo,\n      };\n    },\n  },\n  methods: {\n    toggleEditandoTitulo() {\n      this.editandoTitulo = !this.editandoTitulo;\n      this.nuevoTitulo = this.libro.titulo;\n    },\n    guardarNuevoTitulo() {\n      if (this.nuevoTituloIlegal) {\n        console.log(`No enviado`);\n        return;\n      }\n      if (this.nuevoTitulo == this.libro.titulo) {\n        this.editandoTitulo = false;\n        return;\n      }\n      console.log(`guardando nuevo título`);\n      this.enviandoNuevoTitulo = true;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation($idLibro: ID!, $nuevoTitulo: String!) {\n              editarTituloLibro(idLibro: $idLibro, nuevoTitulo: $nuevoTitulo) {\n                id\n                titulo\n              }\n            }\n          `,\n          variables: {\n            idLibro: this.idLibro,\n            nuevoTitulo: this.nuevoTitulo,\n          },\n        })\n        .then(() => {\n          this.enviandoNuevoTitulo = false;\n          this.editandoTitulo = false;\n        })\n        .catch((error) => {\n          this.enviandoNuevoTitulo = false;\n          console.log(`Error. E :${error}`);\n        });\n    },\n    crearNuevaPaginaLibro() {\n      this.creandoPagina = true;\n      const dis = this;\n      this.$apollo\n        .mutate({\n          mutation: gql`\n            mutation($idLibro: ID!) {\n              crearNuevaPaginaLibro(idLibro: $idLibro) {\n                ...fragPagina\n              }\n            }\n            ${fragmentoPagina}\n          `,\n          variables: {\n            idLibro: this.idLibro,\n          },\n        })\n        .then(({ data: { crearNuevaPaginaLibro } }) => {\n          var store = this.$apollo.provider.defaultClient;\n          const cache = store.readQuery({\n            query: QUERY_LIBRO,\n            variables: { idLibro: dis.idLibro },\n          });\n          var nuevoCache = JSON.parse(JSON.stringify(cache));\n          nuevoCache.libro.paginas.push(crearNuevaPaginaLibro);\n          store.writeQuery({\n            query: QUERY_LIBRO,\n            variables: { idLibro: dis.idLibro },\n            data: nuevoCache,\n          });\n          this.creandoPagina = false;\n        })\n        .catch((error) => {\n          console.log(`Error: ${error}`);\n          this.creandoPagina = false;\n        });\n    },\n    removePaginaFromCache(idPagina) {\n      this.idPaginaSeleccionada=null;\n      const store = this.$apollo.provider.defaultClient;\n      const cache = store.readQuery({\n        query: QUERY_LIBRO,\n        variables: { idLibro: this.idLibro },\n      });\n      var nuevoCache = JSON.parse(JSON.stringify(cache));\n\n      const indexP = nuevoCache.libro.paginas.findIndex(\n        (p) => p.id == idPagina\n      );\n      if (indexP > -1) {\n        nuevoCache.libro.paginas.splice(indexP, 1);\n\n        store.writeQuery({\n          query: QUERY_LIBRO,\n          variables: { idLibro: this.idLibro },\n          data: nuevoCache,\n        });        \n      } else {\n        console.log(`La pagina no estaba en el caché`);\n      }\n    },\n    updateCacheConNuevoCuadroImagen(nuevoCuadroImagen, idPagina){\n      console.log(`Se actualizara el cache con info: ${nuevoCuadroImagen} en la pagina ${idPagina}`);\n      const store=this.$apollo.provider.defaultClient;\n      const cache=store.readQuery({\n        query: QUERY_LIBRO,\n        variables:{idLibro:this.idLibro}\n      });\n      var nuevoCache=JSON.parse(JSON.stringify(cache));\n      var laPagina=nuevoCache.libro.paginas.find(p=>p.id==idPagina);\n      if(!laPagina){\n        console.log(`Pagina no existía`);\n        return\n      }\n      if(laPagina.cuadrosImagen.some(c=>c==nuevoCuadroImagen.id)){\n        console.log(`Ese cuadro texto ya estaba incluido`);\n        return;\n      }\n      \n      laPagina.cuadrosImagen.push((nuevoCuadroImagen));\n\n      store.writeQuery({\n         query: QUERY_LIBRO,\n        variables:{idLibro:this.idLibro},\n        data:nuevoCache\n      });\n\n    },\n    updateCacheConNuevoCuadroTexto(nuevoCuadroTexto, idPagina){\n      console.log(`Se actualizara el cache con info: ${nuevoCuadroTexto} en la pagina ${idPagina}`);\n      const store=this.$apollo.provider.defaultClient;\n      const cache=store.readQuery({\n        query: QUERY_LIBRO,\n        variables:{idLibro:this.idLibro}\n      });\n      var nuevoCache=JSON.parse(JSON.stringify(cache));\n      var laPagina=nuevoCache.libro.paginas.find(p=>p.id==idPagina);\n      if(!laPagina){\n        console.log(`Pagina no existía`);\n        return\n      }\n      if(laPagina.cuadrosTexto.some(c=>c==nuevoCuadroTexto.id)){\n        console.log(`Ese cuadro texto ya estaba incluido`);\n        return;\n      }\n      laPagina.cuadrosTexto.push(nuevoCuadroTexto);\n\n      store.writeQuery({\n         query: QUERY_LIBRO,\n        variables:{idLibro:this.idLibro},\n        data:nuevoCache\n      })\n    },\n    removeCuadroTextoFromCache(idCuadroTexto, idPagina){\n      const store=this.$apollo.provider.defaultClient;\n      const cache=store.readQuery({\n        query:QUERY_LIBRO,\n        variables:{idLibro:this.idLibro},        \n      });\n      var nuevoCache=JSON.parse(JSON.stringify(cache));\n\n      var laPagina=nuevoCache.libro.paginas.find(p=>p.id==idPagina);\n      if(!laPagina){\n        console.log(`No existía la pagina en el caché`);\n        return \n      }\n\n      const indexC=laPagina.cuadrosTexto.findIndex(c=>c.id==idCuadroTexto);\n      if(indexC>-1){\n        laPagina.cuadrosTexto.splice(indexC, 1);\n        store.writeQuery({\n          query: QUERY_LIBRO,\n          variables:{idLibro:this.idLibro},\n          data: nuevoCache,\n        });\n      }\n      else{\n        console.log(`El cuadro texto no existía en el caché`);\n      }\n    },\n    removeCuadroImagenFromCache(idCuadroImagen, idPagina){\n      const store=this.$apollo.provider.defaultClient;\n      const cache=store.readQuery({\n        query:QUERY_LIBRO,\n        variables:{idLibro:this.idLibro},        \n      });\n      var nuevoCache=JSON.parse(JSON.stringify(cache));\n\n      var laPagina=nuevoCache.libro.paginas.find(p=>p.id==idPagina);\n      if(!laPagina){\n        console.log(`No existía la pagina en el caché`);\n        return \n      }\n\n      const indexC=laPagina.cuadrosImagen.findIndex(c=>c.id==idCuadroImagen);\n      if(indexC>-1){\n        laPagina.cuadrosImagen.splice(indexC, 1);\n        store.writeQuery({\n          query: QUERY_LIBRO,\n          variables:{idLibro:this.idLibro},\n          data: nuevoCache,\n        });\n      }\n      else{\n        console.log(`El cuadro texto no existía en el caché`);\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.libro {\n  margin-top: 100px;\n  border: 2px solid black;\n  padding-bottom: 80vh;\n}\n#zonaTitulo {\n  padding: 5px 10px;\n  text-align: center;\n  font-size: 22px;\n  border: 1px solid purple;\n  background-color: rgb(131 94 134);\n  margin: 10px auto;\n}\n#inputNuevoTitulo{\n  font-size: inherit;\n}\n\n.bEditarTitulo {\n  cursor: pointer;\n  border-radius: 50%;\n  width: 35px;\n  height: 35px;\n}\n.bEditarTitulo:hover {\n  background-color: rgba(128, 0, 128, 0.459);\n}\n\n#contenedorPaginas {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 20px;\n}\n#bCrearNuevaPagina {\n  padding: 5px;\n  border: 1px solid rgb(65, 0, 65);\n  background-color: rgba(182, 105, 182, 0.267);\n  cursor: pointer;\n  margin: 10px auto;\n  border-radius: 5px;\n  max-width: 200px;\n}\n\n#bCrearNuevaPagina:hover {\n  background-color: rgb(182, 105, 182);\n}\n\n.tituloForo{\n  font-size: 19px;\n  padding: 5px 10px;\n  background-color: cadetblue;\n}\n</style>"]}]}